
KPD_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002612  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00002612  000026a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000020  00800080  00800080  000026c6  2**0
                  ALLOC
  3 .stab         00001e90  00000000  00000000  000026c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000ea6  00000000  00000000  00004558  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  000053fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000018f  00000000  00000000  0000555e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002045  00000000  00000000  000056ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001101  00000000  00000000  00007732  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f82  00000000  00000000  00008833  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  000097b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002c2  00000000  00000000  00009938  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000088e  00000000  00000000  00009bfa  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  0000a488  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e1       	ldi	r30, 0x12	; 18
      68:	f6 e2       	ldi	r31, 0x26	; 38
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 38       	cpi	r26, 0x80	; 128
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a0 e8       	ldi	r26, 0x80	; 128
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 3a       	cpi	r26, 0xA0	; 160
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 67 12 	call	0x24ce	; 0x24ce <main>
      8a:	0c 94 07 13 	jmp	0x260e	; 0x260e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 d0 12 	jmp	0x25a0	; 0x25a0 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 ec 12 	jmp	0x25d8	; 0x25d8 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 dc 12 	jmp	0x25b8	; 0x25b8 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 dc 12 	jmp	0x25b8	; 0x25b8 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 d0 12 	jmp	0x25a0	; 0x25a0 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 ec 12 	jmp	0x25d8	; 0x25d8 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 d8 12 	jmp	0x25b0	; 0x25b0 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 a9 04 	call	0x952	; 0x952 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 f4 12 	jmp	0x25e8	; 0x25e8 <__epilogue_restores__+0x10>

0000078a <__gtsf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 dc 12 	jmp	0x25b8	; 0x25b8 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gtsf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gtsf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gtsf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__epilogue_restores__+0x18>

000007ea <__gesf2>:
     7ea:	a8 e1       	ldi	r26, 0x18	; 24
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 dc 12 	jmp	0x25b8	; 0x25b8 <__prologue_saves__+0x18>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	2d 83       	std	Y+5, r18	; 0x05
     800:	3e 83       	std	Y+6, r19	; 0x06
     802:	4f 83       	std	Y+7, r20	; 0x07
     804:	58 87       	std	Y+8, r21	; 0x08
     806:	89 e0       	ldi	r24, 0x09	; 9
     808:	e8 2e       	mov	r14, r24
     80a:	f1 2c       	mov	r15, r1
     80c:	ec 0e       	add	r14, r28
     80e:	fd 1e       	adc	r15, r29
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	b7 01       	movw	r22, r14
     816:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     81a:	8e 01       	movw	r16, r28
     81c:	0f 5e       	subi	r16, 0xEF	; 239
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ce 01       	movw	r24, r28
     822:	05 96       	adiw	r24, 0x05	; 5
     824:	b8 01       	movw	r22, r16
     826:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     82a:	89 85       	ldd	r24, Y+9	; 0x09
     82c:	82 30       	cpi	r24, 0x02	; 2
     82e:	40 f0       	brcs	.+16     	; 0x840 <__gesf2+0x56>
     830:	89 89       	ldd	r24, Y+17	; 0x11
     832:	82 30       	cpi	r24, 0x02	; 2
     834:	28 f0       	brcs	.+10     	; 0x840 <__gesf2+0x56>
     836:	c7 01       	movw	r24, r14
     838:	b8 01       	movw	r22, r16
     83a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     83e:	01 c0       	rjmp	.+2      	; 0x842 <__gesf2+0x58>
     840:	8f ef       	ldi	r24, 0xFF	; 255
     842:	68 96       	adiw	r28, 0x18	; 24
     844:	e6 e0       	ldi	r30, 0x06	; 6
     846:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__epilogue_restores__+0x18>

0000084a <__ltsf2>:
     84a:	a8 e1       	ldi	r26, 0x18	; 24
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	eb e2       	ldi	r30, 0x2B	; 43
     850:	f4 e0       	ldi	r31, 0x04	; 4
     852:	0c 94 dc 12 	jmp	0x25b8	; 0x25b8 <__prologue_saves__+0x18>
     856:	69 83       	std	Y+1, r22	; 0x01
     858:	7a 83       	std	Y+2, r23	; 0x02
     85a:	8b 83       	std	Y+3, r24	; 0x03
     85c:	9c 83       	std	Y+4, r25	; 0x04
     85e:	2d 83       	std	Y+5, r18	; 0x05
     860:	3e 83       	std	Y+6, r19	; 0x06
     862:	4f 83       	std	Y+7, r20	; 0x07
     864:	58 87       	std	Y+8, r21	; 0x08
     866:	89 e0       	ldi	r24, 0x09	; 9
     868:	e8 2e       	mov	r14, r24
     86a:	f1 2c       	mov	r15, r1
     86c:	ec 0e       	add	r14, r28
     86e:	fd 1e       	adc	r15, r29
     870:	ce 01       	movw	r24, r28
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	b7 01       	movw	r22, r14
     876:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     87a:	8e 01       	movw	r16, r28
     87c:	0f 5e       	subi	r16, 0xEF	; 239
     87e:	1f 4f       	sbci	r17, 0xFF	; 255
     880:	ce 01       	movw	r24, r28
     882:	05 96       	adiw	r24, 0x05	; 5
     884:	b8 01       	movw	r22, r16
     886:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     88a:	89 85       	ldd	r24, Y+9	; 0x09
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	40 f0       	brcs	.+16     	; 0x8a0 <__stack+0x41>
     890:	89 89       	ldd	r24, Y+17	; 0x11
     892:	82 30       	cpi	r24, 0x02	; 2
     894:	28 f0       	brcs	.+10     	; 0x8a0 <__stack+0x41>
     896:	c7 01       	movw	r24, r14
     898:	b8 01       	movw	r22, r16
     89a:	0e 94 f6 05 	call	0xbec	; 0xbec <__fpcmp_parts_f>
     89e:	01 c0       	rjmp	.+2      	; 0x8a2 <__stack+0x43>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	68 96       	adiw	r28, 0x18	; 24
     8a4:	e6 e0       	ldi	r30, 0x06	; 6
     8a6:	0c 94 f8 12 	jmp	0x25f0	; 0x25f0 <__epilogue_restores__+0x18>

000008aa <__fixsfsi>:
     8aa:	ac e0       	ldi	r26, 0x0C	; 12
     8ac:	b0 e0       	ldi	r27, 0x00	; 0
     8ae:	eb e5       	ldi	r30, 0x5B	; 91
     8b0:	f4 e0       	ldi	r31, 0x04	; 4
     8b2:	0c 94 e0 12 	jmp	0x25c0	; 0x25c0 <__prologue_saves__+0x20>
     8b6:	69 83       	std	Y+1, r22	; 0x01
     8b8:	7a 83       	std	Y+2, r23	; 0x02
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	9c 83       	std	Y+4, r25	; 0x04
     8be:	ce 01       	movw	r24, r28
     8c0:	01 96       	adiw	r24, 0x01	; 1
     8c2:	be 01       	movw	r22, r28
     8c4:	6b 5f       	subi	r22, 0xFB	; 251
     8c6:	7f 4f       	sbci	r23, 0xFF	; 255
     8c8:	0e 94 7e 05 	call	0xafc	; 0xafc <__unpack_f>
     8cc:	8d 81       	ldd	r24, Y+5	; 0x05
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	61 f1       	breq	.+88     	; 0x92a <__fixsfsi+0x80>
     8d2:	82 30       	cpi	r24, 0x02	; 2
     8d4:	50 f1       	brcs	.+84     	; 0x92a <__fixsfsi+0x80>
     8d6:	84 30       	cpi	r24, 0x04	; 4
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <__fixsfsi+0x38>
     8da:	8e 81       	ldd	r24, Y+6	; 0x06
     8dc:	88 23       	and	r24, r24
     8de:	51 f1       	breq	.+84     	; 0x934 <__fixsfsi+0x8a>
     8e0:	2e c0       	rjmp	.+92     	; 0x93e <__fixsfsi+0x94>
     8e2:	2f 81       	ldd	r18, Y+7	; 0x07
     8e4:	38 85       	ldd	r19, Y+8	; 0x08
     8e6:	37 fd       	sbrc	r19, 7
     8e8:	20 c0       	rjmp	.+64     	; 0x92a <__fixsfsi+0x80>
     8ea:	6e 81       	ldd	r22, Y+6	; 0x06
     8ec:	2f 31       	cpi	r18, 0x1F	; 31
     8ee:	31 05       	cpc	r19, r1
     8f0:	1c f0       	brlt	.+6      	; 0x8f8 <__fixsfsi+0x4e>
     8f2:	66 23       	and	r22, r22
     8f4:	f9 f0       	breq	.+62     	; 0x934 <__fixsfsi+0x8a>
     8f6:	23 c0       	rjmp	.+70     	; 0x93e <__fixsfsi+0x94>
     8f8:	8e e1       	ldi	r24, 0x1E	; 30
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	82 1b       	sub	r24, r18
     8fe:	93 0b       	sbc	r25, r19
     900:	29 85       	ldd	r18, Y+9	; 0x09
     902:	3a 85       	ldd	r19, Y+10	; 0x0a
     904:	4b 85       	ldd	r20, Y+11	; 0x0b
     906:	5c 85       	ldd	r21, Y+12	; 0x0c
     908:	04 c0       	rjmp	.+8      	; 0x912 <__fixsfsi+0x68>
     90a:	56 95       	lsr	r21
     90c:	47 95       	ror	r20
     90e:	37 95       	ror	r19
     910:	27 95       	ror	r18
     912:	8a 95       	dec	r24
     914:	d2 f7       	brpl	.-12     	; 0x90a <__fixsfsi+0x60>
     916:	66 23       	and	r22, r22
     918:	b1 f0       	breq	.+44     	; 0x946 <__fixsfsi+0x9c>
     91a:	50 95       	com	r21
     91c:	40 95       	com	r20
     91e:	30 95       	com	r19
     920:	21 95       	neg	r18
     922:	3f 4f       	sbci	r19, 0xFF	; 255
     924:	4f 4f       	sbci	r20, 0xFF	; 255
     926:	5f 4f       	sbci	r21, 0xFF	; 255
     928:	0e c0       	rjmp	.+28     	; 0x946 <__fixsfsi+0x9c>
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e0       	ldi	r20, 0x00	; 0
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	09 c0       	rjmp	.+18     	; 0x946 <__fixsfsi+0x9c>
     934:	2f ef       	ldi	r18, 0xFF	; 255
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f ef       	ldi	r20, 0xFF	; 255
     93a:	5f e7       	ldi	r21, 0x7F	; 127
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fixsfsi+0x9c>
     93e:	20 e0       	ldi	r18, 0x00	; 0
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	40 e0       	ldi	r20, 0x00	; 0
     944:	50 e8       	ldi	r21, 0x80	; 128
     946:	b9 01       	movw	r22, r18
     948:	ca 01       	movw	r24, r20
     94a:	2c 96       	adiw	r28, 0x0c	; 12
     94c:	e2 e0       	ldi	r30, 0x02	; 2
     94e:	0c 94 fc 12 	jmp	0x25f8	; 0x25f8 <__epilogue_restores__+0x20>

00000952 <__pack_f>:
     952:	df 92       	push	r13
     954:	ef 92       	push	r14
     956:	ff 92       	push	r15
     958:	0f 93       	push	r16
     95a:	1f 93       	push	r17
     95c:	fc 01       	movw	r30, r24
     95e:	e4 80       	ldd	r14, Z+4	; 0x04
     960:	f5 80       	ldd	r15, Z+5	; 0x05
     962:	06 81       	ldd	r16, Z+6	; 0x06
     964:	17 81       	ldd	r17, Z+7	; 0x07
     966:	d1 80       	ldd	r13, Z+1	; 0x01
     968:	80 81       	ld	r24, Z
     96a:	82 30       	cpi	r24, 0x02	; 2
     96c:	48 f4       	brcc	.+18     	; 0x980 <__pack_f+0x2e>
     96e:	80 e0       	ldi	r24, 0x00	; 0
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	a0 e1       	ldi	r26, 0x10	; 16
     974:	b0 e0       	ldi	r27, 0x00	; 0
     976:	e8 2a       	or	r14, r24
     978:	f9 2a       	or	r15, r25
     97a:	0a 2b       	or	r16, r26
     97c:	1b 2b       	or	r17, r27
     97e:	a5 c0       	rjmp	.+330    	; 0xaca <__pack_f+0x178>
     980:	84 30       	cpi	r24, 0x04	; 4
     982:	09 f4       	brne	.+2      	; 0x986 <__pack_f+0x34>
     984:	9f c0       	rjmp	.+318    	; 0xac4 <__pack_f+0x172>
     986:	82 30       	cpi	r24, 0x02	; 2
     988:	21 f4       	brne	.+8      	; 0x992 <__pack_f+0x40>
     98a:	ee 24       	eor	r14, r14
     98c:	ff 24       	eor	r15, r15
     98e:	87 01       	movw	r16, r14
     990:	05 c0       	rjmp	.+10     	; 0x99c <__pack_f+0x4a>
     992:	e1 14       	cp	r14, r1
     994:	f1 04       	cpc	r15, r1
     996:	01 05       	cpc	r16, r1
     998:	11 05       	cpc	r17, r1
     99a:	19 f4       	brne	.+6      	; 0x9a2 <__pack_f+0x50>
     99c:	e0 e0       	ldi	r30, 0x00	; 0
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	96 c0       	rjmp	.+300    	; 0xace <__pack_f+0x17c>
     9a2:	62 81       	ldd	r22, Z+2	; 0x02
     9a4:	73 81       	ldd	r23, Z+3	; 0x03
     9a6:	9f ef       	ldi	r25, 0xFF	; 255
     9a8:	62 38       	cpi	r22, 0x82	; 130
     9aa:	79 07       	cpc	r23, r25
     9ac:	0c f0       	brlt	.+2      	; 0x9b0 <__pack_f+0x5e>
     9ae:	5b c0       	rjmp	.+182    	; 0xa66 <__pack_f+0x114>
     9b0:	22 e8       	ldi	r18, 0x82	; 130
     9b2:	3f ef       	ldi	r19, 0xFF	; 255
     9b4:	26 1b       	sub	r18, r22
     9b6:	37 0b       	sbc	r19, r23
     9b8:	2a 31       	cpi	r18, 0x1A	; 26
     9ba:	31 05       	cpc	r19, r1
     9bc:	2c f0       	brlt	.+10     	; 0x9c8 <__pack_f+0x76>
     9be:	20 e0       	ldi	r18, 0x00	; 0
     9c0:	30 e0       	ldi	r19, 0x00	; 0
     9c2:	40 e0       	ldi	r20, 0x00	; 0
     9c4:	50 e0       	ldi	r21, 0x00	; 0
     9c6:	2a c0       	rjmp	.+84     	; 0xa1c <__pack_f+0xca>
     9c8:	b8 01       	movw	r22, r16
     9ca:	a7 01       	movw	r20, r14
     9cc:	02 2e       	mov	r0, r18
     9ce:	04 c0       	rjmp	.+8      	; 0x9d8 <__pack_f+0x86>
     9d0:	76 95       	lsr	r23
     9d2:	67 95       	ror	r22
     9d4:	57 95       	ror	r21
     9d6:	47 95       	ror	r20
     9d8:	0a 94       	dec	r0
     9da:	d2 f7       	brpl	.-12     	; 0x9d0 <__pack_f+0x7e>
     9dc:	81 e0       	ldi	r24, 0x01	; 1
     9de:	90 e0       	ldi	r25, 0x00	; 0
     9e0:	a0 e0       	ldi	r26, 0x00	; 0
     9e2:	b0 e0       	ldi	r27, 0x00	; 0
     9e4:	04 c0       	rjmp	.+8      	; 0x9ee <__pack_f+0x9c>
     9e6:	88 0f       	add	r24, r24
     9e8:	99 1f       	adc	r25, r25
     9ea:	aa 1f       	adc	r26, r26
     9ec:	bb 1f       	adc	r27, r27
     9ee:	2a 95       	dec	r18
     9f0:	d2 f7       	brpl	.-12     	; 0x9e6 <__pack_f+0x94>
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	a1 09       	sbc	r26, r1
     9f6:	b1 09       	sbc	r27, r1
     9f8:	8e 21       	and	r24, r14
     9fa:	9f 21       	and	r25, r15
     9fc:	a0 23       	and	r26, r16
     9fe:	b1 23       	and	r27, r17
     a00:	00 97       	sbiw	r24, 0x00	; 0
     a02:	a1 05       	cpc	r26, r1
     a04:	b1 05       	cpc	r27, r1
     a06:	21 f0       	breq	.+8      	; 0xa10 <__pack_f+0xbe>
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	a0 e0       	ldi	r26, 0x00	; 0
     a0e:	b0 e0       	ldi	r27, 0x00	; 0
     a10:	9a 01       	movw	r18, r20
     a12:	ab 01       	movw	r20, r22
     a14:	28 2b       	or	r18, r24
     a16:	39 2b       	or	r19, r25
     a18:	4a 2b       	or	r20, r26
     a1a:	5b 2b       	or	r21, r27
     a1c:	da 01       	movw	r26, r20
     a1e:	c9 01       	movw	r24, r18
     a20:	8f 77       	andi	r24, 0x7F	; 127
     a22:	90 70       	andi	r25, 0x00	; 0
     a24:	a0 70       	andi	r26, 0x00	; 0
     a26:	b0 70       	andi	r27, 0x00	; 0
     a28:	80 34       	cpi	r24, 0x40	; 64
     a2a:	91 05       	cpc	r25, r1
     a2c:	a1 05       	cpc	r26, r1
     a2e:	b1 05       	cpc	r27, r1
     a30:	39 f4       	brne	.+14     	; 0xa40 <__pack_f+0xee>
     a32:	27 ff       	sbrs	r18, 7
     a34:	09 c0       	rjmp	.+18     	; 0xa48 <__pack_f+0xf6>
     a36:	20 5c       	subi	r18, 0xC0	; 192
     a38:	3f 4f       	sbci	r19, 0xFF	; 255
     a3a:	4f 4f       	sbci	r20, 0xFF	; 255
     a3c:	5f 4f       	sbci	r21, 0xFF	; 255
     a3e:	04 c0       	rjmp	.+8      	; 0xa48 <__pack_f+0xf6>
     a40:	21 5c       	subi	r18, 0xC1	; 193
     a42:	3f 4f       	sbci	r19, 0xFF	; 255
     a44:	4f 4f       	sbci	r20, 0xFF	; 255
     a46:	5f 4f       	sbci	r21, 0xFF	; 255
     a48:	e0 e0       	ldi	r30, 0x00	; 0
     a4a:	f0 e0       	ldi	r31, 0x00	; 0
     a4c:	20 30       	cpi	r18, 0x00	; 0
     a4e:	a0 e0       	ldi	r26, 0x00	; 0
     a50:	3a 07       	cpc	r19, r26
     a52:	a0 e0       	ldi	r26, 0x00	; 0
     a54:	4a 07       	cpc	r20, r26
     a56:	a0 e4       	ldi	r26, 0x40	; 64
     a58:	5a 07       	cpc	r21, r26
     a5a:	10 f0       	brcs	.+4      	; 0xa60 <__pack_f+0x10e>
     a5c:	e1 e0       	ldi	r30, 0x01	; 1
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	79 01       	movw	r14, r18
     a62:	8a 01       	movw	r16, r20
     a64:	27 c0       	rjmp	.+78     	; 0xab4 <__pack_f+0x162>
     a66:	60 38       	cpi	r22, 0x80	; 128
     a68:	71 05       	cpc	r23, r1
     a6a:	64 f5       	brge	.+88     	; 0xac4 <__pack_f+0x172>
     a6c:	fb 01       	movw	r30, r22
     a6e:	e1 58       	subi	r30, 0x81	; 129
     a70:	ff 4f       	sbci	r31, 0xFF	; 255
     a72:	d8 01       	movw	r26, r16
     a74:	c7 01       	movw	r24, r14
     a76:	8f 77       	andi	r24, 0x7F	; 127
     a78:	90 70       	andi	r25, 0x00	; 0
     a7a:	a0 70       	andi	r26, 0x00	; 0
     a7c:	b0 70       	andi	r27, 0x00	; 0
     a7e:	80 34       	cpi	r24, 0x40	; 64
     a80:	91 05       	cpc	r25, r1
     a82:	a1 05       	cpc	r26, r1
     a84:	b1 05       	cpc	r27, r1
     a86:	39 f4       	brne	.+14     	; 0xa96 <__pack_f+0x144>
     a88:	e7 fe       	sbrs	r14, 7
     a8a:	0d c0       	rjmp	.+26     	; 0xaa6 <__pack_f+0x154>
     a8c:	80 e4       	ldi	r24, 0x40	; 64
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	a0 e0       	ldi	r26, 0x00	; 0
     a92:	b0 e0       	ldi	r27, 0x00	; 0
     a94:	04 c0       	rjmp	.+8      	; 0xa9e <__pack_f+0x14c>
     a96:	8f e3       	ldi	r24, 0x3F	; 63
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	a0 e0       	ldi	r26, 0x00	; 0
     a9c:	b0 e0       	ldi	r27, 0x00	; 0
     a9e:	e8 0e       	add	r14, r24
     aa0:	f9 1e       	adc	r15, r25
     aa2:	0a 1f       	adc	r16, r26
     aa4:	1b 1f       	adc	r17, r27
     aa6:	17 ff       	sbrs	r17, 7
     aa8:	05 c0       	rjmp	.+10     	; 0xab4 <__pack_f+0x162>
     aaa:	16 95       	lsr	r17
     aac:	07 95       	ror	r16
     aae:	f7 94       	ror	r15
     ab0:	e7 94       	ror	r14
     ab2:	31 96       	adiw	r30, 0x01	; 1
     ab4:	87 e0       	ldi	r24, 0x07	; 7
     ab6:	16 95       	lsr	r17
     ab8:	07 95       	ror	r16
     aba:	f7 94       	ror	r15
     abc:	e7 94       	ror	r14
     abe:	8a 95       	dec	r24
     ac0:	d1 f7       	brne	.-12     	; 0xab6 <__pack_f+0x164>
     ac2:	05 c0       	rjmp	.+10     	; 0xace <__pack_f+0x17c>
     ac4:	ee 24       	eor	r14, r14
     ac6:	ff 24       	eor	r15, r15
     ac8:	87 01       	movw	r16, r14
     aca:	ef ef       	ldi	r30, 0xFF	; 255
     acc:	f0 e0       	ldi	r31, 0x00	; 0
     ace:	6e 2f       	mov	r22, r30
     ad0:	67 95       	ror	r22
     ad2:	66 27       	eor	r22, r22
     ad4:	67 95       	ror	r22
     ad6:	90 2f       	mov	r25, r16
     ad8:	9f 77       	andi	r25, 0x7F	; 127
     ada:	d7 94       	ror	r13
     adc:	dd 24       	eor	r13, r13
     ade:	d7 94       	ror	r13
     ae0:	8e 2f       	mov	r24, r30
     ae2:	86 95       	lsr	r24
     ae4:	49 2f       	mov	r20, r25
     ae6:	46 2b       	or	r20, r22
     ae8:	58 2f       	mov	r21, r24
     aea:	5d 29       	or	r21, r13
     aec:	b7 01       	movw	r22, r14
     aee:	ca 01       	movw	r24, r20
     af0:	1f 91       	pop	r17
     af2:	0f 91       	pop	r16
     af4:	ff 90       	pop	r15
     af6:	ef 90       	pop	r14
     af8:	df 90       	pop	r13
     afa:	08 95       	ret

00000afc <__unpack_f>:
     afc:	fc 01       	movw	r30, r24
     afe:	db 01       	movw	r26, r22
     b00:	40 81       	ld	r20, Z
     b02:	51 81       	ldd	r21, Z+1	; 0x01
     b04:	22 81       	ldd	r18, Z+2	; 0x02
     b06:	62 2f       	mov	r22, r18
     b08:	6f 77       	andi	r22, 0x7F	; 127
     b0a:	70 e0       	ldi	r23, 0x00	; 0
     b0c:	22 1f       	adc	r18, r18
     b0e:	22 27       	eor	r18, r18
     b10:	22 1f       	adc	r18, r18
     b12:	93 81       	ldd	r25, Z+3	; 0x03
     b14:	89 2f       	mov	r24, r25
     b16:	88 0f       	add	r24, r24
     b18:	82 2b       	or	r24, r18
     b1a:	28 2f       	mov	r18, r24
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	99 1f       	adc	r25, r25
     b20:	99 27       	eor	r25, r25
     b22:	99 1f       	adc	r25, r25
     b24:	11 96       	adiw	r26, 0x01	; 1
     b26:	9c 93       	st	X, r25
     b28:	11 97       	sbiw	r26, 0x01	; 1
     b2a:	21 15       	cp	r18, r1
     b2c:	31 05       	cpc	r19, r1
     b2e:	a9 f5       	brne	.+106    	; 0xb9a <__unpack_f+0x9e>
     b30:	41 15       	cp	r20, r1
     b32:	51 05       	cpc	r21, r1
     b34:	61 05       	cpc	r22, r1
     b36:	71 05       	cpc	r23, r1
     b38:	11 f4       	brne	.+4      	; 0xb3e <__unpack_f+0x42>
     b3a:	82 e0       	ldi	r24, 0x02	; 2
     b3c:	37 c0       	rjmp	.+110    	; 0xbac <__unpack_f+0xb0>
     b3e:	82 e8       	ldi	r24, 0x82	; 130
     b40:	9f ef       	ldi	r25, 0xFF	; 255
     b42:	13 96       	adiw	r26, 0x03	; 3
     b44:	9c 93       	st	X, r25
     b46:	8e 93       	st	-X, r24
     b48:	12 97       	sbiw	r26, 0x02	; 2
     b4a:	9a 01       	movw	r18, r20
     b4c:	ab 01       	movw	r20, r22
     b4e:	67 e0       	ldi	r22, 0x07	; 7
     b50:	22 0f       	add	r18, r18
     b52:	33 1f       	adc	r19, r19
     b54:	44 1f       	adc	r20, r20
     b56:	55 1f       	adc	r21, r21
     b58:	6a 95       	dec	r22
     b5a:	d1 f7       	brne	.-12     	; 0xb50 <__unpack_f+0x54>
     b5c:	83 e0       	ldi	r24, 0x03	; 3
     b5e:	8c 93       	st	X, r24
     b60:	0d c0       	rjmp	.+26     	; 0xb7c <__unpack_f+0x80>
     b62:	22 0f       	add	r18, r18
     b64:	33 1f       	adc	r19, r19
     b66:	44 1f       	adc	r20, r20
     b68:	55 1f       	adc	r21, r21
     b6a:	12 96       	adiw	r26, 0x02	; 2
     b6c:	8d 91       	ld	r24, X+
     b6e:	9c 91       	ld	r25, X
     b70:	13 97       	sbiw	r26, 0x03	; 3
     b72:	01 97       	sbiw	r24, 0x01	; 1
     b74:	13 96       	adiw	r26, 0x03	; 3
     b76:	9c 93       	st	X, r25
     b78:	8e 93       	st	-X, r24
     b7a:	12 97       	sbiw	r26, 0x02	; 2
     b7c:	20 30       	cpi	r18, 0x00	; 0
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	38 07       	cpc	r19, r24
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	48 07       	cpc	r20, r24
     b86:	80 e4       	ldi	r24, 0x40	; 64
     b88:	58 07       	cpc	r21, r24
     b8a:	58 f3       	brcs	.-42     	; 0xb62 <__unpack_f+0x66>
     b8c:	14 96       	adiw	r26, 0x04	; 4
     b8e:	2d 93       	st	X+, r18
     b90:	3d 93       	st	X+, r19
     b92:	4d 93       	st	X+, r20
     b94:	5c 93       	st	X, r21
     b96:	17 97       	sbiw	r26, 0x07	; 7
     b98:	08 95       	ret
     b9a:	2f 3f       	cpi	r18, 0xFF	; 255
     b9c:	31 05       	cpc	r19, r1
     b9e:	79 f4       	brne	.+30     	; 0xbbe <__unpack_f+0xc2>
     ba0:	41 15       	cp	r20, r1
     ba2:	51 05       	cpc	r21, r1
     ba4:	61 05       	cpc	r22, r1
     ba6:	71 05       	cpc	r23, r1
     ba8:	19 f4       	brne	.+6      	; 0xbb0 <__unpack_f+0xb4>
     baa:	84 e0       	ldi	r24, 0x04	; 4
     bac:	8c 93       	st	X, r24
     bae:	08 95       	ret
     bb0:	64 ff       	sbrs	r22, 4
     bb2:	03 c0       	rjmp	.+6      	; 0xbba <__unpack_f+0xbe>
     bb4:	81 e0       	ldi	r24, 0x01	; 1
     bb6:	8c 93       	st	X, r24
     bb8:	12 c0       	rjmp	.+36     	; 0xbde <__unpack_f+0xe2>
     bba:	1c 92       	st	X, r1
     bbc:	10 c0       	rjmp	.+32     	; 0xbde <__unpack_f+0xe2>
     bbe:	2f 57       	subi	r18, 0x7F	; 127
     bc0:	30 40       	sbci	r19, 0x00	; 0
     bc2:	13 96       	adiw	r26, 0x03	; 3
     bc4:	3c 93       	st	X, r19
     bc6:	2e 93       	st	-X, r18
     bc8:	12 97       	sbiw	r26, 0x02	; 2
     bca:	83 e0       	ldi	r24, 0x03	; 3
     bcc:	8c 93       	st	X, r24
     bce:	87 e0       	ldi	r24, 0x07	; 7
     bd0:	44 0f       	add	r20, r20
     bd2:	55 1f       	adc	r21, r21
     bd4:	66 1f       	adc	r22, r22
     bd6:	77 1f       	adc	r23, r23
     bd8:	8a 95       	dec	r24
     bda:	d1 f7       	brne	.-12     	; 0xbd0 <__unpack_f+0xd4>
     bdc:	70 64       	ori	r23, 0x40	; 64
     bde:	14 96       	adiw	r26, 0x04	; 4
     be0:	4d 93       	st	X+, r20
     be2:	5d 93       	st	X+, r21
     be4:	6d 93       	st	X+, r22
     be6:	7c 93       	st	X, r23
     be8:	17 97       	sbiw	r26, 0x07	; 7
     bea:	08 95       	ret

00000bec <__fpcmp_parts_f>:
     bec:	1f 93       	push	r17
     bee:	dc 01       	movw	r26, r24
     bf0:	fb 01       	movw	r30, r22
     bf2:	9c 91       	ld	r25, X
     bf4:	92 30       	cpi	r25, 0x02	; 2
     bf6:	08 f4       	brcc	.+2      	; 0xbfa <__fpcmp_parts_f+0xe>
     bf8:	47 c0       	rjmp	.+142    	; 0xc88 <__fpcmp_parts_f+0x9c>
     bfa:	80 81       	ld	r24, Z
     bfc:	82 30       	cpi	r24, 0x02	; 2
     bfe:	08 f4       	brcc	.+2      	; 0xc02 <__fpcmp_parts_f+0x16>
     c00:	43 c0       	rjmp	.+134    	; 0xc88 <__fpcmp_parts_f+0x9c>
     c02:	94 30       	cpi	r25, 0x04	; 4
     c04:	51 f4       	brne	.+20     	; 0xc1a <__fpcmp_parts_f+0x2e>
     c06:	11 96       	adiw	r26, 0x01	; 1
     c08:	1c 91       	ld	r17, X
     c0a:	84 30       	cpi	r24, 0x04	; 4
     c0c:	99 f5       	brne	.+102    	; 0xc74 <__fpcmp_parts_f+0x88>
     c0e:	81 81       	ldd	r24, Z+1	; 0x01
     c10:	68 2f       	mov	r22, r24
     c12:	70 e0       	ldi	r23, 0x00	; 0
     c14:	61 1b       	sub	r22, r17
     c16:	71 09       	sbc	r23, r1
     c18:	3f c0       	rjmp	.+126    	; 0xc98 <__fpcmp_parts_f+0xac>
     c1a:	84 30       	cpi	r24, 0x04	; 4
     c1c:	21 f0       	breq	.+8      	; 0xc26 <__fpcmp_parts_f+0x3a>
     c1e:	92 30       	cpi	r25, 0x02	; 2
     c20:	31 f4       	brne	.+12     	; 0xc2e <__fpcmp_parts_f+0x42>
     c22:	82 30       	cpi	r24, 0x02	; 2
     c24:	b9 f1       	breq	.+110    	; 0xc94 <__fpcmp_parts_f+0xa8>
     c26:	81 81       	ldd	r24, Z+1	; 0x01
     c28:	88 23       	and	r24, r24
     c2a:	89 f1       	breq	.+98     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c2c:	2d c0       	rjmp	.+90     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c2e:	11 96       	adiw	r26, 0x01	; 1
     c30:	1c 91       	ld	r17, X
     c32:	11 97       	sbiw	r26, 0x01	; 1
     c34:	82 30       	cpi	r24, 0x02	; 2
     c36:	f1 f0       	breq	.+60     	; 0xc74 <__fpcmp_parts_f+0x88>
     c38:	81 81       	ldd	r24, Z+1	; 0x01
     c3a:	18 17       	cp	r17, r24
     c3c:	d9 f4       	brne	.+54     	; 0xc74 <__fpcmp_parts_f+0x88>
     c3e:	12 96       	adiw	r26, 0x02	; 2
     c40:	2d 91       	ld	r18, X+
     c42:	3c 91       	ld	r19, X
     c44:	13 97       	sbiw	r26, 0x03	; 3
     c46:	82 81       	ldd	r24, Z+2	; 0x02
     c48:	93 81       	ldd	r25, Z+3	; 0x03
     c4a:	82 17       	cp	r24, r18
     c4c:	93 07       	cpc	r25, r19
     c4e:	94 f0       	brlt	.+36     	; 0xc74 <__fpcmp_parts_f+0x88>
     c50:	28 17       	cp	r18, r24
     c52:	39 07       	cpc	r19, r25
     c54:	bc f0       	brlt	.+46     	; 0xc84 <__fpcmp_parts_f+0x98>
     c56:	14 96       	adiw	r26, 0x04	; 4
     c58:	8d 91       	ld	r24, X+
     c5a:	9d 91       	ld	r25, X+
     c5c:	0d 90       	ld	r0, X+
     c5e:	bc 91       	ld	r27, X
     c60:	a0 2d       	mov	r26, r0
     c62:	24 81       	ldd	r18, Z+4	; 0x04
     c64:	35 81       	ldd	r19, Z+5	; 0x05
     c66:	46 81       	ldd	r20, Z+6	; 0x06
     c68:	57 81       	ldd	r21, Z+7	; 0x07
     c6a:	28 17       	cp	r18, r24
     c6c:	39 07       	cpc	r19, r25
     c6e:	4a 07       	cpc	r20, r26
     c70:	5b 07       	cpc	r21, r27
     c72:	18 f4       	brcc	.+6      	; 0xc7a <__fpcmp_parts_f+0x8e>
     c74:	11 23       	and	r17, r17
     c76:	41 f0       	breq	.+16     	; 0xc88 <__fpcmp_parts_f+0x9c>
     c78:	0a c0       	rjmp	.+20     	; 0xc8e <__fpcmp_parts_f+0xa2>
     c7a:	82 17       	cp	r24, r18
     c7c:	93 07       	cpc	r25, r19
     c7e:	a4 07       	cpc	r26, r20
     c80:	b5 07       	cpc	r27, r21
     c82:	40 f4       	brcc	.+16     	; 0xc94 <__fpcmp_parts_f+0xa8>
     c84:	11 23       	and	r17, r17
     c86:	19 f0       	breq	.+6      	; 0xc8e <__fpcmp_parts_f+0xa2>
     c88:	61 e0       	ldi	r22, 0x01	; 1
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <__fpcmp_parts_f+0xac>
     c8e:	6f ef       	ldi	r22, 0xFF	; 255
     c90:	7f ef       	ldi	r23, 0xFF	; 255
     c92:	02 c0       	rjmp	.+4      	; 0xc98 <__fpcmp_parts_f+0xac>
     c94:	60 e0       	ldi	r22, 0x00	; 0
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	cb 01       	movw	r24, r22
     c9a:	1f 91       	pop	r17
     c9c:	08 95       	ret

00000c9e <DIO_set_pin_direction>:
#include "DIO_config.h"
#include "DIO_private.h"
#include "DIO_interface.h"

U8 DIO_set_pin_direction(U8 port_NB,U8 pin_NB,U8 pin_direction)
{
     c9e:	df 93       	push	r29
     ca0:	cf 93       	push	r28
     ca2:	00 d0       	rcall	.+0      	; 0xca4 <DIO_set_pin_direction+0x6>
     ca4:	00 d0       	rcall	.+0      	; 0xca6 <DIO_set_pin_direction+0x8>
     ca6:	00 d0       	rcall	.+0      	; 0xca8 <DIO_set_pin_direction+0xa>
     ca8:	cd b7       	in	r28, 0x3d	; 61
     caa:	de b7       	in	r29, 0x3e	; 62
     cac:	8a 83       	std	Y+2, r24	; 0x02
     cae:	6b 83       	std	Y+3, r22	; 0x03
     cb0:	4c 83       	std	Y+4, r20	; 0x04
U8 error_state = 0;
     cb2:	19 82       	std	Y+1, r1	; 0x01
if(port_NB>= DIO_Max_port_NB)
     cb4:	8a 81       	ldd	r24, Y+2	; 0x02
     cb6:	84 30       	cpi	r24, 0x04	; 4
     cb8:	18 f0       	brcs	.+6      	; 0xcc0 <DIO_set_pin_direction+0x22>
{
	error_state = 1;
     cba:	81 e0       	ldi	r24, 0x01	; 1
     cbc:	89 83       	std	Y+1, r24	; 0x01
     cbe:	e0 c0       	rjmp	.+448    	; 0xe80 <DIO_set_pin_direction+0x1e2>
}
else if(pin_NB>=DIO_Max_pin_NB )
     cc0:	8b 81       	ldd	r24, Y+3	; 0x03
     cc2:	88 30       	cpi	r24, 0x08	; 8
     cc4:	18 f0       	brcs	.+6      	; 0xccc <DIO_set_pin_direction+0x2e>
{
	error_state = 1;
     cc6:	81 e0       	ldi	r24, 0x01	; 1
     cc8:	89 83       	std	Y+1, r24	; 0x01
     cca:	da c0       	rjmp	.+436    	; 0xe80 <DIO_set_pin_direction+0x1e2>
}
else if((pin_direction !=DIO_Input) && (pin_direction!=DIO_Output))
     ccc:	8c 81       	ldd	r24, Y+4	; 0x04
     cce:	88 23       	and	r24, r24
     cd0:	31 f0       	breq	.+12     	; 0xcde <DIO_set_pin_direction+0x40>
     cd2:	8c 81       	ldd	r24, Y+4	; 0x04
     cd4:	81 30       	cpi	r24, 0x01	; 1
     cd6:	19 f0       	breq	.+6      	; 0xcde <DIO_set_pin_direction+0x40>
{
	error_state = 1;
     cd8:	81 e0       	ldi	r24, 0x01	; 1
     cda:	89 83       	std	Y+1, r24	; 0x01
     cdc:	d1 c0       	rjmp	.+418    	; 0xe80 <DIO_set_pin_direction+0x1e2>
}
else{
     switch(port_NB){
     cde:	8a 81       	ldd	r24, Y+2	; 0x02
     ce0:	28 2f       	mov	r18, r24
     ce2:	30 e0       	ldi	r19, 0x00	; 0
     ce4:	3e 83       	std	Y+6, r19	; 0x06
     ce6:	2d 83       	std	Y+5, r18	; 0x05
     ce8:	8d 81       	ldd	r24, Y+5	; 0x05
     cea:	9e 81       	ldd	r25, Y+6	; 0x06
     cec:	81 30       	cpi	r24, 0x01	; 1
     cee:	91 05       	cpc	r25, r1
     cf0:	09 f4       	brne	.+2      	; 0xcf4 <DIO_set_pin_direction+0x56>
     cf2:	43 c0       	rjmp	.+134    	; 0xd7a <DIO_set_pin_direction+0xdc>
     cf4:	2d 81       	ldd	r18, Y+5	; 0x05
     cf6:	3e 81       	ldd	r19, Y+6	; 0x06
     cf8:	22 30       	cpi	r18, 0x02	; 2
     cfa:	31 05       	cpc	r19, r1
     cfc:	2c f4       	brge	.+10     	; 0xd08 <DIO_set_pin_direction+0x6a>
     cfe:	8d 81       	ldd	r24, Y+5	; 0x05
     d00:	9e 81       	ldd	r25, Y+6	; 0x06
     d02:	00 97       	sbiw	r24, 0x00	; 0
     d04:	71 f0       	breq	.+28     	; 0xd22 <DIO_set_pin_direction+0x84>
     d06:	bc c0       	rjmp	.+376    	; 0xe80 <DIO_set_pin_direction+0x1e2>
     d08:	2d 81       	ldd	r18, Y+5	; 0x05
     d0a:	3e 81       	ldd	r19, Y+6	; 0x06
     d0c:	22 30       	cpi	r18, 0x02	; 2
     d0e:	31 05       	cpc	r19, r1
     d10:	09 f4       	brne	.+2      	; 0xd14 <DIO_set_pin_direction+0x76>
     d12:	5f c0       	rjmp	.+190    	; 0xdd2 <DIO_set_pin_direction+0x134>
     d14:	8d 81       	ldd	r24, Y+5	; 0x05
     d16:	9e 81       	ldd	r25, Y+6	; 0x06
     d18:	83 30       	cpi	r24, 0x03	; 3
     d1a:	91 05       	cpc	r25, r1
     d1c:	09 f4       	brne	.+2      	; 0xd20 <DIO_set_pin_direction+0x82>
     d1e:	85 c0       	rjmp	.+266    	; 0xe2a <DIO_set_pin_direction+0x18c>
     d20:	af c0       	rjmp	.+350    	; 0xe80 <DIO_set_pin_direction+0x1e2>
      case Group_A:
	   assign_bit(DIO_U8_DDRA,pin_NB,pin_direction);
     d22:	8c 81       	ldd	r24, Y+4	; 0x04
     d24:	81 30       	cpi	r24, 0x01	; 1
     d26:	a1 f4       	brne	.+40     	; 0xd50 <DIO_set_pin_direction+0xb2>
     d28:	aa e3       	ldi	r26, 0x3A	; 58
     d2a:	b0 e0       	ldi	r27, 0x00	; 0
     d2c:	ea e3       	ldi	r30, 0x3A	; 58
     d2e:	f0 e0       	ldi	r31, 0x00	; 0
     d30:	80 81       	ld	r24, Z
     d32:	48 2f       	mov	r20, r24
     d34:	8b 81       	ldd	r24, Y+3	; 0x03
     d36:	28 2f       	mov	r18, r24
     d38:	30 e0       	ldi	r19, 0x00	; 0
     d3a:	81 e0       	ldi	r24, 0x01	; 1
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	02 2e       	mov	r0, r18
     d40:	02 c0       	rjmp	.+4      	; 0xd46 <DIO_set_pin_direction+0xa8>
     d42:	88 0f       	add	r24, r24
     d44:	99 1f       	adc	r25, r25
     d46:	0a 94       	dec	r0
     d48:	e2 f7       	brpl	.-8      	; 0xd42 <DIO_set_pin_direction+0xa4>
     d4a:	84 2b       	or	r24, r20
     d4c:	8c 93       	st	X, r24
     d4e:	98 c0       	rjmp	.+304    	; 0xe80 <DIO_set_pin_direction+0x1e2>
     d50:	aa e3       	ldi	r26, 0x3A	; 58
     d52:	b0 e0       	ldi	r27, 0x00	; 0
     d54:	ea e3       	ldi	r30, 0x3A	; 58
     d56:	f0 e0       	ldi	r31, 0x00	; 0
     d58:	80 81       	ld	r24, Z
     d5a:	48 2f       	mov	r20, r24
     d5c:	8b 81       	ldd	r24, Y+3	; 0x03
     d5e:	28 2f       	mov	r18, r24
     d60:	30 e0       	ldi	r19, 0x00	; 0
     d62:	81 e0       	ldi	r24, 0x01	; 1
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	02 2e       	mov	r0, r18
     d68:	02 c0       	rjmp	.+4      	; 0xd6e <DIO_set_pin_direction+0xd0>
     d6a:	88 0f       	add	r24, r24
     d6c:	99 1f       	adc	r25, r25
     d6e:	0a 94       	dec	r0
     d70:	e2 f7       	brpl	.-8      	; 0xd6a <DIO_set_pin_direction+0xcc>
     d72:	80 95       	com	r24
     d74:	84 23       	and	r24, r20
     d76:	8c 93       	st	X, r24
     d78:	83 c0       	rjmp	.+262    	; 0xe80 <DIO_set_pin_direction+0x1e2>
	   break;
	   case Group_B:
	   assign_bit(DIO_U8_DDRB,pin_NB,pin_direction);
     d7a:	8c 81       	ldd	r24, Y+4	; 0x04
     d7c:	81 30       	cpi	r24, 0x01	; 1
     d7e:	a1 f4       	brne	.+40     	; 0xda8 <DIO_set_pin_direction+0x10a>
     d80:	a7 e3       	ldi	r26, 0x37	; 55
     d82:	b0 e0       	ldi	r27, 0x00	; 0
     d84:	e7 e3       	ldi	r30, 0x37	; 55
     d86:	f0 e0       	ldi	r31, 0x00	; 0
     d88:	80 81       	ld	r24, Z
     d8a:	48 2f       	mov	r20, r24
     d8c:	8b 81       	ldd	r24, Y+3	; 0x03
     d8e:	28 2f       	mov	r18, r24
     d90:	30 e0       	ldi	r19, 0x00	; 0
     d92:	81 e0       	ldi	r24, 0x01	; 1
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	02 2e       	mov	r0, r18
     d98:	02 c0       	rjmp	.+4      	; 0xd9e <DIO_set_pin_direction+0x100>
     d9a:	88 0f       	add	r24, r24
     d9c:	99 1f       	adc	r25, r25
     d9e:	0a 94       	dec	r0
     da0:	e2 f7       	brpl	.-8      	; 0xd9a <DIO_set_pin_direction+0xfc>
     da2:	84 2b       	or	r24, r20
     da4:	8c 93       	st	X, r24
     da6:	6c c0       	rjmp	.+216    	; 0xe80 <DIO_set_pin_direction+0x1e2>
     da8:	a7 e3       	ldi	r26, 0x37	; 55
     daa:	b0 e0       	ldi	r27, 0x00	; 0
     dac:	e7 e3       	ldi	r30, 0x37	; 55
     dae:	f0 e0       	ldi	r31, 0x00	; 0
     db0:	80 81       	ld	r24, Z
     db2:	48 2f       	mov	r20, r24
     db4:	8b 81       	ldd	r24, Y+3	; 0x03
     db6:	28 2f       	mov	r18, r24
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	81 e0       	ldi	r24, 0x01	; 1
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	02 2e       	mov	r0, r18
     dc0:	02 c0       	rjmp	.+4      	; 0xdc6 <DIO_set_pin_direction+0x128>
     dc2:	88 0f       	add	r24, r24
     dc4:	99 1f       	adc	r25, r25
     dc6:	0a 94       	dec	r0
     dc8:	e2 f7       	brpl	.-8      	; 0xdc2 <DIO_set_pin_direction+0x124>
     dca:	80 95       	com	r24
     dcc:	84 23       	and	r24, r20
     dce:	8c 93       	st	X, r24
     dd0:	57 c0       	rjmp	.+174    	; 0xe80 <DIO_set_pin_direction+0x1e2>
	   break;
     case Group_C:
	   assign_bit(DIO_U8_DDRC,pin_NB,pin_direction);
     dd2:	8c 81       	ldd	r24, Y+4	; 0x04
     dd4:	81 30       	cpi	r24, 0x01	; 1
     dd6:	a1 f4       	brne	.+40     	; 0xe00 <DIO_set_pin_direction+0x162>
     dd8:	a4 e3       	ldi	r26, 0x34	; 52
     dda:	b0 e0       	ldi	r27, 0x00	; 0
     ddc:	e4 e3       	ldi	r30, 0x34	; 52
     dde:	f0 e0       	ldi	r31, 0x00	; 0
     de0:	80 81       	ld	r24, Z
     de2:	48 2f       	mov	r20, r24
     de4:	8b 81       	ldd	r24, Y+3	; 0x03
     de6:	28 2f       	mov	r18, r24
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	02 2e       	mov	r0, r18
     df0:	02 c0       	rjmp	.+4      	; 0xdf6 <DIO_set_pin_direction+0x158>
     df2:	88 0f       	add	r24, r24
     df4:	99 1f       	adc	r25, r25
     df6:	0a 94       	dec	r0
     df8:	e2 f7       	brpl	.-8      	; 0xdf2 <DIO_set_pin_direction+0x154>
     dfa:	84 2b       	or	r24, r20
     dfc:	8c 93       	st	X, r24
     dfe:	40 c0       	rjmp	.+128    	; 0xe80 <DIO_set_pin_direction+0x1e2>
     e00:	a4 e3       	ldi	r26, 0x34	; 52
     e02:	b0 e0       	ldi	r27, 0x00	; 0
     e04:	e4 e3       	ldi	r30, 0x34	; 52
     e06:	f0 e0       	ldi	r31, 0x00	; 0
     e08:	80 81       	ld	r24, Z
     e0a:	48 2f       	mov	r20, r24
     e0c:	8b 81       	ldd	r24, Y+3	; 0x03
     e0e:	28 2f       	mov	r18, r24
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	81 e0       	ldi	r24, 0x01	; 1
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	02 2e       	mov	r0, r18
     e18:	02 c0       	rjmp	.+4      	; 0xe1e <DIO_set_pin_direction+0x180>
     e1a:	88 0f       	add	r24, r24
     e1c:	99 1f       	adc	r25, r25
     e1e:	0a 94       	dec	r0
     e20:	e2 f7       	brpl	.-8      	; 0xe1a <DIO_set_pin_direction+0x17c>
     e22:	80 95       	com	r24
     e24:	84 23       	and	r24, r20
     e26:	8c 93       	st	X, r24
     e28:	2b c0       	rjmp	.+86     	; 0xe80 <DIO_set_pin_direction+0x1e2>
	   break;
     case Group_D:
	   assign_bit(DIO_U8_DDRD,pin_NB,pin_direction);
     e2a:	8c 81       	ldd	r24, Y+4	; 0x04
     e2c:	81 30       	cpi	r24, 0x01	; 1
     e2e:	a1 f4       	brne	.+40     	; 0xe58 <DIO_set_pin_direction+0x1ba>
     e30:	a1 e3       	ldi	r26, 0x31	; 49
     e32:	b0 e0       	ldi	r27, 0x00	; 0
     e34:	e1 e3       	ldi	r30, 0x31	; 49
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	80 81       	ld	r24, Z
     e3a:	48 2f       	mov	r20, r24
     e3c:	8b 81       	ldd	r24, Y+3	; 0x03
     e3e:	28 2f       	mov	r18, r24
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	02 2e       	mov	r0, r18
     e48:	02 c0       	rjmp	.+4      	; 0xe4e <DIO_set_pin_direction+0x1b0>
     e4a:	88 0f       	add	r24, r24
     e4c:	99 1f       	adc	r25, r25
     e4e:	0a 94       	dec	r0
     e50:	e2 f7       	brpl	.-8      	; 0xe4a <DIO_set_pin_direction+0x1ac>
     e52:	84 2b       	or	r24, r20
     e54:	8c 93       	st	X, r24
     e56:	14 c0       	rjmp	.+40     	; 0xe80 <DIO_set_pin_direction+0x1e2>
     e58:	a1 e3       	ldi	r26, 0x31	; 49
     e5a:	b0 e0       	ldi	r27, 0x00	; 0
     e5c:	e1 e3       	ldi	r30, 0x31	; 49
     e5e:	f0 e0       	ldi	r31, 0x00	; 0
     e60:	80 81       	ld	r24, Z
     e62:	48 2f       	mov	r20, r24
     e64:	8b 81       	ldd	r24, Y+3	; 0x03
     e66:	28 2f       	mov	r18, r24
     e68:	30 e0       	ldi	r19, 0x00	; 0
     e6a:	81 e0       	ldi	r24, 0x01	; 1
     e6c:	90 e0       	ldi	r25, 0x00	; 0
     e6e:	02 2e       	mov	r0, r18
     e70:	02 c0       	rjmp	.+4      	; 0xe76 <DIO_set_pin_direction+0x1d8>
     e72:	88 0f       	add	r24, r24
     e74:	99 1f       	adc	r25, r25
     e76:	0a 94       	dec	r0
     e78:	e2 f7       	brpl	.-8      	; 0xe72 <DIO_set_pin_direction+0x1d4>
     e7a:	80 95       	com	r24
     e7c:	84 23       	and	r24, r20
     e7e:	8c 93       	st	X, r24
	   break;
}
}

return error_state;
     e80:	89 81       	ldd	r24, Y+1	; 0x01
}
     e82:	26 96       	adiw	r28, 0x06	; 6
     e84:	0f b6       	in	r0, 0x3f	; 63
     e86:	f8 94       	cli
     e88:	de bf       	out	0x3e, r29	; 62
     e8a:	0f be       	out	0x3f, r0	; 63
     e8c:	cd bf       	out	0x3d, r28	; 61
     e8e:	cf 91       	pop	r28
     e90:	df 91       	pop	r29
     e92:	08 95       	ret

00000e94 <DIO_set_pin_value>:


U8 DIO_set_pin_value(U8 port_NB,U8 pin_NB,U8 pin_value)
{
     e94:	df 93       	push	r29
     e96:	cf 93       	push	r28
     e98:	00 d0       	rcall	.+0      	; 0xe9a <DIO_set_pin_value+0x6>
     e9a:	00 d0       	rcall	.+0      	; 0xe9c <DIO_set_pin_value+0x8>
     e9c:	00 d0       	rcall	.+0      	; 0xe9e <DIO_set_pin_value+0xa>
     e9e:	cd b7       	in	r28, 0x3d	; 61
     ea0:	de b7       	in	r29, 0x3e	; 62
     ea2:	8a 83       	std	Y+2, r24	; 0x02
     ea4:	6b 83       	std	Y+3, r22	; 0x03
     ea6:	4c 83       	std	Y+4, r20	; 0x04
U8 error_state = 0;
     ea8:	19 82       	std	Y+1, r1	; 0x01
if(port_NB>= DIO_Max_port_NB)
     eaa:	8a 81       	ldd	r24, Y+2	; 0x02
     eac:	84 30       	cpi	r24, 0x04	; 4
     eae:	18 f0       	brcs	.+6      	; 0xeb6 <DIO_set_pin_value+0x22>
{
	error_state = 1;
     eb0:	81 e0       	ldi	r24, 0x01	; 1
     eb2:	89 83       	std	Y+1, r24	; 0x01
     eb4:	e0 c0       	rjmp	.+448    	; 0x1076 <DIO_set_pin_value+0x1e2>
}
else if(pin_NB>=DIO_Max_pin_NB)
     eb6:	8b 81       	ldd	r24, Y+3	; 0x03
     eb8:	88 30       	cpi	r24, 0x08	; 8
     eba:	18 f0       	brcs	.+6      	; 0xec2 <DIO_set_pin_value+0x2e>
{
	error_state = 1;
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	89 83       	std	Y+1, r24	; 0x01
     ec0:	da c0       	rjmp	.+436    	; 0x1076 <DIO_set_pin_value+0x1e2>
}
else if((pin_value!=DIO_High) && (pin_value!=DIO_Low))
     ec2:	8c 81       	ldd	r24, Y+4	; 0x04
     ec4:	81 30       	cpi	r24, 0x01	; 1
     ec6:	31 f0       	breq	.+12     	; 0xed4 <DIO_set_pin_value+0x40>
     ec8:	8c 81       	ldd	r24, Y+4	; 0x04
     eca:	88 23       	and	r24, r24
     ecc:	19 f0       	breq	.+6      	; 0xed4 <DIO_set_pin_value+0x40>
{
	error_state = 1;
     ece:	81 e0       	ldi	r24, 0x01	; 1
     ed0:	89 83       	std	Y+1, r24	; 0x01
     ed2:	d1 c0       	rjmp	.+418    	; 0x1076 <DIO_set_pin_value+0x1e2>
}
else{
     switch(port_NB){
     ed4:	8a 81       	ldd	r24, Y+2	; 0x02
     ed6:	28 2f       	mov	r18, r24
     ed8:	30 e0       	ldi	r19, 0x00	; 0
     eda:	3e 83       	std	Y+6, r19	; 0x06
     edc:	2d 83       	std	Y+5, r18	; 0x05
     ede:	8d 81       	ldd	r24, Y+5	; 0x05
     ee0:	9e 81       	ldd	r25, Y+6	; 0x06
     ee2:	81 30       	cpi	r24, 0x01	; 1
     ee4:	91 05       	cpc	r25, r1
     ee6:	09 f4       	brne	.+2      	; 0xeea <DIO_set_pin_value+0x56>
     ee8:	43 c0       	rjmp	.+134    	; 0xf70 <DIO_set_pin_value+0xdc>
     eea:	2d 81       	ldd	r18, Y+5	; 0x05
     eec:	3e 81       	ldd	r19, Y+6	; 0x06
     eee:	22 30       	cpi	r18, 0x02	; 2
     ef0:	31 05       	cpc	r19, r1
     ef2:	2c f4       	brge	.+10     	; 0xefe <DIO_set_pin_value+0x6a>
     ef4:	8d 81       	ldd	r24, Y+5	; 0x05
     ef6:	9e 81       	ldd	r25, Y+6	; 0x06
     ef8:	00 97       	sbiw	r24, 0x00	; 0
     efa:	71 f0       	breq	.+28     	; 0xf18 <DIO_set_pin_value+0x84>
     efc:	bc c0       	rjmp	.+376    	; 0x1076 <DIO_set_pin_value+0x1e2>
     efe:	2d 81       	ldd	r18, Y+5	; 0x05
     f00:	3e 81       	ldd	r19, Y+6	; 0x06
     f02:	22 30       	cpi	r18, 0x02	; 2
     f04:	31 05       	cpc	r19, r1
     f06:	09 f4       	brne	.+2      	; 0xf0a <DIO_set_pin_value+0x76>
     f08:	5f c0       	rjmp	.+190    	; 0xfc8 <DIO_set_pin_value+0x134>
     f0a:	8d 81       	ldd	r24, Y+5	; 0x05
     f0c:	9e 81       	ldd	r25, Y+6	; 0x06
     f0e:	83 30       	cpi	r24, 0x03	; 3
     f10:	91 05       	cpc	r25, r1
     f12:	09 f4       	brne	.+2      	; 0xf16 <DIO_set_pin_value+0x82>
     f14:	85 c0       	rjmp	.+266    	; 0x1020 <DIO_set_pin_value+0x18c>
     f16:	af c0       	rjmp	.+350    	; 0x1076 <DIO_set_pin_value+0x1e2>
      case Group_A:
	   assign_bit(DIO_U8_PORTA,pin_NB,pin_value);
     f18:	8c 81       	ldd	r24, Y+4	; 0x04
     f1a:	81 30       	cpi	r24, 0x01	; 1
     f1c:	a1 f4       	brne	.+40     	; 0xf46 <DIO_set_pin_value+0xb2>
     f1e:	ab e3       	ldi	r26, 0x3B	; 59
     f20:	b0 e0       	ldi	r27, 0x00	; 0
     f22:	eb e3       	ldi	r30, 0x3B	; 59
     f24:	f0 e0       	ldi	r31, 0x00	; 0
     f26:	80 81       	ld	r24, Z
     f28:	48 2f       	mov	r20, r24
     f2a:	8b 81       	ldd	r24, Y+3	; 0x03
     f2c:	28 2f       	mov	r18, r24
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	81 e0       	ldi	r24, 0x01	; 1
     f32:	90 e0       	ldi	r25, 0x00	; 0
     f34:	02 2e       	mov	r0, r18
     f36:	02 c0       	rjmp	.+4      	; 0xf3c <DIO_set_pin_value+0xa8>
     f38:	88 0f       	add	r24, r24
     f3a:	99 1f       	adc	r25, r25
     f3c:	0a 94       	dec	r0
     f3e:	e2 f7       	brpl	.-8      	; 0xf38 <DIO_set_pin_value+0xa4>
     f40:	84 2b       	or	r24, r20
     f42:	8c 93       	st	X, r24
     f44:	98 c0       	rjmp	.+304    	; 0x1076 <DIO_set_pin_value+0x1e2>
     f46:	ab e3       	ldi	r26, 0x3B	; 59
     f48:	b0 e0       	ldi	r27, 0x00	; 0
     f4a:	eb e3       	ldi	r30, 0x3B	; 59
     f4c:	f0 e0       	ldi	r31, 0x00	; 0
     f4e:	80 81       	ld	r24, Z
     f50:	48 2f       	mov	r20, r24
     f52:	8b 81       	ldd	r24, Y+3	; 0x03
     f54:	28 2f       	mov	r18, r24
     f56:	30 e0       	ldi	r19, 0x00	; 0
     f58:	81 e0       	ldi	r24, 0x01	; 1
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	02 2e       	mov	r0, r18
     f5e:	02 c0       	rjmp	.+4      	; 0xf64 <DIO_set_pin_value+0xd0>
     f60:	88 0f       	add	r24, r24
     f62:	99 1f       	adc	r25, r25
     f64:	0a 94       	dec	r0
     f66:	e2 f7       	brpl	.-8      	; 0xf60 <DIO_set_pin_value+0xcc>
     f68:	80 95       	com	r24
     f6a:	84 23       	and	r24, r20
     f6c:	8c 93       	st	X, r24
     f6e:	83 c0       	rjmp	.+262    	; 0x1076 <DIO_set_pin_value+0x1e2>
	   break;
	   case Group_B:
	   assign_bit(DIO_U8_PORTB,pin_NB,pin_value);
     f70:	8c 81       	ldd	r24, Y+4	; 0x04
     f72:	81 30       	cpi	r24, 0x01	; 1
     f74:	a1 f4       	brne	.+40     	; 0xf9e <DIO_set_pin_value+0x10a>
     f76:	a8 e3       	ldi	r26, 0x38	; 56
     f78:	b0 e0       	ldi	r27, 0x00	; 0
     f7a:	e8 e3       	ldi	r30, 0x38	; 56
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	80 81       	ld	r24, Z
     f80:	48 2f       	mov	r20, r24
     f82:	8b 81       	ldd	r24, Y+3	; 0x03
     f84:	28 2f       	mov	r18, r24
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	81 e0       	ldi	r24, 0x01	; 1
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	02 2e       	mov	r0, r18
     f8e:	02 c0       	rjmp	.+4      	; 0xf94 <DIO_set_pin_value+0x100>
     f90:	88 0f       	add	r24, r24
     f92:	99 1f       	adc	r25, r25
     f94:	0a 94       	dec	r0
     f96:	e2 f7       	brpl	.-8      	; 0xf90 <DIO_set_pin_value+0xfc>
     f98:	84 2b       	or	r24, r20
     f9a:	8c 93       	st	X, r24
     f9c:	6c c0       	rjmp	.+216    	; 0x1076 <DIO_set_pin_value+0x1e2>
     f9e:	a8 e3       	ldi	r26, 0x38	; 56
     fa0:	b0 e0       	ldi	r27, 0x00	; 0
     fa2:	e8 e3       	ldi	r30, 0x38	; 56
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	80 81       	ld	r24, Z
     fa8:	48 2f       	mov	r20, r24
     faa:	8b 81       	ldd	r24, Y+3	; 0x03
     fac:	28 2f       	mov	r18, r24
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	81 e0       	ldi	r24, 0x01	; 1
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	02 2e       	mov	r0, r18
     fb6:	02 c0       	rjmp	.+4      	; 0xfbc <DIO_set_pin_value+0x128>
     fb8:	88 0f       	add	r24, r24
     fba:	99 1f       	adc	r25, r25
     fbc:	0a 94       	dec	r0
     fbe:	e2 f7       	brpl	.-8      	; 0xfb8 <DIO_set_pin_value+0x124>
     fc0:	80 95       	com	r24
     fc2:	84 23       	and	r24, r20
     fc4:	8c 93       	st	X, r24
     fc6:	57 c0       	rjmp	.+174    	; 0x1076 <DIO_set_pin_value+0x1e2>
	   break;
     case Group_C:
	   assign_bit(DIO_U8_PORTC,pin_NB,pin_value);
     fc8:	8c 81       	ldd	r24, Y+4	; 0x04
     fca:	81 30       	cpi	r24, 0x01	; 1
     fcc:	a1 f4       	brne	.+40     	; 0xff6 <DIO_set_pin_value+0x162>
     fce:	a5 e3       	ldi	r26, 0x35	; 53
     fd0:	b0 e0       	ldi	r27, 0x00	; 0
     fd2:	e5 e3       	ldi	r30, 0x35	; 53
     fd4:	f0 e0       	ldi	r31, 0x00	; 0
     fd6:	80 81       	ld	r24, Z
     fd8:	48 2f       	mov	r20, r24
     fda:	8b 81       	ldd	r24, Y+3	; 0x03
     fdc:	28 2f       	mov	r18, r24
     fde:	30 e0       	ldi	r19, 0x00	; 0
     fe0:	81 e0       	ldi	r24, 0x01	; 1
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	02 2e       	mov	r0, r18
     fe6:	02 c0       	rjmp	.+4      	; 0xfec <DIO_set_pin_value+0x158>
     fe8:	88 0f       	add	r24, r24
     fea:	99 1f       	adc	r25, r25
     fec:	0a 94       	dec	r0
     fee:	e2 f7       	brpl	.-8      	; 0xfe8 <DIO_set_pin_value+0x154>
     ff0:	84 2b       	or	r24, r20
     ff2:	8c 93       	st	X, r24
     ff4:	40 c0       	rjmp	.+128    	; 0x1076 <DIO_set_pin_value+0x1e2>
     ff6:	a5 e3       	ldi	r26, 0x35	; 53
     ff8:	b0 e0       	ldi	r27, 0x00	; 0
     ffa:	e5 e3       	ldi	r30, 0x35	; 53
     ffc:	f0 e0       	ldi	r31, 0x00	; 0
     ffe:	80 81       	ld	r24, Z
    1000:	48 2f       	mov	r20, r24
    1002:	8b 81       	ldd	r24, Y+3	; 0x03
    1004:	28 2f       	mov	r18, r24
    1006:	30 e0       	ldi	r19, 0x00	; 0
    1008:	81 e0       	ldi	r24, 0x01	; 1
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	02 2e       	mov	r0, r18
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <DIO_set_pin_value+0x180>
    1010:	88 0f       	add	r24, r24
    1012:	99 1f       	adc	r25, r25
    1014:	0a 94       	dec	r0
    1016:	e2 f7       	brpl	.-8      	; 0x1010 <DIO_set_pin_value+0x17c>
    1018:	80 95       	com	r24
    101a:	84 23       	and	r24, r20
    101c:	8c 93       	st	X, r24
    101e:	2b c0       	rjmp	.+86     	; 0x1076 <DIO_set_pin_value+0x1e2>
	   break;
     case Group_D:
	   assign_bit(DIO_U8_PORTD,pin_NB,pin_value);
    1020:	8c 81       	ldd	r24, Y+4	; 0x04
    1022:	81 30       	cpi	r24, 0x01	; 1
    1024:	a1 f4       	brne	.+40     	; 0x104e <DIO_set_pin_value+0x1ba>
    1026:	a2 e3       	ldi	r26, 0x32	; 50
    1028:	b0 e0       	ldi	r27, 0x00	; 0
    102a:	e2 e3       	ldi	r30, 0x32	; 50
    102c:	f0 e0       	ldi	r31, 0x00	; 0
    102e:	80 81       	ld	r24, Z
    1030:	48 2f       	mov	r20, r24
    1032:	8b 81       	ldd	r24, Y+3	; 0x03
    1034:	28 2f       	mov	r18, r24
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	81 e0       	ldi	r24, 0x01	; 1
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	02 2e       	mov	r0, r18
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <DIO_set_pin_value+0x1b0>
    1040:	88 0f       	add	r24, r24
    1042:	99 1f       	adc	r25, r25
    1044:	0a 94       	dec	r0
    1046:	e2 f7       	brpl	.-8      	; 0x1040 <DIO_set_pin_value+0x1ac>
    1048:	84 2b       	or	r24, r20
    104a:	8c 93       	st	X, r24
    104c:	14 c0       	rjmp	.+40     	; 0x1076 <DIO_set_pin_value+0x1e2>
    104e:	a2 e3       	ldi	r26, 0x32	; 50
    1050:	b0 e0       	ldi	r27, 0x00	; 0
    1052:	e2 e3       	ldi	r30, 0x32	; 50
    1054:	f0 e0       	ldi	r31, 0x00	; 0
    1056:	80 81       	ld	r24, Z
    1058:	48 2f       	mov	r20, r24
    105a:	8b 81       	ldd	r24, Y+3	; 0x03
    105c:	28 2f       	mov	r18, r24
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	81 e0       	ldi	r24, 0x01	; 1
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	02 2e       	mov	r0, r18
    1066:	02 c0       	rjmp	.+4      	; 0x106c <DIO_set_pin_value+0x1d8>
    1068:	88 0f       	add	r24, r24
    106a:	99 1f       	adc	r25, r25
    106c:	0a 94       	dec	r0
    106e:	e2 f7       	brpl	.-8      	; 0x1068 <DIO_set_pin_value+0x1d4>
    1070:	80 95       	com	r24
    1072:	84 23       	and	r24, r20
    1074:	8c 93       	st	X, r24
	   break;
     }
}


return error_state;
    1076:	89 81       	ldd	r24, Y+1	; 0x01
}
    1078:	26 96       	adiw	r28, 0x06	; 6
    107a:	0f b6       	in	r0, 0x3f	; 63
    107c:	f8 94       	cli
    107e:	de bf       	out	0x3e, r29	; 62
    1080:	0f be       	out	0x3f, r0	; 63
    1082:	cd bf       	out	0x3d, r28	; 61
    1084:	cf 91       	pop	r28
    1086:	df 91       	pop	r29
    1088:	08 95       	ret

0000108a <DIO_set_port_value>:


U8 DIO_set_port_value(U8 port_NB,U8 port_value)
{
    108a:	df 93       	push	r29
    108c:	cf 93       	push	r28
    108e:	00 d0       	rcall	.+0      	; 0x1090 <DIO_set_port_value+0x6>
    1090:	00 d0       	rcall	.+0      	; 0x1092 <DIO_set_port_value+0x8>
    1092:	0f 92       	push	r0
    1094:	cd b7       	in	r28, 0x3d	; 61
    1096:	de b7       	in	r29, 0x3e	; 62
    1098:	8a 83       	std	Y+2, r24	; 0x02
    109a:	6b 83       	std	Y+3, r22	; 0x03
U8 error_state = 0;
    109c:	19 82       	std	Y+1, r1	; 0x01
if(port_NB>= DIO_Max_port_NB)
    109e:	8a 81       	ldd	r24, Y+2	; 0x02
    10a0:	84 30       	cpi	r24, 0x04	; 4
    10a2:	18 f0       	brcs	.+6      	; 0x10aa <DIO_set_port_value+0x20>
{
	error_state = 1;
    10a4:	81 e0       	ldi	r24, 0x01	; 1
    10a6:	89 83       	std	Y+1, r24	; 0x01
    10a8:	32 c0       	rjmp	.+100    	; 0x110e <DIO_set_port_value+0x84>
else if(port_value>DIO_Max_port_value)
{
	error_state = 1;
}
else{
     switch(port_NB){
    10aa:	8a 81       	ldd	r24, Y+2	; 0x02
    10ac:	28 2f       	mov	r18, r24
    10ae:	30 e0       	ldi	r19, 0x00	; 0
    10b0:	3d 83       	std	Y+5, r19	; 0x05
    10b2:	2c 83       	std	Y+4, r18	; 0x04
    10b4:	8c 81       	ldd	r24, Y+4	; 0x04
    10b6:	9d 81       	ldd	r25, Y+5	; 0x05
    10b8:	81 30       	cpi	r24, 0x01	; 1
    10ba:	91 05       	cpc	r25, r1
    10bc:	d1 f0       	breq	.+52     	; 0x10f2 <DIO_set_port_value+0x68>
    10be:	2c 81       	ldd	r18, Y+4	; 0x04
    10c0:	3d 81       	ldd	r19, Y+5	; 0x05
    10c2:	22 30       	cpi	r18, 0x02	; 2
    10c4:	31 05       	cpc	r19, r1
    10c6:	2c f4       	brge	.+10     	; 0x10d2 <DIO_set_port_value+0x48>
    10c8:	8c 81       	ldd	r24, Y+4	; 0x04
    10ca:	9d 81       	ldd	r25, Y+5	; 0x05
    10cc:	00 97       	sbiw	r24, 0x00	; 0
    10ce:	61 f0       	breq	.+24     	; 0x10e8 <DIO_set_port_value+0x5e>
    10d0:	1e c0       	rjmp	.+60     	; 0x110e <DIO_set_port_value+0x84>
    10d2:	2c 81       	ldd	r18, Y+4	; 0x04
    10d4:	3d 81       	ldd	r19, Y+5	; 0x05
    10d6:	22 30       	cpi	r18, 0x02	; 2
    10d8:	31 05       	cpc	r19, r1
    10da:	81 f0       	breq	.+32     	; 0x10fc <DIO_set_port_value+0x72>
    10dc:	8c 81       	ldd	r24, Y+4	; 0x04
    10de:	9d 81       	ldd	r25, Y+5	; 0x05
    10e0:	83 30       	cpi	r24, 0x03	; 3
    10e2:	91 05       	cpc	r25, r1
    10e4:	81 f0       	breq	.+32     	; 0x1106 <DIO_set_port_value+0x7c>
    10e6:	13 c0       	rjmp	.+38     	; 0x110e <DIO_set_port_value+0x84>
      case Group_A:
    	  DIO_U8_PORTA = port_value;
    10e8:	eb e3       	ldi	r30, 0x3B	; 59
    10ea:	f0 e0       	ldi	r31, 0x00	; 0
    10ec:	8b 81       	ldd	r24, Y+3	; 0x03
    10ee:	80 83       	st	Z, r24
    10f0:	0e c0       	rjmp	.+28     	; 0x110e <DIO_set_port_value+0x84>
	   break;
	   case Group_B:
		   DIO_U8_PORTB = port_value;
    10f2:	e8 e3       	ldi	r30, 0x38	; 56
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	8b 81       	ldd	r24, Y+3	; 0x03
    10f8:	80 83       	st	Z, r24
    10fa:	09 c0       	rjmp	.+18     	; 0x110e <DIO_set_port_value+0x84>
	   break;
     case Group_C:
    	 DIO_U8_PORTC = port_value;
    10fc:	e5 e3       	ldi	r30, 0x35	; 53
    10fe:	f0 e0       	ldi	r31, 0x00	; 0
    1100:	8b 81       	ldd	r24, Y+3	; 0x03
    1102:	80 83       	st	Z, r24
    1104:	04 c0       	rjmp	.+8      	; 0x110e <DIO_set_port_value+0x84>
	   break;
     case Group_D:
    	 DIO_U8_PORTD = port_value;
    1106:	e2 e3       	ldi	r30, 0x32	; 50
    1108:	f0 e0       	ldi	r31, 0x00	; 0
    110a:	8b 81       	ldd	r24, Y+3	; 0x03
    110c:	80 83       	st	Z, r24
	   break;
     }
}


return error_state;
    110e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1110:	0f 90       	pop	r0
    1112:	0f 90       	pop	r0
    1114:	0f 90       	pop	r0
    1116:	0f 90       	pop	r0
    1118:	0f 90       	pop	r0
    111a:	cf 91       	pop	r28
    111c:	df 91       	pop	r29
    111e:	08 95       	ret

00001120 <DIO_set_port_direction>:


U8 DIO_set_port_direction(U8 port_NB, U8 port_direction)
{
    1120:	df 93       	push	r29
    1122:	cf 93       	push	r28
    1124:	00 d0       	rcall	.+0      	; 0x1126 <DIO_set_port_direction+0x6>
    1126:	00 d0       	rcall	.+0      	; 0x1128 <DIO_set_port_direction+0x8>
    1128:	0f 92       	push	r0
    112a:	cd b7       	in	r28, 0x3d	; 61
    112c:	de b7       	in	r29, 0x3e	; 62
    112e:	8a 83       	std	Y+2, r24	; 0x02
    1130:	6b 83       	std	Y+3, r22	; 0x03
U8 error_state = 0;
    1132:	19 82       	std	Y+1, r1	; 0x01
if(port_NB>= DIO_Max_port_NB)
    1134:	8a 81       	ldd	r24, Y+2	; 0x02
    1136:	84 30       	cpi	r24, 0x04	; 4
    1138:	18 f0       	brcs	.+6      	; 0x1140 <DIO_set_port_direction+0x20>
{
	error_state = 1;
    113a:	81 e0       	ldi	r24, 0x01	; 1
    113c:	89 83       	std	Y+1, r24	; 0x01
    113e:	32 c0       	rjmp	.+100    	; 0x11a4 <DIO_set_port_direction+0x84>
else if( port_direction>DIO_Max_port_direction )
{
	error_state = 1;
}
else{
     switch(port_NB){
    1140:	8a 81       	ldd	r24, Y+2	; 0x02
    1142:	28 2f       	mov	r18, r24
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	3d 83       	std	Y+5, r19	; 0x05
    1148:	2c 83       	std	Y+4, r18	; 0x04
    114a:	8c 81       	ldd	r24, Y+4	; 0x04
    114c:	9d 81       	ldd	r25, Y+5	; 0x05
    114e:	81 30       	cpi	r24, 0x01	; 1
    1150:	91 05       	cpc	r25, r1
    1152:	d1 f0       	breq	.+52     	; 0x1188 <DIO_set_port_direction+0x68>
    1154:	2c 81       	ldd	r18, Y+4	; 0x04
    1156:	3d 81       	ldd	r19, Y+5	; 0x05
    1158:	22 30       	cpi	r18, 0x02	; 2
    115a:	31 05       	cpc	r19, r1
    115c:	2c f4       	brge	.+10     	; 0x1168 <DIO_set_port_direction+0x48>
    115e:	8c 81       	ldd	r24, Y+4	; 0x04
    1160:	9d 81       	ldd	r25, Y+5	; 0x05
    1162:	00 97       	sbiw	r24, 0x00	; 0
    1164:	61 f0       	breq	.+24     	; 0x117e <DIO_set_port_direction+0x5e>
    1166:	1e c0       	rjmp	.+60     	; 0x11a4 <DIO_set_port_direction+0x84>
    1168:	2c 81       	ldd	r18, Y+4	; 0x04
    116a:	3d 81       	ldd	r19, Y+5	; 0x05
    116c:	22 30       	cpi	r18, 0x02	; 2
    116e:	31 05       	cpc	r19, r1
    1170:	81 f0       	breq	.+32     	; 0x1192 <DIO_set_port_direction+0x72>
    1172:	8c 81       	ldd	r24, Y+4	; 0x04
    1174:	9d 81       	ldd	r25, Y+5	; 0x05
    1176:	83 30       	cpi	r24, 0x03	; 3
    1178:	91 05       	cpc	r25, r1
    117a:	81 f0       	breq	.+32     	; 0x119c <DIO_set_port_direction+0x7c>
    117c:	13 c0       	rjmp	.+38     	; 0x11a4 <DIO_set_port_direction+0x84>
      case Group_A:
    	  DIO_U8_DDRA = port_direction;
    117e:	ea e3       	ldi	r30, 0x3A	; 58
    1180:	f0 e0       	ldi	r31, 0x00	; 0
    1182:	8b 81       	ldd	r24, Y+3	; 0x03
    1184:	80 83       	st	Z, r24
    1186:	0e c0       	rjmp	.+28     	; 0x11a4 <DIO_set_port_direction+0x84>
	   break;
	   case Group_B:
		   DIO_U8_DDRB = port_direction;
    1188:	e7 e3       	ldi	r30, 0x37	; 55
    118a:	f0 e0       	ldi	r31, 0x00	; 0
    118c:	8b 81       	ldd	r24, Y+3	; 0x03
    118e:	80 83       	st	Z, r24
    1190:	09 c0       	rjmp	.+18     	; 0x11a4 <DIO_set_port_direction+0x84>
	   break;
     case Group_C:
    	 DIO_U8_DDRC = port_direction;
    1192:	e4 e3       	ldi	r30, 0x34	; 52
    1194:	f0 e0       	ldi	r31, 0x00	; 0
    1196:	8b 81       	ldd	r24, Y+3	; 0x03
    1198:	80 83       	st	Z, r24
    119a:	04 c0       	rjmp	.+8      	; 0x11a4 <DIO_set_port_direction+0x84>
	   break;
     case Group_D:
    	 DIO_U8_DDRD = port_direction;
    119c:	e1 e3       	ldi	r30, 0x31	; 49
    119e:	f0 e0       	ldi	r31, 0x00	; 0
    11a0:	8b 81       	ldd	r24, Y+3	; 0x03
    11a2:	80 83       	st	Z, r24
	   break;
     }
}


return error_state;
    11a4:	89 81       	ldd	r24, Y+1	; 0x01
}
    11a6:	0f 90       	pop	r0
    11a8:	0f 90       	pop	r0
    11aa:	0f 90       	pop	r0
    11ac:	0f 90       	pop	r0
    11ae:	0f 90       	pop	r0
    11b0:	cf 91       	pop	r28
    11b2:	df 91       	pop	r29
    11b4:	08 95       	ret

000011b6 <DIO_get_pin_value>:



U8 DIO_get_pin_value(U8 port_NB,U8  pin_NB,U8 * pin_value)
{
    11b6:	df 93       	push	r29
    11b8:	cf 93       	push	r28
    11ba:	cd b7       	in	r28, 0x3d	; 61
    11bc:	de b7       	in	r29, 0x3e	; 62
    11be:	27 97       	sbiw	r28, 0x07	; 7
    11c0:	0f b6       	in	r0, 0x3f	; 63
    11c2:	f8 94       	cli
    11c4:	de bf       	out	0x3e, r29	; 62
    11c6:	0f be       	out	0x3f, r0	; 63
    11c8:	cd bf       	out	0x3d, r28	; 61
    11ca:	8a 83       	std	Y+2, r24	; 0x02
    11cc:	6b 83       	std	Y+3, r22	; 0x03
    11ce:	5d 83       	std	Y+5, r21	; 0x05
    11d0:	4c 83       	std	Y+4, r20	; 0x04
U8 error_state = 0;
    11d2:	19 82       	std	Y+1, r1	; 0x01
if(port_NB>= DIO_Max_port_NB)
    11d4:	8a 81       	ldd	r24, Y+2	; 0x02
    11d6:	84 30       	cpi	r24, 0x04	; 4
    11d8:	18 f0       	brcs	.+6      	; 0x11e0 <DIO_get_pin_value+0x2a>
{
	error_state = 1;
    11da:	81 e0       	ldi	r24, 0x01	; 1
    11dc:	89 83       	std	Y+1, r24	; 0x01
    11de:	76 c0       	rjmp	.+236    	; 0x12cc <DIO_get_pin_value+0x116>
}
else if(pin_NB>=DIO_Max_pin_NB)
    11e0:	8b 81       	ldd	r24, Y+3	; 0x03
    11e2:	88 30       	cpi	r24, 0x08	; 8
    11e4:	18 f0       	brcs	.+6      	; 0x11ec <DIO_get_pin_value+0x36>
{
	error_state = 1;
    11e6:	81 e0       	ldi	r24, 0x01	; 1
    11e8:	89 83       	std	Y+1, r24	; 0x01
    11ea:	70 c0       	rjmp	.+224    	; 0x12cc <DIO_get_pin_value+0x116>
}

else{
     switch(port_NB){
    11ec:	8a 81       	ldd	r24, Y+2	; 0x02
    11ee:	28 2f       	mov	r18, r24
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	3f 83       	std	Y+7, r19	; 0x07
    11f4:	2e 83       	std	Y+6, r18	; 0x06
    11f6:	4e 81       	ldd	r20, Y+6	; 0x06
    11f8:	5f 81       	ldd	r21, Y+7	; 0x07
    11fa:	41 30       	cpi	r20, 0x01	; 1
    11fc:	51 05       	cpc	r21, r1
    11fe:	59 f1       	breq	.+86     	; 0x1256 <DIO_get_pin_value+0xa0>
    1200:	8e 81       	ldd	r24, Y+6	; 0x06
    1202:	9f 81       	ldd	r25, Y+7	; 0x07
    1204:	82 30       	cpi	r24, 0x02	; 2
    1206:	91 05       	cpc	r25, r1
    1208:	34 f4       	brge	.+12     	; 0x1216 <DIO_get_pin_value+0x60>
    120a:	2e 81       	ldd	r18, Y+6	; 0x06
    120c:	3f 81       	ldd	r19, Y+7	; 0x07
    120e:	21 15       	cp	r18, r1
    1210:	31 05       	cpc	r19, r1
    1212:	69 f0       	breq	.+26     	; 0x122e <DIO_get_pin_value+0x78>
    1214:	5b c0       	rjmp	.+182    	; 0x12cc <DIO_get_pin_value+0x116>
    1216:	4e 81       	ldd	r20, Y+6	; 0x06
    1218:	5f 81       	ldd	r21, Y+7	; 0x07
    121a:	42 30       	cpi	r20, 0x02	; 2
    121c:	51 05       	cpc	r21, r1
    121e:	79 f1       	breq	.+94     	; 0x127e <DIO_get_pin_value+0xc8>
    1220:	8e 81       	ldd	r24, Y+6	; 0x06
    1222:	9f 81       	ldd	r25, Y+7	; 0x07
    1224:	83 30       	cpi	r24, 0x03	; 3
    1226:	91 05       	cpc	r25, r1
    1228:	09 f4       	brne	.+2      	; 0x122c <DIO_get_pin_value+0x76>
    122a:	3d c0       	rjmp	.+122    	; 0x12a6 <DIO_get_pin_value+0xf0>
    122c:	4f c0       	rjmp	.+158    	; 0x12cc <DIO_get_pin_value+0x116>
      case Group_A:
    	  * pin_value = get_bit(DIO_U8_PINA,pin_NB);
    122e:	e9 e3       	ldi	r30, 0x39	; 57
    1230:	f0 e0       	ldi	r31, 0x00	; 0
    1232:	80 81       	ld	r24, Z
    1234:	28 2f       	mov	r18, r24
    1236:	30 e0       	ldi	r19, 0x00	; 0
    1238:	8b 81       	ldd	r24, Y+3	; 0x03
    123a:	88 2f       	mov	r24, r24
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	a9 01       	movw	r20, r18
    1240:	02 c0       	rjmp	.+4      	; 0x1246 <DIO_get_pin_value+0x90>
    1242:	55 95       	asr	r21
    1244:	47 95       	ror	r20
    1246:	8a 95       	dec	r24
    1248:	e2 f7       	brpl	.-8      	; 0x1242 <DIO_get_pin_value+0x8c>
    124a:	ca 01       	movw	r24, r20
    124c:	81 70       	andi	r24, 0x01	; 1
    124e:	ec 81       	ldd	r30, Y+4	; 0x04
    1250:	fd 81       	ldd	r31, Y+5	; 0x05
    1252:	80 83       	st	Z, r24
    1254:	3b c0       	rjmp	.+118    	; 0x12cc <DIO_get_pin_value+0x116>
	   break;
	   case Group_B:
		   * pin_value=get_bit(DIO_U8_PINB,pin_NB);
    1256:	e6 e3       	ldi	r30, 0x36	; 54
    1258:	f0 e0       	ldi	r31, 0x00	; 0
    125a:	80 81       	ld	r24, Z
    125c:	28 2f       	mov	r18, r24
    125e:	30 e0       	ldi	r19, 0x00	; 0
    1260:	8b 81       	ldd	r24, Y+3	; 0x03
    1262:	88 2f       	mov	r24, r24
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	a9 01       	movw	r20, r18
    1268:	02 c0       	rjmp	.+4      	; 0x126e <DIO_get_pin_value+0xb8>
    126a:	55 95       	asr	r21
    126c:	47 95       	ror	r20
    126e:	8a 95       	dec	r24
    1270:	e2 f7       	brpl	.-8      	; 0x126a <DIO_get_pin_value+0xb4>
    1272:	ca 01       	movw	r24, r20
    1274:	81 70       	andi	r24, 0x01	; 1
    1276:	ec 81       	ldd	r30, Y+4	; 0x04
    1278:	fd 81       	ldd	r31, Y+5	; 0x05
    127a:	80 83       	st	Z, r24
    127c:	27 c0       	rjmp	.+78     	; 0x12cc <DIO_get_pin_value+0x116>
	   break;
     case Group_C:
    	 * pin_value=get_bit(DIO_U8_PINC,pin_NB);
    127e:	e3 e3       	ldi	r30, 0x33	; 51
    1280:	f0 e0       	ldi	r31, 0x00	; 0
    1282:	80 81       	ld	r24, Z
    1284:	28 2f       	mov	r18, r24
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	8b 81       	ldd	r24, Y+3	; 0x03
    128a:	88 2f       	mov	r24, r24
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	a9 01       	movw	r20, r18
    1290:	02 c0       	rjmp	.+4      	; 0x1296 <DIO_get_pin_value+0xe0>
    1292:	55 95       	asr	r21
    1294:	47 95       	ror	r20
    1296:	8a 95       	dec	r24
    1298:	e2 f7       	brpl	.-8      	; 0x1292 <DIO_get_pin_value+0xdc>
    129a:	ca 01       	movw	r24, r20
    129c:	81 70       	andi	r24, 0x01	; 1
    129e:	ec 81       	ldd	r30, Y+4	; 0x04
    12a0:	fd 81       	ldd	r31, Y+5	; 0x05
    12a2:	80 83       	st	Z, r24
    12a4:	13 c0       	rjmp	.+38     	; 0x12cc <DIO_get_pin_value+0x116>
	   break;
     case Group_D:
    	 * pin_value=get_bit(DIO_U8_PIND,pin_NB);
    12a6:	e0 e3       	ldi	r30, 0x30	; 48
    12a8:	f0 e0       	ldi	r31, 0x00	; 0
    12aa:	80 81       	ld	r24, Z
    12ac:	28 2f       	mov	r18, r24
    12ae:	30 e0       	ldi	r19, 0x00	; 0
    12b0:	8b 81       	ldd	r24, Y+3	; 0x03
    12b2:	88 2f       	mov	r24, r24
    12b4:	90 e0       	ldi	r25, 0x00	; 0
    12b6:	a9 01       	movw	r20, r18
    12b8:	02 c0       	rjmp	.+4      	; 0x12be <DIO_get_pin_value+0x108>
    12ba:	55 95       	asr	r21
    12bc:	47 95       	ror	r20
    12be:	8a 95       	dec	r24
    12c0:	e2 f7       	brpl	.-8      	; 0x12ba <DIO_get_pin_value+0x104>
    12c2:	ca 01       	movw	r24, r20
    12c4:	81 70       	andi	r24, 0x01	; 1
    12c6:	ec 81       	ldd	r30, Y+4	; 0x04
    12c8:	fd 81       	ldd	r31, Y+5	; 0x05
    12ca:	80 83       	st	Z, r24
	   break;
     }

}
return error_state;
    12cc:	89 81       	ldd	r24, Y+1	; 0x01
}
    12ce:	27 96       	adiw	r28, 0x07	; 7
    12d0:	0f b6       	in	r0, 0x3f	; 63
    12d2:	f8 94       	cli
    12d4:	de bf       	out	0x3e, r29	; 62
    12d6:	0f be       	out	0x3f, r0	; 63
    12d8:	cd bf       	out	0x3d, r28	; 61
    12da:	cf 91       	pop	r28
    12dc:	df 91       	pop	r29
    12de:	08 95       	ret

000012e0 <KPD_GetPressedKey>:



//main finction of KBD
U8 KPD_GetPressedKey(void)
{
    12e0:	df 93       	push	r29
    12e2:	cf 93       	push	r28
    12e4:	00 d0       	rcall	.+0      	; 0x12e6 <KPD_GetPressedKey+0x6>
    12e6:	00 d0       	rcall	.+0      	; 0x12e8 <KPD_GetPressedKey+0x8>
    12e8:	0f 92       	push	r0
    12ea:	cd b7       	in	r28, 0x3d	; 61
    12ec:	de b7       	in	r29, 0x3e	; 62

	U8 Press_key = KPD_no_pressed_key ;
    12ee:	1b 82       	std	Y+3, r1	; 0x03
	U8 pin_state;
    static U8 KBD_Arr[Row_NB][Column_NB] = KBD_Arr_Value;
    static U8 Arr_Column[Column_NB] = {KBD_column_pin0 ,KBD_column_pin1 ,KBD_column_pin2 ,KBD_column_pin3 };
    static U8 Arr_Row[Row_NB] = {KBD_row_pin0 ,KBD_row_pin1 ,KBD_row_pin2 ,KBD_row_pin3};

    for(column=0;column<Column_NB;column++)
    12f0:	1a 82       	std	Y+2, r1	; 0x02
    12f2:	5e c0       	rjmp	.+188    	; 0x13b0 <KPD_GetPressedKey+0xd0>
    {
    	// make the column index pin = 0
       DIO_set_pin_value(KPD_port,Arr_Column[column],DIO_Low);
    12f4:	8a 81       	ldd	r24, Y+2	; 0x02
    12f6:	88 2f       	mov	r24, r24
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	fc 01       	movw	r30, r24
    12fc:	e4 59       	subi	r30, 0x94	; 148
    12fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1300:	90 81       	ld	r25, Z
    1302:	82 e0       	ldi	r24, 0x02	; 2
    1304:	69 2f       	mov	r22, r25
    1306:	40 e0       	ldi	r20, 0x00	; 0
    1308:	0e 94 4a 07 	call	0xe94	; 0xe94 <DIO_set_pin_value>


       // read the value of each row pin in one of column index
       for(row=0;row<Row_NB;row++)
    130c:	19 82       	std	Y+1, r1	; 0x01
    130e:	3d c0       	rjmp	.+122    	; 0x138a <KPD_GetPressedKey+0xaa>
       {
    	  DIO_get_pin_value(KPD_port,Arr_Row[row],&pin_state);
    1310:	89 81       	ldd	r24, Y+1	; 0x01
    1312:	88 2f       	mov	r24, r24
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	fc 01       	movw	r30, r24
    1318:	e8 59       	subi	r30, 0x98	; 152
    131a:	ff 4f       	sbci	r31, 0xFF	; 255
    131c:	90 81       	ld	r25, Z
    131e:	9e 01       	movw	r18, r28
    1320:	2c 5f       	subi	r18, 0xFC	; 252
    1322:	3f 4f       	sbci	r19, 0xFF	; 255
    1324:	82 e0       	ldi	r24, 0x02	; 2
    1326:	69 2f       	mov	r22, r25
    1328:	a9 01       	movw	r20, r18
    132a:	0e 94 db 08 	call	0x11b6	; 0x11b6 <DIO_get_pin_value>

    	  // output the value and the number of switch which the user pressed
       if(DIO_Low == pin_state)
    132e:	8c 81       	ldd	r24, Y+4	; 0x04
    1330:	88 23       	and	r24, r24
    1332:	41 f5       	brne	.+80     	; 0x1384 <KPD_GetPressedKey+0xa4>
       {
    	   Press_key =  KBD_Arr[row][column];
    1334:	89 81       	ldd	r24, Y+1	; 0x01
    1336:	48 2f       	mov	r20, r24
    1338:	50 e0       	ldi	r21, 0x00	; 0
    133a:	8a 81       	ldd	r24, Y+2	; 0x02
    133c:	28 2f       	mov	r18, r24
    133e:	30 e0       	ldi	r19, 0x00	; 0
    1340:	ca 01       	movw	r24, r20
    1342:	88 0f       	add	r24, r24
    1344:	99 1f       	adc	r25, r25
    1346:	88 0f       	add	r24, r24
    1348:	99 1f       	adc	r25, r25
    134a:	82 0f       	add	r24, r18
    134c:	93 1f       	adc	r25, r19
    134e:	fc 01       	movw	r30, r24
    1350:	e0 59       	subi	r30, 0x90	; 144
    1352:	ff 4f       	sbci	r31, 0xFF	; 255
    1354:	80 81       	ld	r24, Z
    1356:	8b 83       	std	Y+3, r24	; 0x03
    1358:	0f c0       	rjmp	.+30     	; 0x1378 <KPD_GetPressedKey+0x98>

    	   while( DIO_Low == pin_state)
    	   {

    		   DIO_get_pin_value(KPD_port,Arr_Row[row],&pin_state);
    135a:	89 81       	ldd	r24, Y+1	; 0x01
    135c:	88 2f       	mov	r24, r24
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	fc 01       	movw	r30, r24
    1362:	e8 59       	subi	r30, 0x98	; 152
    1364:	ff 4f       	sbci	r31, 0xFF	; 255
    1366:	90 81       	ld	r25, Z
    1368:	9e 01       	movw	r18, r28
    136a:	2c 5f       	subi	r18, 0xFC	; 252
    136c:	3f 4f       	sbci	r19, 0xFF	; 255
    136e:	82 e0       	ldi	r24, 0x02	; 2
    1370:	69 2f       	mov	r22, r25
    1372:	a9 01       	movw	r20, r18
    1374:	0e 94 db 08 	call	0x11b6	; 0x11b6 <DIO_get_pin_value>
    	  // output the value and the number of switch which the user pressed
       if(DIO_Low == pin_state)
       {
    	   Press_key =  KBD_Arr[row][column];

    	   while( DIO_Low == pin_state)
    1378:	8c 81       	ldd	r24, Y+4	; 0x04
    137a:	88 23       	and	r24, r24
    137c:	71 f3       	breq	.-36     	; 0x135a <KPD_GetPressedKey+0x7a>
    	   {

    		   DIO_get_pin_value(KPD_port,Arr_Row[row],&pin_state);
    	   }
    	   return Press_key;
    137e:	8b 81       	ldd	r24, Y+3	; 0x03
    1380:	8d 83       	std	Y+5, r24	; 0x05
    1382:	1c c0       	rjmp	.+56     	; 0x13bc <KPD_GetPressedKey+0xdc>
    	// make the column index pin = 0
       DIO_set_pin_value(KPD_port,Arr_Column[column],DIO_Low);


       // read the value of each row pin in one of column index
       for(row=0;row<Row_NB;row++)
    1384:	89 81       	ldd	r24, Y+1	; 0x01
    1386:	8f 5f       	subi	r24, 0xFF	; 255
    1388:	89 83       	std	Y+1, r24	; 0x01
    138a:	89 81       	ldd	r24, Y+1	; 0x01
    138c:	84 30       	cpi	r24, 0x04	; 4
    138e:	08 f4       	brcc	.+2      	; 0x1392 <KPD_GetPressedKey+0xb2>
    1390:	bf cf       	rjmp	.-130    	; 0x1310 <KPD_GetPressedKey+0x30>
       }

       }
       //after check column index return the value of column index = 1

       DIO_set_pin_value(KPD_port,Arr_Column[column],DIO_High);
    1392:	8a 81       	ldd	r24, Y+2	; 0x02
    1394:	88 2f       	mov	r24, r24
    1396:	90 e0       	ldi	r25, 0x00	; 0
    1398:	fc 01       	movw	r30, r24
    139a:	e4 59       	subi	r30, 0x94	; 148
    139c:	ff 4f       	sbci	r31, 0xFF	; 255
    139e:	90 81       	ld	r25, Z
    13a0:	82 e0       	ldi	r24, 0x02	; 2
    13a2:	69 2f       	mov	r22, r25
    13a4:	41 e0       	ldi	r20, 0x01	; 1
    13a6:	0e 94 4a 07 	call	0xe94	; 0xe94 <DIO_set_pin_value>
	U8 pin_state;
    static U8 KBD_Arr[Row_NB][Column_NB] = KBD_Arr_Value;
    static U8 Arr_Column[Column_NB] = {KBD_column_pin0 ,KBD_column_pin1 ,KBD_column_pin2 ,KBD_column_pin3 };
    static U8 Arr_Row[Row_NB] = {KBD_row_pin0 ,KBD_row_pin1 ,KBD_row_pin2 ,KBD_row_pin3};

    for(column=0;column<Column_NB;column++)
    13aa:	8a 81       	ldd	r24, Y+2	; 0x02
    13ac:	8f 5f       	subi	r24, 0xFF	; 255
    13ae:	8a 83       	std	Y+2, r24	; 0x02
    13b0:	8a 81       	ldd	r24, Y+2	; 0x02
    13b2:	84 30       	cpi	r24, 0x04	; 4
    13b4:	08 f4       	brcc	.+2      	; 0x13b8 <KPD_GetPressedKey+0xd8>
    13b6:	9e cf       	rjmp	.-196    	; 0x12f4 <KPD_GetPressedKey+0x14>

       DIO_set_pin_value(KPD_port,Arr_Column[column],DIO_High);
    }


	return Press_key;
    13b8:	8b 81       	ldd	r24, Y+3	; 0x03
    13ba:	8d 83       	std	Y+5, r24	; 0x05
    13bc:	8d 81       	ldd	r24, Y+5	; 0x05
}
    13be:	0f 90       	pop	r0
    13c0:	0f 90       	pop	r0
    13c2:	0f 90       	pop	r0
    13c4:	0f 90       	pop	r0
    13c6:	0f 90       	pop	r0
    13c8:	cf 91       	pop	r28
    13ca:	df 91       	pop	r29
    13cc:	08 95       	ret

000013ce <KPD_init>:


//KPD intialization pins of KPD port
void KPD_init(void)
{
    13ce:	df 93       	push	r29
    13d0:	cf 93       	push	r28
    13d2:	00 d0       	rcall	.+0      	; 0x13d4 <KPD_init+0x6>
    13d4:	00 d0       	rcall	.+0      	; 0x13d6 <KPD_init+0x8>
    13d6:	cd b7       	in	r28, 0x3d	; 61
    13d8:	de b7       	in	r29, 0x3e	; 62
	  for(int pin_num=0;pin_num<4;pin_num++)
    13da:	1c 82       	std	Y+4, r1	; 0x04
    13dc:	1b 82       	std	Y+3, r1	; 0x03
    13de:	11 c0       	rjmp	.+34     	; 0x1402 <KPD_init+0x34>
	        {
	    	DIO_set_pin_direction(KPD_port,pin_num,DIO_Output);
    13e0:	9b 81       	ldd	r25, Y+3	; 0x03
    13e2:	82 e0       	ldi	r24, 0x02	; 2
    13e4:	69 2f       	mov	r22, r25
    13e6:	41 e0       	ldi	r20, 0x01	; 1
    13e8:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_set_pin_direction>
	    	DIO_set_pin_value(KPD_port,pin_num,DIO_High);
    13ec:	9b 81       	ldd	r25, Y+3	; 0x03
    13ee:	82 e0       	ldi	r24, 0x02	; 2
    13f0:	69 2f       	mov	r22, r25
    13f2:	41 e0       	ldi	r20, 0x01	; 1
    13f4:	0e 94 4a 07 	call	0xe94	; 0xe94 <DIO_set_pin_value>


//KPD intialization pins of KPD port
void KPD_init(void)
{
	  for(int pin_num=0;pin_num<4;pin_num++)
    13f8:	8b 81       	ldd	r24, Y+3	; 0x03
    13fa:	9c 81       	ldd	r25, Y+4	; 0x04
    13fc:	01 96       	adiw	r24, 0x01	; 1
    13fe:	9c 83       	std	Y+4, r25	; 0x04
    1400:	8b 83       	std	Y+3, r24	; 0x03
    1402:	8b 81       	ldd	r24, Y+3	; 0x03
    1404:	9c 81       	ldd	r25, Y+4	; 0x04
    1406:	84 30       	cpi	r24, 0x04	; 4
    1408:	91 05       	cpc	r25, r1
    140a:	54 f3       	brlt	.-44     	; 0x13e0 <KPD_init+0x12>
	        {
	    	DIO_set_pin_direction(KPD_port,pin_num,DIO_Output);
	    	DIO_set_pin_value(KPD_port,pin_num,DIO_High);
	        }

	        for(int pin_num=7;pin_num>3;pin_num--)
    140c:	87 e0       	ldi	r24, 0x07	; 7
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	9a 83       	std	Y+2, r25	; 0x02
    1412:	89 83       	std	Y+1, r24	; 0x01
    1414:	11 c0       	rjmp	.+34     	; 0x1438 <KPD_init+0x6a>
	        {
	        	DIO_set_pin_direction(KPD_port,pin_num,DIO_Input);
    1416:	99 81       	ldd	r25, Y+1	; 0x01
    1418:	82 e0       	ldi	r24, 0x02	; 2
    141a:	69 2f       	mov	r22, r25
    141c:	40 e0       	ldi	r20, 0x00	; 0
    141e:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_set_pin_direction>
	            DIO_set_pin_value(KPD_port,pin_num,DIO_High);
    1422:	99 81       	ldd	r25, Y+1	; 0x01
    1424:	82 e0       	ldi	r24, 0x02	; 2
    1426:	69 2f       	mov	r22, r25
    1428:	41 e0       	ldi	r20, 0x01	; 1
    142a:	0e 94 4a 07 	call	0xe94	; 0xe94 <DIO_set_pin_value>
	        {
	    	DIO_set_pin_direction(KPD_port,pin_num,DIO_Output);
	    	DIO_set_pin_value(KPD_port,pin_num,DIO_High);
	        }

	        for(int pin_num=7;pin_num>3;pin_num--)
    142e:	89 81       	ldd	r24, Y+1	; 0x01
    1430:	9a 81       	ldd	r25, Y+2	; 0x02
    1432:	01 97       	sbiw	r24, 0x01	; 1
    1434:	9a 83       	std	Y+2, r25	; 0x02
    1436:	89 83       	std	Y+1, r24	; 0x01
    1438:	89 81       	ldd	r24, Y+1	; 0x01
    143a:	9a 81       	ldd	r25, Y+2	; 0x02
    143c:	84 30       	cpi	r24, 0x04	; 4
    143e:	91 05       	cpc	r25, r1
    1440:	54 f7       	brge	.-44     	; 0x1416 <KPD_init+0x48>
	        	DIO_set_pin_direction(KPD_port,pin_num,DIO_Input);
	            DIO_set_pin_value(KPD_port,pin_num,DIO_High);
	        }


}
    1442:	0f 90       	pop	r0
    1444:	0f 90       	pop	r0
    1446:	0f 90       	pop	r0
    1448:	0f 90       	pop	r0
    144a:	cf 91       	pop	r28
    144c:	df 91       	pop	r29
    144e:	08 95       	ret

00001450 <string_conc>:

//collect the number in one string
void string_conc(U8 num5)
{
    1450:	df 93       	push	r29
    1452:	cf 93       	push	r28
    1454:	00 d0       	rcall	.+0      	; 0x1456 <string_conc+0x6>
    1456:	0f 92       	push	r0
    1458:	cd b7       	in	r28, 0x3d	; 61
    145a:	de b7       	in	r29, 0x3e	; 62
    145c:	8b 83       	std	Y+3, r24	; 0x03
	static U8 str1[20];
	static U8 index = 0;
	if((num5 != '+') &&(num5!='c') && (num5!='=') && (num5!='-') && (num5!='*') && (num5!='/') )
    145e:	8b 81       	ldd	r24, Y+3	; 0x03
    1460:	8b 32       	cpi	r24, 0x2B	; 43
    1462:	f1 f0       	breq	.+60     	; 0x14a0 <string_conc+0x50>
    1464:	8b 81       	ldd	r24, Y+3	; 0x03
    1466:	83 36       	cpi	r24, 0x63	; 99
    1468:	d9 f0       	breq	.+54     	; 0x14a0 <string_conc+0x50>
    146a:	8b 81       	ldd	r24, Y+3	; 0x03
    146c:	8d 33       	cpi	r24, 0x3D	; 61
    146e:	c1 f0       	breq	.+48     	; 0x14a0 <string_conc+0x50>
    1470:	8b 81       	ldd	r24, Y+3	; 0x03
    1472:	8d 32       	cpi	r24, 0x2D	; 45
    1474:	a9 f0       	breq	.+42     	; 0x14a0 <string_conc+0x50>
    1476:	8b 81       	ldd	r24, Y+3	; 0x03
    1478:	8a 32       	cpi	r24, 0x2A	; 42
    147a:	91 f0       	breq	.+36     	; 0x14a0 <string_conc+0x50>
    147c:	8b 81       	ldd	r24, Y+3	; 0x03
    147e:	8f 32       	cpi	r24, 0x2F	; 47
    1480:	79 f0       	breq	.+30     	; 0x14a0 <string_conc+0x50>
	{
		str1[index] = num5;
    1482:	80 91 80 00 	lds	r24, 0x0080
    1486:	88 2f       	mov	r24, r24
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	fc 01       	movw	r30, r24
    148c:	ef 57       	subi	r30, 0x7F	; 127
    148e:	ff 4f       	sbci	r31, 0xFF	; 255
    1490:	8b 81       	ldd	r24, Y+3	; 0x03
    1492:	80 83       	st	Z, r24
		index++;
    1494:	80 91 80 00 	lds	r24, 0x0080
    1498:	8f 5f       	subi	r24, 0xFF	; 255
    149a:	80 93 80 00 	sts	0x0080, r24
    149e:	3d c0       	rjmp	.+122    	; 0x151a <string_conc+0xca>
	}
	else if((num5=='+') || (num5=='=') || (num5=='-') || (num5=='*') || (num5=='/'))
    14a0:	8b 81       	ldd	r24, Y+3	; 0x03
    14a2:	8b 32       	cpi	r24, 0x2B	; 43
    14a4:	61 f0       	breq	.+24     	; 0x14be <string_conc+0x6e>
    14a6:	8b 81       	ldd	r24, Y+3	; 0x03
    14a8:	8d 33       	cpi	r24, 0x3D	; 61
    14aa:	49 f0       	breq	.+18     	; 0x14be <string_conc+0x6e>
    14ac:	8b 81       	ldd	r24, Y+3	; 0x03
    14ae:	8d 32       	cpi	r24, 0x2D	; 45
    14b0:	31 f0       	breq	.+12     	; 0x14be <string_conc+0x6e>
    14b2:	8b 81       	ldd	r24, Y+3	; 0x03
    14b4:	8a 32       	cpi	r24, 0x2A	; 42
    14b6:	19 f0       	breq	.+6      	; 0x14be <string_conc+0x6e>
    14b8:	8b 81       	ldd	r24, Y+3	; 0x03
    14ba:	8f 32       	cpi	r24, 0x2F	; 47
    14bc:	71 f5       	brne	.+92     	; 0x151a <string_conc+0xca>
	{
		str1[index] = '\0';
    14be:	80 91 80 00 	lds	r24, 0x0080
    14c2:	88 2f       	mov	r24, r24
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	fc 01       	movw	r30, r24
    14c8:	ef 57       	subi	r30, 0x7F	; 127
    14ca:	ff 4f       	sbci	r31, 0xFF	; 255
    14cc:	10 82       	st	Z, r1
		StringToInteger(str1,index);
    14ce:	20 91 80 00 	lds	r18, 0x0080
    14d2:	81 e8       	ldi	r24, 0x81	; 129
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	62 2f       	mov	r22, r18
    14d8:	0e 94 93 0a 	call	0x1526	; 0x1526 <StringToInteger>
		for(int i=index;i>=0;i--)
    14dc:	80 91 80 00 	lds	r24, 0x0080
    14e0:	88 2f       	mov	r24, r24
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	9a 83       	std	Y+2, r25	; 0x02
    14e6:	89 83       	std	Y+1, r24	; 0x01
    14e8:	0b c0       	rjmp	.+22     	; 0x1500 <string_conc+0xb0>
		{
			str1[i]=0;
    14ea:	89 81       	ldd	r24, Y+1	; 0x01
    14ec:	9a 81       	ldd	r25, Y+2	; 0x02
    14ee:	fc 01       	movw	r30, r24
    14f0:	ef 57       	subi	r30, 0x7F	; 127
    14f2:	ff 4f       	sbci	r31, 0xFF	; 255
    14f4:	10 82       	st	Z, r1
	}
	else if((num5=='+') || (num5=='=') || (num5=='-') || (num5=='*') || (num5=='/'))
	{
		str1[index] = '\0';
		StringToInteger(str1,index);
		for(int i=index;i>=0;i--)
    14f6:	89 81       	ldd	r24, Y+1	; 0x01
    14f8:	9a 81       	ldd	r25, Y+2	; 0x02
    14fa:	01 97       	sbiw	r24, 0x01	; 1
    14fc:	9a 83       	std	Y+2, r25	; 0x02
    14fe:	89 83       	std	Y+1, r24	; 0x01
    1500:	89 81       	ldd	r24, Y+1	; 0x01
    1502:	9a 81       	ldd	r25, Y+2	; 0x02
    1504:	99 23       	and	r25, r25
    1506:	8c f7       	brge	.-30     	; 0x14ea <string_conc+0x9a>
		{
			str1[i]=0;
		}
		calc(num5);
    1508:	8b 81       	ldd	r24, Y+3	; 0x03
    150a:	88 2f       	mov	r24, r24
    150c:	90 e0       	ldi	r25, 0x00	; 0
    150e:	a0 e0       	ldi	r26, 0x00	; 0
    1510:	b0 e0       	ldi	r27, 0x00	; 0
    1512:	bc 01       	movw	r22, r24
    1514:	cd 01       	movw	r24, r26
    1516:	0e 94 0a 0b 	call	0x1614	; 0x1614 <calc>
	}
}
    151a:	0f 90       	pop	r0
    151c:	0f 90       	pop	r0
    151e:	0f 90       	pop	r0
    1520:	cf 91       	pop	r28
    1522:	df 91       	pop	r29
    1524:	08 95       	ret

00001526 <StringToInteger>:

//convert string to digit
void StringToInteger(U8 string[],U8 length)
{
    1526:	df 93       	push	r29
    1528:	cf 93       	push	r28
    152a:	cd b7       	in	r28, 0x3d	; 61
    152c:	de b7       	in	r29, 0x3e	; 62
    152e:	61 97       	sbiw	r28, 0x11	; 17
    1530:	0f b6       	in	r0, 0x3f	; 63
    1532:	f8 94       	cli
    1534:	de bf       	out	0x3e, r29	; 62
    1536:	0f be       	out	0x3f, r0	; 63
    1538:	cd bf       	out	0x3d, r28	; 61
    153a:	98 8b       	std	Y+16, r25	; 0x10
    153c:	8f 87       	std	Y+15, r24	; 0x0f
    153e:	69 8b       	std	Y+17, r22	; 0x11
	U32 digit_o;;
	U32 j=1;
    1540:	81 e0       	ldi	r24, 0x01	; 1
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	a0 e0       	ldi	r26, 0x00	; 0
    1546:	b0 e0       	ldi	r27, 0x00	; 0
    1548:	8f 83       	std	Y+7, r24	; 0x07
    154a:	98 87       	std	Y+8, r25	; 0x08
    154c:	a9 87       	std	Y+9, r26	; 0x09
    154e:	ba 87       	std	Y+10, r27	; 0x0a
	U32 IntValue=0;
    1550:	1b 82       	std	Y+3, r1	; 0x03
    1552:	1c 82       	std	Y+4, r1	; 0x04
    1554:	1d 82       	std	Y+5, r1	; 0x05
    1556:	1e 82       	std	Y+6, r1	; 0x06
	for(int i =(length-1);i>=0;i--)
    1558:	89 89       	ldd	r24, Y+17	; 0x11
    155a:	88 2f       	mov	r24, r24
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	01 97       	sbiw	r24, 0x01	; 1
    1560:	9a 83       	std	Y+2, r25	; 0x02
    1562:	89 83       	std	Y+1, r24	; 0x01
    1564:	41 c0       	rjmp	.+130    	; 0x15e8 <StringToInteger+0xc2>
	{
	digit_o = string[i];
    1566:	29 81       	ldd	r18, Y+1	; 0x01
    1568:	3a 81       	ldd	r19, Y+2	; 0x02
    156a:	8f 85       	ldd	r24, Y+15	; 0x0f
    156c:	98 89       	ldd	r25, Y+16	; 0x10
    156e:	fc 01       	movw	r30, r24
    1570:	e2 0f       	add	r30, r18
    1572:	f3 1f       	adc	r31, r19
    1574:	80 81       	ld	r24, Z
    1576:	88 2f       	mov	r24, r24
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	a0 e0       	ldi	r26, 0x00	; 0
    157c:	b0 e0       	ldi	r27, 0x00	; 0
    157e:	8b 87       	std	Y+11, r24	; 0x0b
    1580:	9c 87       	std	Y+12, r25	; 0x0c
    1582:	ad 87       	std	Y+13, r26	; 0x0d
    1584:	be 87       	std	Y+14, r27	; 0x0e
	IntValue = IntValue +(digit_o * j);
    1586:	8b 85       	ldd	r24, Y+11	; 0x0b
    1588:	9c 85       	ldd	r25, Y+12	; 0x0c
    158a:	ad 85       	ldd	r26, Y+13	; 0x0d
    158c:	be 85       	ldd	r27, Y+14	; 0x0e
    158e:	2f 81       	ldd	r18, Y+7	; 0x07
    1590:	38 85       	ldd	r19, Y+8	; 0x08
    1592:	49 85       	ldd	r20, Y+9	; 0x09
    1594:	5a 85       	ldd	r21, Y+10	; 0x0a
    1596:	bc 01       	movw	r22, r24
    1598:	cd 01       	movw	r24, r26
    159a:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsi3>
    159e:	9b 01       	movw	r18, r22
    15a0:	ac 01       	movw	r20, r24
    15a2:	8b 81       	ldd	r24, Y+3	; 0x03
    15a4:	9c 81       	ldd	r25, Y+4	; 0x04
    15a6:	ad 81       	ldd	r26, Y+5	; 0x05
    15a8:	be 81       	ldd	r27, Y+6	; 0x06
    15aa:	82 0f       	add	r24, r18
    15ac:	93 1f       	adc	r25, r19
    15ae:	a4 1f       	adc	r26, r20
    15b0:	b5 1f       	adc	r27, r21
    15b2:	8b 83       	std	Y+3, r24	; 0x03
    15b4:	9c 83       	std	Y+4, r25	; 0x04
    15b6:	ad 83       	std	Y+5, r26	; 0x05
    15b8:	be 83       	std	Y+6, r27	; 0x06
	j= j*10;
    15ba:	8f 81       	ldd	r24, Y+7	; 0x07
    15bc:	98 85       	ldd	r25, Y+8	; 0x08
    15be:	a9 85       	ldd	r26, Y+9	; 0x09
    15c0:	ba 85       	ldd	r27, Y+10	; 0x0a
    15c2:	2a e0       	ldi	r18, 0x0A	; 10
    15c4:	30 e0       	ldi	r19, 0x00	; 0
    15c6:	40 e0       	ldi	r20, 0x00	; 0
    15c8:	50 e0       	ldi	r21, 0x00	; 0
    15ca:	bc 01       	movw	r22, r24
    15cc:	cd 01       	movw	r24, r26
    15ce:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsi3>
    15d2:	dc 01       	movw	r26, r24
    15d4:	cb 01       	movw	r24, r22
    15d6:	8f 83       	std	Y+7, r24	; 0x07
    15d8:	98 87       	std	Y+8, r25	; 0x08
    15da:	a9 87       	std	Y+9, r26	; 0x09
    15dc:	ba 87       	std	Y+10, r27	; 0x0a
void StringToInteger(U8 string[],U8 length)
{
	U32 digit_o;;
	U32 j=1;
	U32 IntValue=0;
	for(int i =(length-1);i>=0;i--)
    15de:	89 81       	ldd	r24, Y+1	; 0x01
    15e0:	9a 81       	ldd	r25, Y+2	; 0x02
    15e2:	01 97       	sbiw	r24, 0x01	; 1
    15e4:	9a 83       	std	Y+2, r25	; 0x02
    15e6:	89 83       	std	Y+1, r24	; 0x01
    15e8:	89 81       	ldd	r24, Y+1	; 0x01
    15ea:	9a 81       	ldd	r25, Y+2	; 0x02
    15ec:	99 23       	and	r25, r25
    15ee:	0c f0       	brlt	.+2      	; 0x15f2 <StringToInteger+0xcc>
    15f0:	ba cf       	rjmp	.-140    	; 0x1566 <StringToInteger+0x40>
	{
	digit_o = string[i];
	IntValue = IntValue +(digit_o * j);
	j= j*10;
	}
	calc(IntValue);
    15f2:	8b 81       	ldd	r24, Y+3	; 0x03
    15f4:	9c 81       	ldd	r25, Y+4	; 0x04
    15f6:	ad 81       	ldd	r26, Y+5	; 0x05
    15f8:	be 81       	ldd	r27, Y+6	; 0x06
    15fa:	bc 01       	movw	r22, r24
    15fc:	cd 01       	movw	r24, r26
    15fe:	0e 94 0a 0b 	call	0x1614	; 0x1614 <calc>
}
    1602:	61 96       	adiw	r28, 0x11	; 17
    1604:	0f b6       	in	r0, 0x3f	; 63
    1606:	f8 94       	cli
    1608:	de bf       	out	0x3e, r29	; 62
    160a:	0f be       	out	0x3f, r0	; 63
    160c:	cd bf       	out	0x3d, r28	; 61
    160e:	cf 91       	pop	r28
    1610:	df 91       	pop	r29
    1612:	08 95       	ret

00001614 <calc>:

//calculation function
void calc(U32 calculator)
{
    1614:	df 93       	push	r29
    1616:	cf 93       	push	r28
    1618:	cd b7       	in	r28, 0x3d	; 61
    161a:	de b7       	in	r29, 0x3e	; 62
    161c:	2a 97       	sbiw	r28, 0x0a	; 10
    161e:	0f b6       	in	r0, 0x3f	; 63
    1620:	f8 94       	cli
    1622:	de bf       	out	0x3e, r29	; 62
    1624:	0f be       	out	0x3f, r0	; 63
    1626:	cd bf       	out	0x3d, r28	; 61
    1628:	69 83       	std	Y+1, r22	; 0x01
    162a:	7a 83       	std	Y+2, r23	; 0x02
    162c:	8b 83       	std	Y+3, r24	; 0x03
    162e:	9c 83       	std	Y+4, r25	; 0x04
	static U32 num3 =0;
	static U32 num2 =0;
	static U8 op_o =0;
	if((num3==0) && (calculator!='+') && (calculator!='c'))
    1630:	80 91 9a 00 	lds	r24, 0x009A
    1634:	90 91 9b 00 	lds	r25, 0x009B
    1638:	a0 91 9c 00 	lds	r26, 0x009C
    163c:	b0 91 9d 00 	lds	r27, 0x009D
    1640:	00 97       	sbiw	r24, 0x00	; 0
    1642:	a1 05       	cpc	r26, r1
    1644:	b1 05       	cpc	r27, r1
    1646:	f9 f4       	brne	.+62     	; 0x1686 <calc+0x72>
    1648:	89 81       	ldd	r24, Y+1	; 0x01
    164a:	9a 81       	ldd	r25, Y+2	; 0x02
    164c:	ab 81       	ldd	r26, Y+3	; 0x03
    164e:	bc 81       	ldd	r27, Y+4	; 0x04
    1650:	8b 32       	cpi	r24, 0x2B	; 43
    1652:	91 05       	cpc	r25, r1
    1654:	a1 05       	cpc	r26, r1
    1656:	b1 05       	cpc	r27, r1
    1658:	b1 f0       	breq	.+44     	; 0x1686 <calc+0x72>
    165a:	89 81       	ldd	r24, Y+1	; 0x01
    165c:	9a 81       	ldd	r25, Y+2	; 0x02
    165e:	ab 81       	ldd	r26, Y+3	; 0x03
    1660:	bc 81       	ldd	r27, Y+4	; 0x04
    1662:	83 36       	cpi	r24, 0x63	; 99
    1664:	91 05       	cpc	r25, r1
    1666:	a1 05       	cpc	r26, r1
    1668:	b1 05       	cpc	r27, r1
    166a:	69 f0       	breq	.+26     	; 0x1686 <calc+0x72>
	{
		num3 = calculator;
    166c:	89 81       	ldd	r24, Y+1	; 0x01
    166e:	9a 81       	ldd	r25, Y+2	; 0x02
    1670:	ab 81       	ldd	r26, Y+3	; 0x03
    1672:	bc 81       	ldd	r27, Y+4	; 0x04
    1674:	80 93 9a 00 	sts	0x009A, r24
    1678:	90 93 9b 00 	sts	0x009B, r25
    167c:	a0 93 9c 00 	sts	0x009C, r26
    1680:	b0 93 9d 00 	sts	0x009D, r27
    1684:	86 c1       	rjmp	.+780    	; 0x1992 <calc+0x37e>
	}
	else if( (calculator=='+') || (calculator=='-') || (calculator =='*') || (calculator =='/') )
    1686:	89 81       	ldd	r24, Y+1	; 0x01
    1688:	9a 81       	ldd	r25, Y+2	; 0x02
    168a:	ab 81       	ldd	r26, Y+3	; 0x03
    168c:	bc 81       	ldd	r27, Y+4	; 0x04
    168e:	8b 32       	cpi	r24, 0x2B	; 43
    1690:	91 05       	cpc	r25, r1
    1692:	a1 05       	cpc	r26, r1
    1694:	b1 05       	cpc	r27, r1
    1696:	e1 f0       	breq	.+56     	; 0x16d0 <calc+0xbc>
    1698:	89 81       	ldd	r24, Y+1	; 0x01
    169a:	9a 81       	ldd	r25, Y+2	; 0x02
    169c:	ab 81       	ldd	r26, Y+3	; 0x03
    169e:	bc 81       	ldd	r27, Y+4	; 0x04
    16a0:	8d 32       	cpi	r24, 0x2D	; 45
    16a2:	91 05       	cpc	r25, r1
    16a4:	a1 05       	cpc	r26, r1
    16a6:	b1 05       	cpc	r27, r1
    16a8:	99 f0       	breq	.+38     	; 0x16d0 <calc+0xbc>
    16aa:	89 81       	ldd	r24, Y+1	; 0x01
    16ac:	9a 81       	ldd	r25, Y+2	; 0x02
    16ae:	ab 81       	ldd	r26, Y+3	; 0x03
    16b0:	bc 81       	ldd	r27, Y+4	; 0x04
    16b2:	8a 32       	cpi	r24, 0x2A	; 42
    16b4:	91 05       	cpc	r25, r1
    16b6:	a1 05       	cpc	r26, r1
    16b8:	b1 05       	cpc	r27, r1
    16ba:	51 f0       	breq	.+20     	; 0x16d0 <calc+0xbc>
    16bc:	89 81       	ldd	r24, Y+1	; 0x01
    16be:	9a 81       	ldd	r25, Y+2	; 0x02
    16c0:	ab 81       	ldd	r26, Y+3	; 0x03
    16c2:	bc 81       	ldd	r27, Y+4	; 0x04
    16c4:	8f 32       	cpi	r24, 0x2F	; 47
    16c6:	91 05       	cpc	r25, r1
    16c8:	a1 05       	cpc	r26, r1
    16ca:	b1 05       	cpc	r27, r1
    16cc:	09 f0       	breq	.+2      	; 0x16d0 <calc+0xbc>
    16ce:	47 c0       	rjmp	.+142    	; 0x175e <calc+0x14a>
		{

		switch(calculator){
    16d0:	89 81       	ldd	r24, Y+1	; 0x01
    16d2:	9a 81       	ldd	r25, Y+2	; 0x02
    16d4:	ab 81       	ldd	r26, Y+3	; 0x03
    16d6:	bc 81       	ldd	r27, Y+4	; 0x04
    16d8:	8f 83       	std	Y+7, r24	; 0x07
    16da:	98 87       	std	Y+8, r25	; 0x08
    16dc:	a9 87       	std	Y+9, r26	; 0x09
    16de:	ba 87       	std	Y+10, r27	; 0x0a
    16e0:	8f 81       	ldd	r24, Y+7	; 0x07
    16e2:	98 85       	ldd	r25, Y+8	; 0x08
    16e4:	a9 85       	ldd	r26, Y+9	; 0x09
    16e6:	ba 85       	ldd	r27, Y+10	; 0x0a
    16e8:	8b 32       	cpi	r24, 0x2B	; 43
    16ea:	91 05       	cpc	r25, r1
    16ec:	a1 05       	cpc	r26, r1
    16ee:	b1 05       	cpc	r27, r1
    16f0:	31 f1       	breq	.+76     	; 0x173e <calc+0x12a>
    16f2:	8f 81       	ldd	r24, Y+7	; 0x07
    16f4:	98 85       	ldd	r25, Y+8	; 0x08
    16f6:	a9 85       	ldd	r26, Y+9	; 0x09
    16f8:	ba 85       	ldd	r27, Y+10	; 0x0a
    16fa:	8c 32       	cpi	r24, 0x2C	; 44
    16fc:	91 05       	cpc	r25, r1
    16fe:	a1 05       	cpc	r26, r1
    1700:	b1 05       	cpc	r27, r1
    1702:	50 f4       	brcc	.+20     	; 0x1718 <calc+0x104>
    1704:	8f 81       	ldd	r24, Y+7	; 0x07
    1706:	98 85       	ldd	r25, Y+8	; 0x08
    1708:	a9 85       	ldd	r26, Y+9	; 0x09
    170a:	ba 85       	ldd	r27, Y+10	; 0x0a
    170c:	8a 32       	cpi	r24, 0x2A	; 42
    170e:	91 05       	cpc	r25, r1
    1710:	a1 05       	cpc	r26, r1
    1712:	b1 05       	cpc	r27, r1
    1714:	e1 f0       	breq	.+56     	; 0x174e <calc+0x13a>
    1716:	3d c1       	rjmp	.+634    	; 0x1992 <calc+0x37e>
    1718:	8f 81       	ldd	r24, Y+7	; 0x07
    171a:	98 85       	ldd	r25, Y+8	; 0x08
    171c:	a9 85       	ldd	r26, Y+9	; 0x09
    171e:	ba 85       	ldd	r27, Y+10	; 0x0a
    1720:	8d 32       	cpi	r24, 0x2D	; 45
    1722:	91 05       	cpc	r25, r1
    1724:	a1 05       	cpc	r26, r1
    1726:	b1 05       	cpc	r27, r1
    1728:	71 f0       	breq	.+28     	; 0x1746 <calc+0x132>
    172a:	8f 81       	ldd	r24, Y+7	; 0x07
    172c:	98 85       	ldd	r25, Y+8	; 0x08
    172e:	a9 85       	ldd	r26, Y+9	; 0x09
    1730:	ba 85       	ldd	r27, Y+10	; 0x0a
    1732:	8f 32       	cpi	r24, 0x2F	; 47
    1734:	91 05       	cpc	r25, r1
    1736:	a1 05       	cpc	r26, r1
    1738:	b1 05       	cpc	r27, r1
    173a:	69 f0       	breq	.+26     	; 0x1756 <calc+0x142>
    173c:	2a c1       	rjmp	.+596    	; 0x1992 <calc+0x37e>

		case '+':
		op_o=1;
    173e:	81 e0       	ldi	r24, 0x01	; 1
    1740:	80 93 95 00 	sts	0x0095, r24
    1744:	26 c1       	rjmp	.+588    	; 0x1992 <calc+0x37e>
		break;

		case '-':
		op_o=2;
    1746:	82 e0       	ldi	r24, 0x02	; 2
    1748:	80 93 95 00 	sts	0x0095, r24
    174c:	22 c1       	rjmp	.+580    	; 0x1992 <calc+0x37e>
		break;

		case '*':
		op_o=3;
    174e:	83 e0       	ldi	r24, 0x03	; 3
    1750:	80 93 95 00 	sts	0x0095, r24
    1754:	1e c1       	rjmp	.+572    	; 0x1992 <calc+0x37e>
		break;

		case '/':
		op_o=4;
    1756:	84 e0       	ldi	r24, 0x04	; 4
    1758:	80 93 95 00 	sts	0x0095, r24
    175c:	1a c1       	rjmp	.+564    	; 0x1992 <calc+0x37e>
		break;
		}
		}

	else if((num2 == 0) &&(calculator !='+') && (calculator!='c') )
    175e:	80 91 96 00 	lds	r24, 0x0096
    1762:	90 91 97 00 	lds	r25, 0x0097
    1766:	a0 91 98 00 	lds	r26, 0x0098
    176a:	b0 91 99 00 	lds	r27, 0x0099
    176e:	00 97       	sbiw	r24, 0x00	; 0
    1770:	a1 05       	cpc	r26, r1
    1772:	b1 05       	cpc	r27, r1
    1774:	f9 f4       	brne	.+62     	; 0x17b4 <calc+0x1a0>
    1776:	89 81       	ldd	r24, Y+1	; 0x01
    1778:	9a 81       	ldd	r25, Y+2	; 0x02
    177a:	ab 81       	ldd	r26, Y+3	; 0x03
    177c:	bc 81       	ldd	r27, Y+4	; 0x04
    177e:	8b 32       	cpi	r24, 0x2B	; 43
    1780:	91 05       	cpc	r25, r1
    1782:	a1 05       	cpc	r26, r1
    1784:	b1 05       	cpc	r27, r1
    1786:	b1 f0       	breq	.+44     	; 0x17b4 <calc+0x1a0>
    1788:	89 81       	ldd	r24, Y+1	; 0x01
    178a:	9a 81       	ldd	r25, Y+2	; 0x02
    178c:	ab 81       	ldd	r26, Y+3	; 0x03
    178e:	bc 81       	ldd	r27, Y+4	; 0x04
    1790:	83 36       	cpi	r24, 0x63	; 99
    1792:	91 05       	cpc	r25, r1
    1794:	a1 05       	cpc	r26, r1
    1796:	b1 05       	cpc	r27, r1
    1798:	69 f0       	breq	.+26     	; 0x17b4 <calc+0x1a0>
	{
		num2 = calculator;
    179a:	89 81       	ldd	r24, Y+1	; 0x01
    179c:	9a 81       	ldd	r25, Y+2	; 0x02
    179e:	ab 81       	ldd	r26, Y+3	; 0x03
    17a0:	bc 81       	ldd	r27, Y+4	; 0x04
    17a2:	80 93 96 00 	sts	0x0096, r24
    17a6:	90 93 97 00 	sts	0x0097, r25
    17aa:	a0 93 98 00 	sts	0x0098, r26
    17ae:	b0 93 99 00 	sts	0x0099, r27
    17b2:	ef c0       	rjmp	.+478    	; 0x1992 <calc+0x37e>
	}

	else if(calculator==('='))
    17b4:	89 81       	ldd	r24, Y+1	; 0x01
    17b6:	9a 81       	ldd	r25, Y+2	; 0x02
    17b8:	ab 81       	ldd	r26, Y+3	; 0x03
    17ba:	bc 81       	ldd	r27, Y+4	; 0x04
    17bc:	8d 33       	cpi	r24, 0x3D	; 61
    17be:	91 05       	cpc	r25, r1
    17c0:	a1 05       	cpc	r26, r1
    17c2:	b1 05       	cpc	r27, r1
    17c4:	09 f0       	breq	.+2      	; 0x17c8 <calc+0x1b4>
    17c6:	cc c0       	rjmp	.+408    	; 0x1960 <calc+0x34c>
	{
        switch(op_o){
    17c8:	80 91 95 00 	lds	r24, 0x0095
    17cc:	a8 2f       	mov	r26, r24
    17ce:	b0 e0       	ldi	r27, 0x00	; 0
    17d0:	be 83       	std	Y+6, r27	; 0x06
    17d2:	ad 83       	std	Y+5, r26	; 0x05
    17d4:	2d 81       	ldd	r18, Y+5	; 0x05
    17d6:	3e 81       	ldd	r19, Y+6	; 0x06
    17d8:	22 30       	cpi	r18, 0x02	; 2
    17da:	31 05       	cpc	r19, r1
    17dc:	09 f4       	brne	.+2      	; 0x17e0 <calc+0x1cc>
    17de:	41 c0       	rjmp	.+130    	; 0x1862 <calc+0x24e>
    17e0:	8d 81       	ldd	r24, Y+5	; 0x05
    17e2:	9e 81       	ldd	r25, Y+6	; 0x06
    17e4:	83 30       	cpi	r24, 0x03	; 3
    17e6:	91 05       	cpc	r25, r1
    17e8:	34 f4       	brge	.+12     	; 0x17f6 <calc+0x1e2>
    17ea:	ad 81       	ldd	r26, Y+5	; 0x05
    17ec:	be 81       	ldd	r27, Y+6	; 0x06
    17ee:	a1 30       	cpi	r26, 0x01	; 1
    17f0:	b1 05       	cpc	r27, r1
    17f2:	71 f0       	breq	.+28     	; 0x1810 <calc+0x1fc>
    17f4:	ce c0       	rjmp	.+412    	; 0x1992 <calc+0x37e>
    17f6:	2d 81       	ldd	r18, Y+5	; 0x05
    17f8:	3e 81       	ldd	r19, Y+6	; 0x06
    17fa:	23 30       	cpi	r18, 0x03	; 3
    17fc:	31 05       	cpc	r19, r1
    17fe:	09 f4       	brne	.+2      	; 0x1802 <calc+0x1ee>
    1800:	59 c0       	rjmp	.+178    	; 0x18b4 <calc+0x2a0>
    1802:	8d 81       	ldd	r24, Y+5	; 0x05
    1804:	9e 81       	ldd	r25, Y+6	; 0x06
    1806:	84 30       	cpi	r24, 0x04	; 4
    1808:	91 05       	cpc	r25, r1
    180a:	09 f4       	brne	.+2      	; 0x180e <calc+0x1fa>
    180c:	7e c0       	rjmp	.+252    	; 0x190a <calc+0x2f6>
    180e:	c1 c0       	rjmp	.+386    	; 0x1992 <calc+0x37e>
        case 1:
  		  LCD_write_no(num3 + num2);
    1810:	80 91 9a 00 	lds	r24, 0x009A
    1814:	90 91 9b 00 	lds	r25, 0x009B
    1818:	a0 91 9c 00 	lds	r26, 0x009C
    181c:	b0 91 9d 00 	lds	r27, 0x009D
    1820:	20 91 96 00 	lds	r18, 0x0096
    1824:	30 91 97 00 	lds	r19, 0x0097
    1828:	40 91 98 00 	lds	r20, 0x0098
    182c:	50 91 99 00 	lds	r21, 0x0099
    1830:	82 0f       	add	r24, r18
    1832:	93 1f       	adc	r25, r19
    1834:	a4 1f       	adc	r26, r20
    1836:	b5 1f       	adc	r27, r21
    1838:	bc 01       	movw	r22, r24
    183a:	cd 01       	movw	r24, r26
    183c:	0e 94 1a 11 	call	0x2234	; 0x2234 <LCD_write_no>
  		  num3 = 0;
    1840:	10 92 9a 00 	sts	0x009A, r1
    1844:	10 92 9b 00 	sts	0x009B, r1
    1848:	10 92 9c 00 	sts	0x009C, r1
    184c:	10 92 9d 00 	sts	0x009D, r1
  		  num2 = 0;
    1850:	10 92 96 00 	sts	0x0096, r1
    1854:	10 92 97 00 	sts	0x0097, r1
    1858:	10 92 98 00 	sts	0x0098, r1
    185c:	10 92 99 00 	sts	0x0099, r1
    1860:	98 c0       	rjmp	.+304    	; 0x1992 <calc+0x37e>
  		  break;

		case 2:
		  LCD_write_no(num3 - num2);
    1862:	80 91 9a 00 	lds	r24, 0x009A
    1866:	90 91 9b 00 	lds	r25, 0x009B
    186a:	a0 91 9c 00 	lds	r26, 0x009C
    186e:	b0 91 9d 00 	lds	r27, 0x009D
    1872:	20 91 96 00 	lds	r18, 0x0096
    1876:	30 91 97 00 	lds	r19, 0x0097
    187a:	40 91 98 00 	lds	r20, 0x0098
    187e:	50 91 99 00 	lds	r21, 0x0099
    1882:	82 1b       	sub	r24, r18
    1884:	93 0b       	sbc	r25, r19
    1886:	a4 0b       	sbc	r26, r20
    1888:	b5 0b       	sbc	r27, r21
    188a:	bc 01       	movw	r22, r24
    188c:	cd 01       	movw	r24, r26
    188e:	0e 94 1a 11 	call	0x2234	; 0x2234 <LCD_write_no>
		  num3 = 0;
    1892:	10 92 9a 00 	sts	0x009A, r1
    1896:	10 92 9b 00 	sts	0x009B, r1
    189a:	10 92 9c 00 	sts	0x009C, r1
    189e:	10 92 9d 00 	sts	0x009D, r1
		  num2 = 0;
    18a2:	10 92 96 00 	sts	0x0096, r1
    18a6:	10 92 97 00 	sts	0x0097, r1
    18aa:	10 92 98 00 	sts	0x0098, r1
    18ae:	10 92 99 00 	sts	0x0099, r1
    18b2:	6f c0       	rjmp	.+222    	; 0x1992 <calc+0x37e>
		  break;


        case 3:
         LCD_write_no(num3 * num2);
    18b4:	80 91 9a 00 	lds	r24, 0x009A
    18b8:	90 91 9b 00 	lds	r25, 0x009B
    18bc:	a0 91 9c 00 	lds	r26, 0x009C
    18c0:	b0 91 9d 00 	lds	r27, 0x009D
    18c4:	20 91 96 00 	lds	r18, 0x0096
    18c8:	30 91 97 00 	lds	r19, 0x0097
    18cc:	40 91 98 00 	lds	r20, 0x0098
    18d0:	50 91 99 00 	lds	r21, 0x0099
    18d4:	bc 01       	movw	r22, r24
    18d6:	cd 01       	movw	r24, r26
    18d8:	0e 94 8f 12 	call	0x251e	; 0x251e <__mulsi3>
    18dc:	dc 01       	movw	r26, r24
    18de:	cb 01       	movw	r24, r22
    18e0:	bc 01       	movw	r22, r24
    18e2:	cd 01       	movw	r24, r26
    18e4:	0e 94 1a 11 	call	0x2234	; 0x2234 <LCD_write_no>
         num3 = 0;
    18e8:	10 92 9a 00 	sts	0x009A, r1
    18ec:	10 92 9b 00 	sts	0x009B, r1
    18f0:	10 92 9c 00 	sts	0x009C, r1
    18f4:	10 92 9d 00 	sts	0x009D, r1
         num2 = 0;
    18f8:	10 92 96 00 	sts	0x0096, r1
    18fc:	10 92 97 00 	sts	0x0097, r1
    1900:	10 92 98 00 	sts	0x0098, r1
    1904:	10 92 99 00 	sts	0x0099, r1
    1908:	44 c0       	rjmp	.+136    	; 0x1992 <calc+0x37e>
         break;

        case 4:
          LCD_write_no(num3 / num2);
    190a:	80 91 9a 00 	lds	r24, 0x009A
    190e:	90 91 9b 00 	lds	r25, 0x009B
    1912:	a0 91 9c 00 	lds	r26, 0x009C
    1916:	b0 91 9d 00 	lds	r27, 0x009D
    191a:	20 91 96 00 	lds	r18, 0x0096
    191e:	30 91 97 00 	lds	r19, 0x0097
    1922:	40 91 98 00 	lds	r20, 0x0098
    1926:	50 91 99 00 	lds	r21, 0x0099
    192a:	bc 01       	movw	r22, r24
    192c:	cd 01       	movw	r24, r26
    192e:	0e 94 ae 12 	call	0x255c	; 0x255c <__udivmodsi4>
    1932:	da 01       	movw	r26, r20
    1934:	c9 01       	movw	r24, r18
    1936:	bc 01       	movw	r22, r24
    1938:	cd 01       	movw	r24, r26
    193a:	0e 94 1a 11 	call	0x2234	; 0x2234 <LCD_write_no>
          num3 = 0;
    193e:	10 92 9a 00 	sts	0x009A, r1
    1942:	10 92 9b 00 	sts	0x009B, r1
    1946:	10 92 9c 00 	sts	0x009C, r1
    194a:	10 92 9d 00 	sts	0x009D, r1
          num2 = 0;
    194e:	10 92 96 00 	sts	0x0096, r1
    1952:	10 92 97 00 	sts	0x0097, r1
    1956:	10 92 98 00 	sts	0x0098, r1
    195a:	10 92 99 00 	sts	0x0099, r1
    195e:	19 c0       	rjmp	.+50     	; 0x1992 <calc+0x37e>
          break;
         }
	}

	else if(calculator == 'c')
    1960:	89 81       	ldd	r24, Y+1	; 0x01
    1962:	9a 81       	ldd	r25, Y+2	; 0x02
    1964:	ab 81       	ldd	r26, Y+3	; 0x03
    1966:	bc 81       	ldd	r27, Y+4	; 0x04
    1968:	83 36       	cpi	r24, 0x63	; 99
    196a:	91 05       	cpc	r25, r1
    196c:	a1 05       	cpc	r26, r1
    196e:	b1 05       	cpc	r27, r1
    1970:	81 f4       	brne	.+32     	; 0x1992 <calc+0x37e>
	{
		num3 = 0;
    1972:	10 92 9a 00 	sts	0x009A, r1
    1976:	10 92 9b 00 	sts	0x009B, r1
    197a:	10 92 9c 00 	sts	0x009C, r1
    197e:	10 92 9d 00 	sts	0x009D, r1
		num2 = 0;
    1982:	10 92 96 00 	sts	0x0096, r1
    1986:	10 92 97 00 	sts	0x0097, r1
    198a:	10 92 98 00 	sts	0x0098, r1
    198e:	10 92 99 00 	sts	0x0099, r1
	}
	}
    1992:	2a 96       	adiw	r28, 0x0a	; 10
    1994:	0f b6       	in	r0, 0x3f	; 63
    1996:	f8 94       	cli
    1998:	de bf       	out	0x3e, r29	; 62
    199a:	0f be       	out	0x3f, r0	; 63
    199c:	cd bf       	out	0x3d, r28	; 61
    199e:	cf 91       	pop	r28
    19a0:	df 91       	pop	r29
    19a2:	08 95       	ret

000019a4 <LCD_write_cmd>:
#include "LCD_private.h"
#include "LCD_interface.h"

 U8 * num1;
void LCD_write_cmd(U8 cmd)
{
    19a4:	df 93       	push	r29
    19a6:	cf 93       	push	r28
    19a8:	0f 92       	push	r0
    19aa:	cd b7       	in	r28, 0x3d	; 61
    19ac:	de b7       	in	r29, 0x3e	; 62
    19ae:	89 83       	std	Y+1, r24	; 0x01
    DIO_set_pin_value(LCD_control_port, LCD_rs_pin, DIO_Low );
    19b0:	80 e0       	ldi	r24, 0x00	; 0
    19b2:	60 e0       	ldi	r22, 0x00	; 0
    19b4:	40 e0       	ldi	r20, 0x00	; 0
    19b6:	0e 94 4a 07 	call	0xe94	; 0xe94 <DIO_set_pin_value>
	LCD_write(cmd);
    19ba:	89 81       	ldd	r24, Y+1	; 0x01
    19bc:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <LCD_write>
}
    19c0:	0f 90       	pop	r0
    19c2:	cf 91       	pop	r28
    19c4:	df 91       	pop	r29
    19c6:	08 95       	ret

000019c8 <LCD_write_data>:

void LCD_write_data(U8 data)
{
    19c8:	df 93       	push	r29
    19ca:	cf 93       	push	r28
    19cc:	0f 92       	push	r0
    19ce:	cd b7       	in	r28, 0x3d	; 61
    19d0:	de b7       	in	r29, 0x3e	; 62
    19d2:	89 83       	std	Y+1, r24	; 0x01
    DIO_set_pin_value( LCD_control_port, LCD_rs_pin, DIO_High );
    19d4:	80 e0       	ldi	r24, 0x00	; 0
    19d6:	60 e0       	ldi	r22, 0x00	; 0
    19d8:	41 e0       	ldi	r20, 0x01	; 1
    19da:	0e 94 4a 07 	call	0xe94	; 0xe94 <DIO_set_pin_value>
	LCD_write(data);
    19de:	89 81       	ldd	r24, Y+1	; 0x01
    19e0:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <LCD_write>
}
    19e4:	0f 90       	pop	r0
    19e6:	cf 91       	pop	r28
    19e8:	df 91       	pop	r29
    19ea:	08 95       	ret

000019ec <LCD_write>:


void LCD_write(U8 value)
{
    19ec:	df 93       	push	r29
    19ee:	cf 93       	push	r28
    19f0:	cd b7       	in	r28, 0x3d	; 61
    19f2:	de b7       	in	r29, 0x3e	; 62
    19f4:	61 97       	sbiw	r28, 0x11	; 17
    19f6:	0f b6       	in	r0, 0x3f	; 63
    19f8:	f8 94       	cli
    19fa:	de bf       	out	0x3e, r29	; 62
    19fc:	0f be       	out	0x3f, r0	; 63
    19fe:	cd bf       	out	0x3d, r28	; 61
    1a00:	89 8b       	std	Y+17, r24	; 0x11
	DIO_set_pin_value(LCD_control_port,LCD_rw_pin, DIO_Low );
    1a02:	80 e0       	ldi	r24, 0x00	; 0
    1a04:	61 e0       	ldi	r22, 0x01	; 1
    1a06:	40 e0       	ldi	r20, 0x00	; 0
    1a08:	0e 94 4a 07 	call	0xe94	; 0xe94 <DIO_set_pin_value>

	for(int i=0;i<8;i++)
    1a0c:	18 8a       	std	Y+16, r1	; 0x10
    1a0e:	1f 86       	std	Y+15, r1	; 0x0f
    1a10:	16 c0       	rjmp	.+44     	; 0x1a3e <LCD_write+0x52>
	{
		DIO_set_pin_value(LCD_data_port, i , get_bit( value,i));
    1a12:	2f 85       	ldd	r18, Y+15	; 0x0f
    1a14:	89 89       	ldd	r24, Y+17	; 0x11
    1a16:	88 2f       	mov	r24, r24
    1a18:	90 e0       	ldi	r25, 0x00	; 0
    1a1a:	0f 84       	ldd	r0, Y+15	; 0x0f
    1a1c:	02 c0       	rjmp	.+4      	; 0x1a22 <LCD_write+0x36>
    1a1e:	95 95       	asr	r25
    1a20:	87 95       	ror	r24
    1a22:	0a 94       	dec	r0
    1a24:	e2 f7       	brpl	.-8      	; 0x1a1e <LCD_write+0x32>
    1a26:	98 2f       	mov	r25, r24
    1a28:	91 70       	andi	r25, 0x01	; 1
    1a2a:	83 e0       	ldi	r24, 0x03	; 3
    1a2c:	62 2f       	mov	r22, r18
    1a2e:	49 2f       	mov	r20, r25
    1a30:	0e 94 4a 07 	call	0xe94	; 0xe94 <DIO_set_pin_value>

void LCD_write(U8 value)
{
	DIO_set_pin_value(LCD_control_port,LCD_rw_pin, DIO_Low );

	for(int i=0;i<8;i++)
    1a34:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a36:	98 89       	ldd	r25, Y+16	; 0x10
    1a38:	01 96       	adiw	r24, 0x01	; 1
    1a3a:	98 8b       	std	Y+16, r25	; 0x10
    1a3c:	8f 87       	std	Y+15, r24	; 0x0f
    1a3e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a40:	98 89       	ldd	r25, Y+16	; 0x10
    1a42:	88 30       	cpi	r24, 0x08	; 8
    1a44:	91 05       	cpc	r25, r1
    1a46:	2c f3       	brlt	.-54     	; 0x1a12 <LCD_write+0x26>
	{
		DIO_set_pin_value(LCD_data_port, i , get_bit( value,i));

	}

	DIO_set_pin_value(LCD_control_port,LCD_E_pin, DIO_High);
    1a48:	80 e0       	ldi	r24, 0x00	; 0
    1a4a:	62 e0       	ldi	r22, 0x02	; 2
    1a4c:	41 e0       	ldi	r20, 0x01	; 1
    1a4e:	0e 94 4a 07 	call	0xe94	; 0xe94 <DIO_set_pin_value>
    1a52:	80 e0       	ldi	r24, 0x00	; 0
    1a54:	90 e0       	ldi	r25, 0x00	; 0
    1a56:	a0 e8       	ldi	r26, 0x80	; 128
    1a58:	bf e3       	ldi	r27, 0x3F	; 63
    1a5a:	8b 87       	std	Y+11, r24	; 0x0b
    1a5c:	9c 87       	std	Y+12, r25	; 0x0c
    1a5e:	ad 87       	std	Y+13, r26	; 0x0d
    1a60:	be 87       	std	Y+14, r27	; 0x0e
    1a62:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a64:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a66:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a68:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a6a:	20 e0       	ldi	r18, 0x00	; 0
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	4a ef       	ldi	r20, 0xFA	; 250
    1a70:	54 e4       	ldi	r21, 0x44	; 68
    1a72:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a76:	dc 01       	movw	r26, r24
    1a78:	cb 01       	movw	r24, r22
    1a7a:	8f 83       	std	Y+7, r24	; 0x07
    1a7c:	98 87       	std	Y+8, r25	; 0x08
    1a7e:	a9 87       	std	Y+9, r26	; 0x09
    1a80:	ba 87       	std	Y+10, r27	; 0x0a
    1a82:	6f 81       	ldd	r22, Y+7	; 0x07
    1a84:	78 85       	ldd	r23, Y+8	; 0x08
    1a86:	89 85       	ldd	r24, Y+9	; 0x09
    1a88:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a8a:	20 e0       	ldi	r18, 0x00	; 0
    1a8c:	30 e0       	ldi	r19, 0x00	; 0
    1a8e:	40 e8       	ldi	r20, 0x80	; 128
    1a90:	5f e3       	ldi	r21, 0x3F	; 63
    1a92:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1a96:	88 23       	and	r24, r24
    1a98:	2c f4       	brge	.+10     	; 0x1aa4 <LCD_write+0xb8>
    1a9a:	81 e0       	ldi	r24, 0x01	; 1
    1a9c:	90 e0       	ldi	r25, 0x00	; 0
    1a9e:	9e 83       	std	Y+6, r25	; 0x06
    1aa0:	8d 83       	std	Y+5, r24	; 0x05
    1aa2:	3f c0       	rjmp	.+126    	; 0x1b22 <LCD_write+0x136>
    1aa4:	6f 81       	ldd	r22, Y+7	; 0x07
    1aa6:	78 85       	ldd	r23, Y+8	; 0x08
    1aa8:	89 85       	ldd	r24, Y+9	; 0x09
    1aaa:	9a 85       	ldd	r25, Y+10	; 0x0a
    1aac:	20 e0       	ldi	r18, 0x00	; 0
    1aae:	3f ef       	ldi	r19, 0xFF	; 255
    1ab0:	4f e7       	ldi	r20, 0x7F	; 127
    1ab2:	57 e4       	ldi	r21, 0x47	; 71
    1ab4:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1ab8:	18 16       	cp	r1, r24
    1aba:	4c f5       	brge	.+82     	; 0x1b0e <LCD_write+0x122>
    1abc:	6b 85       	ldd	r22, Y+11	; 0x0b
    1abe:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ac0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ac2:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ac4:	20 e0       	ldi	r18, 0x00	; 0
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	40 e2       	ldi	r20, 0x20	; 32
    1aca:	51 e4       	ldi	r21, 0x41	; 65
    1acc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ad0:	dc 01       	movw	r26, r24
    1ad2:	cb 01       	movw	r24, r22
    1ad4:	bc 01       	movw	r22, r24
    1ad6:	cd 01       	movw	r24, r26
    1ad8:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1adc:	dc 01       	movw	r26, r24
    1ade:	cb 01       	movw	r24, r22
    1ae0:	9e 83       	std	Y+6, r25	; 0x06
    1ae2:	8d 83       	std	Y+5, r24	; 0x05
    1ae4:	0f c0       	rjmp	.+30     	; 0x1b04 <LCD_write+0x118>
    1ae6:	88 ec       	ldi	r24, 0xC8	; 200
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	9c 83       	std	Y+4, r25	; 0x04
    1aec:	8b 83       	std	Y+3, r24	; 0x03
    1aee:	8b 81       	ldd	r24, Y+3	; 0x03
    1af0:	9c 81       	ldd	r25, Y+4	; 0x04
    1af2:	01 97       	sbiw	r24, 0x01	; 1
    1af4:	f1 f7       	brne	.-4      	; 0x1af2 <LCD_write+0x106>
    1af6:	9c 83       	std	Y+4, r25	; 0x04
    1af8:	8b 83       	std	Y+3, r24	; 0x03
    1afa:	8d 81       	ldd	r24, Y+5	; 0x05
    1afc:	9e 81       	ldd	r25, Y+6	; 0x06
    1afe:	01 97       	sbiw	r24, 0x01	; 1
    1b00:	9e 83       	std	Y+6, r25	; 0x06
    1b02:	8d 83       	std	Y+5, r24	; 0x05
    1b04:	8d 81       	ldd	r24, Y+5	; 0x05
    1b06:	9e 81       	ldd	r25, Y+6	; 0x06
    1b08:	00 97       	sbiw	r24, 0x00	; 0
    1b0a:	69 f7       	brne	.-38     	; 0x1ae6 <LCD_write+0xfa>
    1b0c:	14 c0       	rjmp	.+40     	; 0x1b36 <LCD_write+0x14a>
    1b0e:	6f 81       	ldd	r22, Y+7	; 0x07
    1b10:	78 85       	ldd	r23, Y+8	; 0x08
    1b12:	89 85       	ldd	r24, Y+9	; 0x09
    1b14:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b16:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b1a:	dc 01       	movw	r26, r24
    1b1c:	cb 01       	movw	r24, r22
    1b1e:	9e 83       	std	Y+6, r25	; 0x06
    1b20:	8d 83       	std	Y+5, r24	; 0x05
    1b22:	8d 81       	ldd	r24, Y+5	; 0x05
    1b24:	9e 81       	ldd	r25, Y+6	; 0x06
    1b26:	9a 83       	std	Y+2, r25	; 0x02
    1b28:	89 83       	std	Y+1, r24	; 0x01
    1b2a:	89 81       	ldd	r24, Y+1	; 0x01
    1b2c:	9a 81       	ldd	r25, Y+2	; 0x02
    1b2e:	01 97       	sbiw	r24, 0x01	; 1
    1b30:	f1 f7       	brne	.-4      	; 0x1b2e <LCD_write+0x142>
    1b32:	9a 83       	std	Y+2, r25	; 0x02
    1b34:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_set_pin_value(LCD_control_port,LCD_E_pin,  DIO_Low);
    1b36:	80 e0       	ldi	r24, 0x00	; 0
    1b38:	62 e0       	ldi	r22, 0x02	; 2
    1b3a:	40 e0       	ldi	r20, 0x00	; 0
    1b3c:	0e 94 4a 07 	call	0xe94	; 0xe94 <DIO_set_pin_value>
}
    1b40:	61 96       	adiw	r28, 0x11	; 17
    1b42:	0f b6       	in	r0, 0x3f	; 63
    1b44:	f8 94       	cli
    1b46:	de bf       	out	0x3e, r29	; 62
    1b48:	0f be       	out	0x3f, r0	; 63
    1b4a:	cd bf       	out	0x3d, r28	; 61
    1b4c:	cf 91       	pop	r28
    1b4e:	df 91       	pop	r29
    1b50:	08 95       	ret

00001b52 <LCD_initial>:

void LCD_initial(void)
{
    1b52:	0f 93       	push	r16
    1b54:	1f 93       	push	r17
    1b56:	df 93       	push	r29
    1b58:	cf 93       	push	r28
    1b5a:	cd b7       	in	r28, 0x3d	; 61
    1b5c:	de b7       	in	r29, 0x3e	; 62
    1b5e:	cc 54       	subi	r28, 0x4C	; 76
    1b60:	d0 40       	sbci	r29, 0x00	; 0
    1b62:	0f b6       	in	r0, 0x3f	; 63
    1b64:	f8 94       	cli
    1b66:	de bf       	out	0x3e, r29	; 62
    1b68:	0f be       	out	0x3f, r0	; 63
    1b6a:	cd bf       	out	0x3d, r28	; 61
	DIO_set_port_direction(LCD_data_port, DIO_Max_port_direction);
    1b6c:	83 e0       	ldi	r24, 0x03	; 3
    1b6e:	6f ef       	ldi	r22, 0xFF	; 255
    1b70:	0e 94 90 08 	call	0x1120	; 0x1120 <DIO_set_port_direction>

	DIO_set_pin_direction(LCD_control_port ,LCD_rs_pin ,DIO_Output);
    1b74:	80 e0       	ldi	r24, 0x00	; 0
    1b76:	60 e0       	ldi	r22, 0x00	; 0
    1b78:	41 e0       	ldi	r20, 0x01	; 1
    1b7a:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_set_pin_direction>

    DIO_set_pin_direction(LCD_control_port,LCD_rw_pin,DIO_Output);
    1b7e:	80 e0       	ldi	r24, 0x00	; 0
    1b80:	61 e0       	ldi	r22, 0x01	; 1
    1b82:	41 e0       	ldi	r20, 0x01	; 1
    1b84:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_set_pin_direction>

    DIO_set_pin_direction(LCD_control_port,LCD_E_pin,DIO_Output);
    1b88:	80 e0       	ldi	r24, 0x00	; 0
    1b8a:	62 e0       	ldi	r22, 0x02	; 2
    1b8c:	41 e0       	ldi	r20, 0x01	; 1
    1b8e:	0e 94 4f 06 	call	0xc9e	; 0xc9e <DIO_set_pin_direction>
    1b92:	fe 01       	movw	r30, r28
    1b94:	e7 5b       	subi	r30, 0xB7	; 183
    1b96:	ff 4f       	sbci	r31, 0xFF	; 255
    1b98:	80 e0       	ldi	r24, 0x00	; 0
    1b9a:	90 e0       	ldi	r25, 0x00	; 0
    1b9c:	a0 e2       	ldi	r26, 0x20	; 32
    1b9e:	b2 e4       	ldi	r27, 0x42	; 66
    1ba0:	80 83       	st	Z, r24
    1ba2:	91 83       	std	Z+1, r25	; 0x01
    1ba4:	a2 83       	std	Z+2, r26	; 0x02
    1ba6:	b3 83       	std	Z+3, r27	; 0x03
    1ba8:	8e 01       	movw	r16, r28
    1baa:	0b 5b       	subi	r16, 0xBB	; 187
    1bac:	1f 4f       	sbci	r17, 0xFF	; 255
    1bae:	fe 01       	movw	r30, r28
    1bb0:	e7 5b       	subi	r30, 0xB7	; 183
    1bb2:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb4:	60 81       	ld	r22, Z
    1bb6:	71 81       	ldd	r23, Z+1	; 0x01
    1bb8:	82 81       	ldd	r24, Z+2	; 0x02
    1bba:	93 81       	ldd	r25, Z+3	; 0x03
    1bbc:	20 e0       	ldi	r18, 0x00	; 0
    1bbe:	30 e0       	ldi	r19, 0x00	; 0
    1bc0:	4a ef       	ldi	r20, 0xFA	; 250
    1bc2:	54 e4       	ldi	r21, 0x44	; 68
    1bc4:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1bc8:	dc 01       	movw	r26, r24
    1bca:	cb 01       	movw	r24, r22
    1bcc:	f8 01       	movw	r30, r16
    1bce:	80 83       	st	Z, r24
    1bd0:	91 83       	std	Z+1, r25	; 0x01
    1bd2:	a2 83       	std	Z+2, r26	; 0x02
    1bd4:	b3 83       	std	Z+3, r27	; 0x03
    1bd6:	fe 01       	movw	r30, r28
    1bd8:	eb 5b       	subi	r30, 0xBB	; 187
    1bda:	ff 4f       	sbci	r31, 0xFF	; 255
    1bdc:	60 81       	ld	r22, Z
    1bde:	71 81       	ldd	r23, Z+1	; 0x01
    1be0:	82 81       	ldd	r24, Z+2	; 0x02
    1be2:	93 81       	ldd	r25, Z+3	; 0x03
    1be4:	20 e0       	ldi	r18, 0x00	; 0
    1be6:	30 e0       	ldi	r19, 0x00	; 0
    1be8:	40 e8       	ldi	r20, 0x80	; 128
    1bea:	5f e3       	ldi	r21, 0x3F	; 63
    1bec:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1bf0:	88 23       	and	r24, r24
    1bf2:	44 f4       	brge	.+16     	; 0x1c04 <LCD_initial+0xb2>
    1bf4:	fe 01       	movw	r30, r28
    1bf6:	ed 5b       	subi	r30, 0xBD	; 189
    1bf8:	ff 4f       	sbci	r31, 0xFF	; 255
    1bfa:	81 e0       	ldi	r24, 0x01	; 1
    1bfc:	90 e0       	ldi	r25, 0x00	; 0
    1bfe:	91 83       	std	Z+1, r25	; 0x01
    1c00:	80 83       	st	Z, r24
    1c02:	64 c0       	rjmp	.+200    	; 0x1ccc <LCD_initial+0x17a>
    1c04:	fe 01       	movw	r30, r28
    1c06:	eb 5b       	subi	r30, 0xBB	; 187
    1c08:	ff 4f       	sbci	r31, 0xFF	; 255
    1c0a:	60 81       	ld	r22, Z
    1c0c:	71 81       	ldd	r23, Z+1	; 0x01
    1c0e:	82 81       	ldd	r24, Z+2	; 0x02
    1c10:	93 81       	ldd	r25, Z+3	; 0x03
    1c12:	20 e0       	ldi	r18, 0x00	; 0
    1c14:	3f ef       	ldi	r19, 0xFF	; 255
    1c16:	4f e7       	ldi	r20, 0x7F	; 127
    1c18:	57 e4       	ldi	r21, 0x47	; 71
    1c1a:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1c1e:	18 16       	cp	r1, r24
    1c20:	0c f0       	brlt	.+2      	; 0x1c24 <LCD_initial+0xd2>
    1c22:	43 c0       	rjmp	.+134    	; 0x1caa <LCD_initial+0x158>
    1c24:	fe 01       	movw	r30, r28
    1c26:	e7 5b       	subi	r30, 0xB7	; 183
    1c28:	ff 4f       	sbci	r31, 0xFF	; 255
    1c2a:	60 81       	ld	r22, Z
    1c2c:	71 81       	ldd	r23, Z+1	; 0x01
    1c2e:	82 81       	ldd	r24, Z+2	; 0x02
    1c30:	93 81       	ldd	r25, Z+3	; 0x03
    1c32:	20 e0       	ldi	r18, 0x00	; 0
    1c34:	30 e0       	ldi	r19, 0x00	; 0
    1c36:	40 e2       	ldi	r20, 0x20	; 32
    1c38:	51 e4       	ldi	r21, 0x41	; 65
    1c3a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1c3e:	dc 01       	movw	r26, r24
    1c40:	cb 01       	movw	r24, r22
    1c42:	8e 01       	movw	r16, r28
    1c44:	0d 5b       	subi	r16, 0xBD	; 189
    1c46:	1f 4f       	sbci	r17, 0xFF	; 255
    1c48:	bc 01       	movw	r22, r24
    1c4a:	cd 01       	movw	r24, r26
    1c4c:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1c50:	dc 01       	movw	r26, r24
    1c52:	cb 01       	movw	r24, r22
    1c54:	f8 01       	movw	r30, r16
    1c56:	91 83       	std	Z+1, r25	; 0x01
    1c58:	80 83       	st	Z, r24
    1c5a:	1f c0       	rjmp	.+62     	; 0x1c9a <LCD_initial+0x148>
    1c5c:	fe 01       	movw	r30, r28
    1c5e:	ef 5b       	subi	r30, 0xBF	; 191
    1c60:	ff 4f       	sbci	r31, 0xFF	; 255
    1c62:	88 ec       	ldi	r24, 0xC8	; 200
    1c64:	90 e0       	ldi	r25, 0x00	; 0
    1c66:	91 83       	std	Z+1, r25	; 0x01
    1c68:	80 83       	st	Z, r24
    1c6a:	fe 01       	movw	r30, r28
    1c6c:	ef 5b       	subi	r30, 0xBF	; 191
    1c6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c70:	80 81       	ld	r24, Z
    1c72:	91 81       	ldd	r25, Z+1	; 0x01
    1c74:	01 97       	sbiw	r24, 0x01	; 1
    1c76:	f1 f7       	brne	.-4      	; 0x1c74 <LCD_initial+0x122>
    1c78:	fe 01       	movw	r30, r28
    1c7a:	ef 5b       	subi	r30, 0xBF	; 191
    1c7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c7e:	91 83       	std	Z+1, r25	; 0x01
    1c80:	80 83       	st	Z, r24
    1c82:	de 01       	movw	r26, r28
    1c84:	ad 5b       	subi	r26, 0xBD	; 189
    1c86:	bf 4f       	sbci	r27, 0xFF	; 255
    1c88:	fe 01       	movw	r30, r28
    1c8a:	ed 5b       	subi	r30, 0xBD	; 189
    1c8c:	ff 4f       	sbci	r31, 0xFF	; 255
    1c8e:	80 81       	ld	r24, Z
    1c90:	91 81       	ldd	r25, Z+1	; 0x01
    1c92:	01 97       	sbiw	r24, 0x01	; 1
    1c94:	11 96       	adiw	r26, 0x01	; 1
    1c96:	9c 93       	st	X, r25
    1c98:	8e 93       	st	-X, r24
    1c9a:	fe 01       	movw	r30, r28
    1c9c:	ed 5b       	subi	r30, 0xBD	; 189
    1c9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1ca0:	80 81       	ld	r24, Z
    1ca2:	91 81       	ldd	r25, Z+1	; 0x01
    1ca4:	00 97       	sbiw	r24, 0x00	; 0
    1ca6:	d1 f6       	brne	.-76     	; 0x1c5c <LCD_initial+0x10a>
    1ca8:	24 c0       	rjmp	.+72     	; 0x1cf2 <LCD_initial+0x1a0>
    1caa:	8e 01       	movw	r16, r28
    1cac:	0d 5b       	subi	r16, 0xBD	; 189
    1cae:	1f 4f       	sbci	r17, 0xFF	; 255
    1cb0:	fe 01       	movw	r30, r28
    1cb2:	eb 5b       	subi	r30, 0xBB	; 187
    1cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb6:	60 81       	ld	r22, Z
    1cb8:	71 81       	ldd	r23, Z+1	; 0x01
    1cba:	82 81       	ldd	r24, Z+2	; 0x02
    1cbc:	93 81       	ldd	r25, Z+3	; 0x03
    1cbe:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1cc2:	dc 01       	movw	r26, r24
    1cc4:	cb 01       	movw	r24, r22
    1cc6:	f8 01       	movw	r30, r16
    1cc8:	91 83       	std	Z+1, r25	; 0x01
    1cca:	80 83       	st	Z, r24
    1ccc:	fe 01       	movw	r30, r28
    1cce:	ed 5b       	subi	r30, 0xBD	; 189
    1cd0:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd2:	80 81       	ld	r24, Z
    1cd4:	91 81       	ldd	r25, Z+1	; 0x01
    1cd6:	fe 01       	movw	r30, r28
    1cd8:	ff 96       	adiw	r30, 0x3f	; 63
    1cda:	91 83       	std	Z+1, r25	; 0x01
    1cdc:	80 83       	st	Z, r24
    1cde:	fe 01       	movw	r30, r28
    1ce0:	ff 96       	adiw	r30, 0x3f	; 63
    1ce2:	80 81       	ld	r24, Z
    1ce4:	91 81       	ldd	r25, Z+1	; 0x01
    1ce6:	01 97       	sbiw	r24, 0x01	; 1
    1ce8:	f1 f7       	brne	.-4      	; 0x1ce6 <LCD_initial+0x194>
    1cea:	fe 01       	movw	r30, r28
    1cec:	ff 96       	adiw	r30, 0x3f	; 63
    1cee:	91 83       	std	Z+1, r25	; 0x01
    1cf0:	80 83       	st	Z, r24

    _delay_ms(40);
    LCD_write_cmd(0b00111000);
    1cf2:	88 e3       	ldi	r24, 0x38	; 56
    1cf4:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_write_cmd>
    1cf8:	80 e0       	ldi	r24, 0x00	; 0
    1cfa:	90 e0       	ldi	r25, 0x00	; 0
    1cfc:	a8 e4       	ldi	r26, 0x48	; 72
    1cfe:	b2 e4       	ldi	r27, 0x42	; 66
    1d00:	8b af       	std	Y+59, r24	; 0x3b
    1d02:	9c af       	std	Y+60, r25	; 0x3c
    1d04:	ad af       	std	Y+61, r26	; 0x3d
    1d06:	be af       	std	Y+62, r27	; 0x3e
    1d08:	6b ad       	ldd	r22, Y+59	; 0x3b
    1d0a:	7c ad       	ldd	r23, Y+60	; 0x3c
    1d0c:	8d ad       	ldd	r24, Y+61	; 0x3d
    1d0e:	9e ad       	ldd	r25, Y+62	; 0x3e
    1d10:	2b ea       	ldi	r18, 0xAB	; 171
    1d12:	3a ea       	ldi	r19, 0xAA	; 170
    1d14:	4a e2       	ldi	r20, 0x2A	; 42
    1d16:	50 e4       	ldi	r21, 0x40	; 64
    1d18:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d1c:	dc 01       	movw	r26, r24
    1d1e:	cb 01       	movw	r24, r22
    1d20:	8f ab       	std	Y+55, r24	; 0x37
    1d22:	98 af       	std	Y+56, r25	; 0x38
    1d24:	a9 af       	std	Y+57, r26	; 0x39
    1d26:	ba af       	std	Y+58, r27	; 0x3a
    1d28:	6f a9       	ldd	r22, Y+55	; 0x37
    1d2a:	78 ad       	ldd	r23, Y+56	; 0x38
    1d2c:	89 ad       	ldd	r24, Y+57	; 0x39
    1d2e:	9a ad       	ldd	r25, Y+58	; 0x3a
    1d30:	20 e0       	ldi	r18, 0x00	; 0
    1d32:	30 e0       	ldi	r19, 0x00	; 0
    1d34:	40 e8       	ldi	r20, 0x80	; 128
    1d36:	5f e3       	ldi	r21, 0x3F	; 63
    1d38:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1d3c:	88 23       	and	r24, r24
    1d3e:	1c f4       	brge	.+6      	; 0x1d46 <LCD_initial+0x1f4>
    1d40:	81 e0       	ldi	r24, 0x01	; 1
    1d42:	8e ab       	std	Y+54, r24	; 0x36
    1d44:	91 c0       	rjmp	.+290    	; 0x1e68 <LCD_initial+0x316>
    1d46:	6f a9       	ldd	r22, Y+55	; 0x37
    1d48:	78 ad       	ldd	r23, Y+56	; 0x38
    1d4a:	89 ad       	ldd	r24, Y+57	; 0x39
    1d4c:	9a ad       	ldd	r25, Y+58	; 0x3a
    1d4e:	20 e0       	ldi	r18, 0x00	; 0
    1d50:	30 e0       	ldi	r19, 0x00	; 0
    1d52:	4f e7       	ldi	r20, 0x7F	; 127
    1d54:	53 e4       	ldi	r21, 0x43	; 67
    1d56:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1d5a:	18 16       	cp	r1, r24
    1d5c:	0c f0       	brlt	.+2      	; 0x1d60 <LCD_initial+0x20e>
    1d5e:	7b c0       	rjmp	.+246    	; 0x1e56 <LCD_initial+0x304>
    1d60:	6b ad       	ldd	r22, Y+59	; 0x3b
    1d62:	7c ad       	ldd	r23, Y+60	; 0x3c
    1d64:	8d ad       	ldd	r24, Y+61	; 0x3d
    1d66:	9e ad       	ldd	r25, Y+62	; 0x3e
    1d68:	20 e0       	ldi	r18, 0x00	; 0
    1d6a:	30 e0       	ldi	r19, 0x00	; 0
    1d6c:	4a e7       	ldi	r20, 0x7A	; 122
    1d6e:	54 e4       	ldi	r21, 0x44	; 68
    1d70:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1d74:	dc 01       	movw	r26, r24
    1d76:	cb 01       	movw	r24, r22
    1d78:	8a ab       	std	Y+50, r24	; 0x32
    1d7a:	9b ab       	std	Y+51, r25	; 0x33
    1d7c:	ac ab       	std	Y+52, r26	; 0x34
    1d7e:	bd ab       	std	Y+53, r27	; 0x35
    1d80:	6a a9       	ldd	r22, Y+50	; 0x32
    1d82:	7b a9       	ldd	r23, Y+51	; 0x33
    1d84:	8c a9       	ldd	r24, Y+52	; 0x34
    1d86:	9d a9       	ldd	r25, Y+53	; 0x35
    1d88:	20 e0       	ldi	r18, 0x00	; 0
    1d8a:	30 e0       	ldi	r19, 0x00	; 0
    1d8c:	4a ef       	ldi	r20, 0xFA	; 250
    1d8e:	54 e4       	ldi	r21, 0x44	; 68
    1d90:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d94:	dc 01       	movw	r26, r24
    1d96:	cb 01       	movw	r24, r22
    1d98:	8e a7       	std	Y+46, r24	; 0x2e
    1d9a:	9f a7       	std	Y+47, r25	; 0x2f
    1d9c:	a8 ab       	std	Y+48, r26	; 0x30
    1d9e:	b9 ab       	std	Y+49, r27	; 0x31
    1da0:	6e a5       	ldd	r22, Y+46	; 0x2e
    1da2:	7f a5       	ldd	r23, Y+47	; 0x2f
    1da4:	88 a9       	ldd	r24, Y+48	; 0x30
    1da6:	99 a9       	ldd	r25, Y+49	; 0x31
    1da8:	20 e0       	ldi	r18, 0x00	; 0
    1daa:	30 e0       	ldi	r19, 0x00	; 0
    1dac:	40 e8       	ldi	r20, 0x80	; 128
    1dae:	5f e3       	ldi	r21, 0x3F	; 63
    1db0:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1db4:	88 23       	and	r24, r24
    1db6:	2c f4       	brge	.+10     	; 0x1dc2 <LCD_initial+0x270>
    1db8:	81 e0       	ldi	r24, 0x01	; 1
    1dba:	90 e0       	ldi	r25, 0x00	; 0
    1dbc:	9d a7       	std	Y+45, r25	; 0x2d
    1dbe:	8c a7       	std	Y+44, r24	; 0x2c
    1dc0:	3f c0       	rjmp	.+126    	; 0x1e40 <LCD_initial+0x2ee>
    1dc2:	6e a5       	ldd	r22, Y+46	; 0x2e
    1dc4:	7f a5       	ldd	r23, Y+47	; 0x2f
    1dc6:	88 a9       	ldd	r24, Y+48	; 0x30
    1dc8:	99 a9       	ldd	r25, Y+49	; 0x31
    1dca:	20 e0       	ldi	r18, 0x00	; 0
    1dcc:	3f ef       	ldi	r19, 0xFF	; 255
    1dce:	4f e7       	ldi	r20, 0x7F	; 127
    1dd0:	57 e4       	ldi	r21, 0x47	; 71
    1dd2:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1dd6:	18 16       	cp	r1, r24
    1dd8:	4c f5       	brge	.+82     	; 0x1e2c <LCD_initial+0x2da>
    1dda:	6a a9       	ldd	r22, Y+50	; 0x32
    1ddc:	7b a9       	ldd	r23, Y+51	; 0x33
    1dde:	8c a9       	ldd	r24, Y+52	; 0x34
    1de0:	9d a9       	ldd	r25, Y+53	; 0x35
    1de2:	20 e0       	ldi	r18, 0x00	; 0
    1de4:	30 e0       	ldi	r19, 0x00	; 0
    1de6:	40 e2       	ldi	r20, 0x20	; 32
    1de8:	51 e4       	ldi	r21, 0x41	; 65
    1dea:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1dee:	dc 01       	movw	r26, r24
    1df0:	cb 01       	movw	r24, r22
    1df2:	bc 01       	movw	r22, r24
    1df4:	cd 01       	movw	r24, r26
    1df6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1dfa:	dc 01       	movw	r26, r24
    1dfc:	cb 01       	movw	r24, r22
    1dfe:	9d a7       	std	Y+45, r25	; 0x2d
    1e00:	8c a7       	std	Y+44, r24	; 0x2c
    1e02:	0f c0       	rjmp	.+30     	; 0x1e22 <LCD_initial+0x2d0>
    1e04:	88 ec       	ldi	r24, 0xC8	; 200
    1e06:	90 e0       	ldi	r25, 0x00	; 0
    1e08:	9b a7       	std	Y+43, r25	; 0x2b
    1e0a:	8a a7       	std	Y+42, r24	; 0x2a
    1e0c:	8a a5       	ldd	r24, Y+42	; 0x2a
    1e0e:	9b a5       	ldd	r25, Y+43	; 0x2b
    1e10:	01 97       	sbiw	r24, 0x01	; 1
    1e12:	f1 f7       	brne	.-4      	; 0x1e10 <LCD_initial+0x2be>
    1e14:	9b a7       	std	Y+43, r25	; 0x2b
    1e16:	8a a7       	std	Y+42, r24	; 0x2a
    1e18:	8c a5       	ldd	r24, Y+44	; 0x2c
    1e1a:	9d a5       	ldd	r25, Y+45	; 0x2d
    1e1c:	01 97       	sbiw	r24, 0x01	; 1
    1e1e:	9d a7       	std	Y+45, r25	; 0x2d
    1e20:	8c a7       	std	Y+44, r24	; 0x2c
    1e22:	8c a5       	ldd	r24, Y+44	; 0x2c
    1e24:	9d a5       	ldd	r25, Y+45	; 0x2d
    1e26:	00 97       	sbiw	r24, 0x00	; 0
    1e28:	69 f7       	brne	.-38     	; 0x1e04 <LCD_initial+0x2b2>
    1e2a:	24 c0       	rjmp	.+72     	; 0x1e74 <LCD_initial+0x322>
    1e2c:	6e a5       	ldd	r22, Y+46	; 0x2e
    1e2e:	7f a5       	ldd	r23, Y+47	; 0x2f
    1e30:	88 a9       	ldd	r24, Y+48	; 0x30
    1e32:	99 a9       	ldd	r25, Y+49	; 0x31
    1e34:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e38:	dc 01       	movw	r26, r24
    1e3a:	cb 01       	movw	r24, r22
    1e3c:	9d a7       	std	Y+45, r25	; 0x2d
    1e3e:	8c a7       	std	Y+44, r24	; 0x2c
    1e40:	8c a5       	ldd	r24, Y+44	; 0x2c
    1e42:	9d a5       	ldd	r25, Y+45	; 0x2d
    1e44:	99 a7       	std	Y+41, r25	; 0x29
    1e46:	88 a7       	std	Y+40, r24	; 0x28
    1e48:	88 a5       	ldd	r24, Y+40	; 0x28
    1e4a:	99 a5       	ldd	r25, Y+41	; 0x29
    1e4c:	01 97       	sbiw	r24, 0x01	; 1
    1e4e:	f1 f7       	brne	.-4      	; 0x1e4c <LCD_initial+0x2fa>
    1e50:	99 a7       	std	Y+41, r25	; 0x29
    1e52:	88 a7       	std	Y+40, r24	; 0x28
    1e54:	0f c0       	rjmp	.+30     	; 0x1e74 <LCD_initial+0x322>
    1e56:	6f a9       	ldd	r22, Y+55	; 0x37
    1e58:	78 ad       	ldd	r23, Y+56	; 0x38
    1e5a:	89 ad       	ldd	r24, Y+57	; 0x39
    1e5c:	9a ad       	ldd	r25, Y+58	; 0x3a
    1e5e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1e62:	dc 01       	movw	r26, r24
    1e64:	cb 01       	movw	r24, r22
    1e66:	8e ab       	std	Y+54, r24	; 0x36
    1e68:	8e a9       	ldd	r24, Y+54	; 0x36
    1e6a:	8f a3       	std	Y+39, r24	; 0x27
    1e6c:	8f a1       	ldd	r24, Y+39	; 0x27
    1e6e:	8a 95       	dec	r24
    1e70:	f1 f7       	brne	.-4      	; 0x1e6e <LCD_initial+0x31c>
    1e72:	8f a3       	std	Y+39, r24	; 0x27
    _delay_us(50);
    LCD_write_cmd(0b00001100);
    1e74:	8c e0       	ldi	r24, 0x0C	; 12
    1e76:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_write_cmd>
    1e7a:	80 e0       	ldi	r24, 0x00	; 0
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	a8 e4       	ldi	r26, 0x48	; 72
    1e80:	b2 e4       	ldi	r27, 0x42	; 66
    1e82:	8b a3       	std	Y+35, r24	; 0x23
    1e84:	9c a3       	std	Y+36, r25	; 0x24
    1e86:	ad a3       	std	Y+37, r26	; 0x25
    1e88:	be a3       	std	Y+38, r27	; 0x26
    1e8a:	6b a1       	ldd	r22, Y+35	; 0x23
    1e8c:	7c a1       	ldd	r23, Y+36	; 0x24
    1e8e:	8d a1       	ldd	r24, Y+37	; 0x25
    1e90:	9e a1       	ldd	r25, Y+38	; 0x26
    1e92:	2b ea       	ldi	r18, 0xAB	; 171
    1e94:	3a ea       	ldi	r19, 0xAA	; 170
    1e96:	4a e2       	ldi	r20, 0x2A	; 42
    1e98:	50 e4       	ldi	r21, 0x40	; 64
    1e9a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1e9e:	dc 01       	movw	r26, r24
    1ea0:	cb 01       	movw	r24, r22
    1ea2:	8f 8f       	std	Y+31, r24	; 0x1f
    1ea4:	98 a3       	std	Y+32, r25	; 0x20
    1ea6:	a9 a3       	std	Y+33, r26	; 0x21
    1ea8:	ba a3       	std	Y+34, r27	; 0x22
    1eaa:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1eac:	78 a1       	ldd	r23, Y+32	; 0x20
    1eae:	89 a1       	ldd	r24, Y+33	; 0x21
    1eb0:	9a a1       	ldd	r25, Y+34	; 0x22
    1eb2:	20 e0       	ldi	r18, 0x00	; 0
    1eb4:	30 e0       	ldi	r19, 0x00	; 0
    1eb6:	40 e8       	ldi	r20, 0x80	; 128
    1eb8:	5f e3       	ldi	r21, 0x3F	; 63
    1eba:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1ebe:	88 23       	and	r24, r24
    1ec0:	1c f4       	brge	.+6      	; 0x1ec8 <LCD_initial+0x376>
    1ec2:	81 e0       	ldi	r24, 0x01	; 1
    1ec4:	8e 8f       	std	Y+30, r24	; 0x1e
    1ec6:	91 c0       	rjmp	.+290    	; 0x1fea <LCD_initial+0x498>
    1ec8:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1eca:	78 a1       	ldd	r23, Y+32	; 0x20
    1ecc:	89 a1       	ldd	r24, Y+33	; 0x21
    1ece:	9a a1       	ldd	r25, Y+34	; 0x22
    1ed0:	20 e0       	ldi	r18, 0x00	; 0
    1ed2:	30 e0       	ldi	r19, 0x00	; 0
    1ed4:	4f e7       	ldi	r20, 0x7F	; 127
    1ed6:	53 e4       	ldi	r21, 0x43	; 67
    1ed8:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1edc:	18 16       	cp	r1, r24
    1ede:	0c f0       	brlt	.+2      	; 0x1ee2 <LCD_initial+0x390>
    1ee0:	7b c0       	rjmp	.+246    	; 0x1fd8 <LCD_initial+0x486>
    1ee2:	6b a1       	ldd	r22, Y+35	; 0x23
    1ee4:	7c a1       	ldd	r23, Y+36	; 0x24
    1ee6:	8d a1       	ldd	r24, Y+37	; 0x25
    1ee8:	9e a1       	ldd	r25, Y+38	; 0x26
    1eea:	20 e0       	ldi	r18, 0x00	; 0
    1eec:	30 e0       	ldi	r19, 0x00	; 0
    1eee:	4a e7       	ldi	r20, 0x7A	; 122
    1ef0:	54 e4       	ldi	r21, 0x44	; 68
    1ef2:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1ef6:	dc 01       	movw	r26, r24
    1ef8:	cb 01       	movw	r24, r22
    1efa:	8a 8f       	std	Y+26, r24	; 0x1a
    1efc:	9b 8f       	std	Y+27, r25	; 0x1b
    1efe:	ac 8f       	std	Y+28, r26	; 0x1c
    1f00:	bd 8f       	std	Y+29, r27	; 0x1d
    1f02:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1f04:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1f06:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1f08:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1f0a:	20 e0       	ldi	r18, 0x00	; 0
    1f0c:	30 e0       	ldi	r19, 0x00	; 0
    1f0e:	4a ef       	ldi	r20, 0xFA	; 250
    1f10:	54 e4       	ldi	r21, 0x44	; 68
    1f12:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f16:	dc 01       	movw	r26, r24
    1f18:	cb 01       	movw	r24, r22
    1f1a:	8e 8b       	std	Y+22, r24	; 0x16
    1f1c:	9f 8b       	std	Y+23, r25	; 0x17
    1f1e:	a8 8f       	std	Y+24, r26	; 0x18
    1f20:	b9 8f       	std	Y+25, r27	; 0x19
    1f22:	6e 89       	ldd	r22, Y+22	; 0x16
    1f24:	7f 89       	ldd	r23, Y+23	; 0x17
    1f26:	88 8d       	ldd	r24, Y+24	; 0x18
    1f28:	99 8d       	ldd	r25, Y+25	; 0x19
    1f2a:	20 e0       	ldi	r18, 0x00	; 0
    1f2c:	30 e0       	ldi	r19, 0x00	; 0
    1f2e:	40 e8       	ldi	r20, 0x80	; 128
    1f30:	5f e3       	ldi	r21, 0x3F	; 63
    1f32:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    1f36:	88 23       	and	r24, r24
    1f38:	2c f4       	brge	.+10     	; 0x1f44 <LCD_initial+0x3f2>
    1f3a:	81 e0       	ldi	r24, 0x01	; 1
    1f3c:	90 e0       	ldi	r25, 0x00	; 0
    1f3e:	9d 8b       	std	Y+21, r25	; 0x15
    1f40:	8c 8b       	std	Y+20, r24	; 0x14
    1f42:	3f c0       	rjmp	.+126    	; 0x1fc2 <LCD_initial+0x470>
    1f44:	6e 89       	ldd	r22, Y+22	; 0x16
    1f46:	7f 89       	ldd	r23, Y+23	; 0x17
    1f48:	88 8d       	ldd	r24, Y+24	; 0x18
    1f4a:	99 8d       	ldd	r25, Y+25	; 0x19
    1f4c:	20 e0       	ldi	r18, 0x00	; 0
    1f4e:	3f ef       	ldi	r19, 0xFF	; 255
    1f50:	4f e7       	ldi	r20, 0x7F	; 127
    1f52:	57 e4       	ldi	r21, 0x47	; 71
    1f54:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    1f58:	18 16       	cp	r1, r24
    1f5a:	4c f5       	brge	.+82     	; 0x1fae <LCD_initial+0x45c>
    1f5c:	6a 8d       	ldd	r22, Y+26	; 0x1a
    1f5e:	7b 8d       	ldd	r23, Y+27	; 0x1b
    1f60:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1f62:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1f64:	20 e0       	ldi	r18, 0x00	; 0
    1f66:	30 e0       	ldi	r19, 0x00	; 0
    1f68:	40 e2       	ldi	r20, 0x20	; 32
    1f6a:	51 e4       	ldi	r21, 0x41	; 65
    1f6c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1f70:	dc 01       	movw	r26, r24
    1f72:	cb 01       	movw	r24, r22
    1f74:	bc 01       	movw	r22, r24
    1f76:	cd 01       	movw	r24, r26
    1f78:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f7c:	dc 01       	movw	r26, r24
    1f7e:	cb 01       	movw	r24, r22
    1f80:	9d 8b       	std	Y+21, r25	; 0x15
    1f82:	8c 8b       	std	Y+20, r24	; 0x14
    1f84:	0f c0       	rjmp	.+30     	; 0x1fa4 <LCD_initial+0x452>
    1f86:	88 ec       	ldi	r24, 0xC8	; 200
    1f88:	90 e0       	ldi	r25, 0x00	; 0
    1f8a:	9b 8b       	std	Y+19, r25	; 0x13
    1f8c:	8a 8b       	std	Y+18, r24	; 0x12
    1f8e:	8a 89       	ldd	r24, Y+18	; 0x12
    1f90:	9b 89       	ldd	r25, Y+19	; 0x13
    1f92:	01 97       	sbiw	r24, 0x01	; 1
    1f94:	f1 f7       	brne	.-4      	; 0x1f92 <LCD_initial+0x440>
    1f96:	9b 8b       	std	Y+19, r25	; 0x13
    1f98:	8a 8b       	std	Y+18, r24	; 0x12
    1f9a:	8c 89       	ldd	r24, Y+20	; 0x14
    1f9c:	9d 89       	ldd	r25, Y+21	; 0x15
    1f9e:	01 97       	sbiw	r24, 0x01	; 1
    1fa0:	9d 8b       	std	Y+21, r25	; 0x15
    1fa2:	8c 8b       	std	Y+20, r24	; 0x14
    1fa4:	8c 89       	ldd	r24, Y+20	; 0x14
    1fa6:	9d 89       	ldd	r25, Y+21	; 0x15
    1fa8:	00 97       	sbiw	r24, 0x00	; 0
    1faa:	69 f7       	brne	.-38     	; 0x1f86 <LCD_initial+0x434>
    1fac:	24 c0       	rjmp	.+72     	; 0x1ff6 <LCD_initial+0x4a4>
    1fae:	6e 89       	ldd	r22, Y+22	; 0x16
    1fb0:	7f 89       	ldd	r23, Y+23	; 0x17
    1fb2:	88 8d       	ldd	r24, Y+24	; 0x18
    1fb4:	99 8d       	ldd	r25, Y+25	; 0x19
    1fb6:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fba:	dc 01       	movw	r26, r24
    1fbc:	cb 01       	movw	r24, r22
    1fbe:	9d 8b       	std	Y+21, r25	; 0x15
    1fc0:	8c 8b       	std	Y+20, r24	; 0x14
    1fc2:	8c 89       	ldd	r24, Y+20	; 0x14
    1fc4:	9d 89       	ldd	r25, Y+21	; 0x15
    1fc6:	99 8b       	std	Y+17, r25	; 0x11
    1fc8:	88 8b       	std	Y+16, r24	; 0x10
    1fca:	88 89       	ldd	r24, Y+16	; 0x10
    1fcc:	99 89       	ldd	r25, Y+17	; 0x11
    1fce:	01 97       	sbiw	r24, 0x01	; 1
    1fd0:	f1 f7       	brne	.-4      	; 0x1fce <LCD_initial+0x47c>
    1fd2:	99 8b       	std	Y+17, r25	; 0x11
    1fd4:	88 8b       	std	Y+16, r24	; 0x10
    1fd6:	0f c0       	rjmp	.+30     	; 0x1ff6 <LCD_initial+0x4a4>
    1fd8:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1fda:	78 a1       	ldd	r23, Y+32	; 0x20
    1fdc:	89 a1       	ldd	r24, Y+33	; 0x21
    1fde:	9a a1       	ldd	r25, Y+34	; 0x22
    1fe0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1fe4:	dc 01       	movw	r26, r24
    1fe6:	cb 01       	movw	r24, r22
    1fe8:	8e 8f       	std	Y+30, r24	; 0x1e
    1fea:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1fec:	8f 87       	std	Y+15, r24	; 0x0f
    1fee:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ff0:	8a 95       	dec	r24
    1ff2:	f1 f7       	brne	.-4      	; 0x1ff0 <LCD_initial+0x49e>
    1ff4:	8f 87       	std	Y+15, r24	; 0x0f
    _delay_us(50);
    LCD_write_cmd(0b00000001);
    1ff6:	81 e0       	ldi	r24, 0x01	; 1
    1ff8:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_write_cmd>
    1ffc:	80 e0       	ldi	r24, 0x00	; 0
    1ffe:	90 e0       	ldi	r25, 0x00	; 0
    2000:	a0 e0       	ldi	r26, 0x00	; 0
    2002:	b0 e4       	ldi	r27, 0x40	; 64
    2004:	8b 87       	std	Y+11, r24	; 0x0b
    2006:	9c 87       	std	Y+12, r25	; 0x0c
    2008:	ad 87       	std	Y+13, r26	; 0x0d
    200a:	be 87       	std	Y+14, r27	; 0x0e
    200c:	6b 85       	ldd	r22, Y+11	; 0x0b
    200e:	7c 85       	ldd	r23, Y+12	; 0x0c
    2010:	8d 85       	ldd	r24, Y+13	; 0x0d
    2012:	9e 85       	ldd	r25, Y+14	; 0x0e
    2014:	20 e0       	ldi	r18, 0x00	; 0
    2016:	30 e0       	ldi	r19, 0x00	; 0
    2018:	4a ef       	ldi	r20, 0xFA	; 250
    201a:	54 e4       	ldi	r21, 0x44	; 68
    201c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    2020:	dc 01       	movw	r26, r24
    2022:	cb 01       	movw	r24, r22
    2024:	8f 83       	std	Y+7, r24	; 0x07
    2026:	98 87       	std	Y+8, r25	; 0x08
    2028:	a9 87       	std	Y+9, r26	; 0x09
    202a:	ba 87       	std	Y+10, r27	; 0x0a
    202c:	6f 81       	ldd	r22, Y+7	; 0x07
    202e:	78 85       	ldd	r23, Y+8	; 0x08
    2030:	89 85       	ldd	r24, Y+9	; 0x09
    2032:	9a 85       	ldd	r25, Y+10	; 0x0a
    2034:	20 e0       	ldi	r18, 0x00	; 0
    2036:	30 e0       	ldi	r19, 0x00	; 0
    2038:	40 e8       	ldi	r20, 0x80	; 128
    203a:	5f e3       	ldi	r21, 0x3F	; 63
    203c:	0e 94 25 04 	call	0x84a	; 0x84a <__ltsf2>
    2040:	88 23       	and	r24, r24
    2042:	2c f4       	brge	.+10     	; 0x204e <LCD_initial+0x4fc>
    2044:	81 e0       	ldi	r24, 0x01	; 1
    2046:	90 e0       	ldi	r25, 0x00	; 0
    2048:	9e 83       	std	Y+6, r25	; 0x06
    204a:	8d 83       	std	Y+5, r24	; 0x05
    204c:	3f c0       	rjmp	.+126    	; 0x20cc <LCD_initial+0x57a>
    204e:	6f 81       	ldd	r22, Y+7	; 0x07
    2050:	78 85       	ldd	r23, Y+8	; 0x08
    2052:	89 85       	ldd	r24, Y+9	; 0x09
    2054:	9a 85       	ldd	r25, Y+10	; 0x0a
    2056:	20 e0       	ldi	r18, 0x00	; 0
    2058:	3f ef       	ldi	r19, 0xFF	; 255
    205a:	4f e7       	ldi	r20, 0x7F	; 127
    205c:	57 e4       	ldi	r21, 0x47	; 71
    205e:	0e 94 c5 03 	call	0x78a	; 0x78a <__gtsf2>
    2062:	18 16       	cp	r1, r24
    2064:	4c f5       	brge	.+82     	; 0x20b8 <LCD_initial+0x566>
    2066:	6b 85       	ldd	r22, Y+11	; 0x0b
    2068:	7c 85       	ldd	r23, Y+12	; 0x0c
    206a:	8d 85       	ldd	r24, Y+13	; 0x0d
    206c:	9e 85       	ldd	r25, Y+14	; 0x0e
    206e:	20 e0       	ldi	r18, 0x00	; 0
    2070:	30 e0       	ldi	r19, 0x00	; 0
    2072:	40 e2       	ldi	r20, 0x20	; 32
    2074:	51 e4       	ldi	r21, 0x41	; 65
    2076:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    207a:	dc 01       	movw	r26, r24
    207c:	cb 01       	movw	r24, r22
    207e:	bc 01       	movw	r22, r24
    2080:	cd 01       	movw	r24, r26
    2082:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    2086:	dc 01       	movw	r26, r24
    2088:	cb 01       	movw	r24, r22
    208a:	9e 83       	std	Y+6, r25	; 0x06
    208c:	8d 83       	std	Y+5, r24	; 0x05
    208e:	0f c0       	rjmp	.+30     	; 0x20ae <LCD_initial+0x55c>
    2090:	88 ec       	ldi	r24, 0xC8	; 200
    2092:	90 e0       	ldi	r25, 0x00	; 0
    2094:	9c 83       	std	Y+4, r25	; 0x04
    2096:	8b 83       	std	Y+3, r24	; 0x03
    2098:	8b 81       	ldd	r24, Y+3	; 0x03
    209a:	9c 81       	ldd	r25, Y+4	; 0x04
    209c:	01 97       	sbiw	r24, 0x01	; 1
    209e:	f1 f7       	brne	.-4      	; 0x209c <LCD_initial+0x54a>
    20a0:	9c 83       	std	Y+4, r25	; 0x04
    20a2:	8b 83       	std	Y+3, r24	; 0x03
    20a4:	8d 81       	ldd	r24, Y+5	; 0x05
    20a6:	9e 81       	ldd	r25, Y+6	; 0x06
    20a8:	01 97       	sbiw	r24, 0x01	; 1
    20aa:	9e 83       	std	Y+6, r25	; 0x06
    20ac:	8d 83       	std	Y+5, r24	; 0x05
    20ae:	8d 81       	ldd	r24, Y+5	; 0x05
    20b0:	9e 81       	ldd	r25, Y+6	; 0x06
    20b2:	00 97       	sbiw	r24, 0x00	; 0
    20b4:	69 f7       	brne	.-38     	; 0x2090 <LCD_initial+0x53e>
    20b6:	14 c0       	rjmp	.+40     	; 0x20e0 <LCD_initial+0x58e>
    20b8:	6f 81       	ldd	r22, Y+7	; 0x07
    20ba:	78 85       	ldd	r23, Y+8	; 0x08
    20bc:	89 85       	ldd	r24, Y+9	; 0x09
    20be:	9a 85       	ldd	r25, Y+10	; 0x0a
    20c0:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    20c4:	dc 01       	movw	r26, r24
    20c6:	cb 01       	movw	r24, r22
    20c8:	9e 83       	std	Y+6, r25	; 0x06
    20ca:	8d 83       	std	Y+5, r24	; 0x05
    20cc:	8d 81       	ldd	r24, Y+5	; 0x05
    20ce:	9e 81       	ldd	r25, Y+6	; 0x06
    20d0:	9a 83       	std	Y+2, r25	; 0x02
    20d2:	89 83       	std	Y+1, r24	; 0x01
    20d4:	89 81       	ldd	r24, Y+1	; 0x01
    20d6:	9a 81       	ldd	r25, Y+2	; 0x02
    20d8:	01 97       	sbiw	r24, 0x01	; 1
    20da:	f1 f7       	brne	.-4      	; 0x20d8 <LCD_initial+0x586>
    20dc:	9a 83       	std	Y+2, r25	; 0x02
    20de:	89 83       	std	Y+1, r24	; 0x01
    _delay_ms(2);
}
    20e0:	c4 5b       	subi	r28, 0xB4	; 180
    20e2:	df 4f       	sbci	r29, 0xFF	; 255
    20e4:	0f b6       	in	r0, 0x3f	; 63
    20e6:	f8 94       	cli
    20e8:	de bf       	out	0x3e, r29	; 62
    20ea:	0f be       	out	0x3f, r0	; 63
    20ec:	cd bf       	out	0x3d, r28	; 61
    20ee:	cf 91       	pop	r28
    20f0:	df 91       	pop	r29
    20f2:	1f 91       	pop	r17
    20f4:	0f 91       	pop	r16
    20f6:	08 95       	ret

000020f8 <LCD_write_string>:

// write string
void LCD_write_string(const char * string)
{
    20f8:	df 93       	push	r29
    20fa:	cf 93       	push	r28
    20fc:	00 d0       	rcall	.+0      	; 0x20fe <LCD_write_string+0x6>
    20fe:	0f 92       	push	r0
    2100:	cd b7       	in	r28, 0x3d	; 61
    2102:	de b7       	in	r29, 0x3e	; 62
    2104:	9b 83       	std	Y+3, r25	; 0x03
    2106:	8a 83       	std	Y+2, r24	; 0x02
	U8 counter=0;
    2108:	19 82       	std	Y+1, r1	; 0x01
    210a:	0e c0       	rjmp	.+28     	; 0x2128 <LCD_write_string+0x30>
	while(string[counter] != '\0')
	{
		LCD_write_data(string[counter]);
    210c:	89 81       	ldd	r24, Y+1	; 0x01
    210e:	28 2f       	mov	r18, r24
    2110:	30 e0       	ldi	r19, 0x00	; 0
    2112:	8a 81       	ldd	r24, Y+2	; 0x02
    2114:	9b 81       	ldd	r25, Y+3	; 0x03
    2116:	fc 01       	movw	r30, r24
    2118:	e2 0f       	add	r30, r18
    211a:	f3 1f       	adc	r31, r19
    211c:	80 81       	ld	r24, Z
    211e:	0e 94 e4 0c 	call	0x19c8	; 0x19c8 <LCD_write_data>
		counter++;
    2122:	89 81       	ldd	r24, Y+1	; 0x01
    2124:	8f 5f       	subi	r24, 0xFF	; 255
    2126:	89 83       	std	Y+1, r24	; 0x01

// write string
void LCD_write_string(const char * string)
{
	U8 counter=0;
	while(string[counter] != '\0')
    2128:	89 81       	ldd	r24, Y+1	; 0x01
    212a:	28 2f       	mov	r18, r24
    212c:	30 e0       	ldi	r19, 0x00	; 0
    212e:	8a 81       	ldd	r24, Y+2	; 0x02
    2130:	9b 81       	ldd	r25, Y+3	; 0x03
    2132:	fc 01       	movw	r30, r24
    2134:	e2 0f       	add	r30, r18
    2136:	f3 1f       	adc	r31, r19
    2138:	80 81       	ld	r24, Z
    213a:	88 23       	and	r24, r24
    213c:	39 f7       	brne	.-50     	; 0x210c <LCD_write_string+0x14>
	{
		LCD_write_data(string[counter]);
		counter++;
	}
}
    213e:	0f 90       	pop	r0
    2140:	0f 90       	pop	r0
    2142:	0f 90       	pop	r0
    2144:	cf 91       	pop	r28
    2146:	df 91       	pop	r29
    2148:	08 95       	ret

0000214a <LCD_pose_x_y>:

//shifting string possition

U8 LCD_pose_x_y(U8 x_pose,U8 y_pose)
{
    214a:	df 93       	push	r29
    214c:	cf 93       	push	r28
    214e:	00 d0       	rcall	.+0      	; 0x2150 <LCD_pose_x_y+0x6>
    2150:	00 d0       	rcall	.+0      	; 0x2152 <LCD_pose_x_y+0x8>
    2152:	cd b7       	in	r28, 0x3d	; 61
    2154:	de b7       	in	r29, 0x3e	; 62
    2156:	8b 83       	std	Y+3, r24	; 0x03
    2158:	6c 83       	std	Y+4, r22	; 0x04
	U8 local_adress;
	U8 error_state=0;
    215a:	19 82       	std	Y+1, r1	; 0x01
	if((x_pose<2)&& (y_pose<16))
    215c:	8b 81       	ldd	r24, Y+3	; 0x03
    215e:	82 30       	cpi	r24, 0x02	; 2
    2160:	a0 f4       	brcc	.+40     	; 0x218a <LCD_pose_x_y+0x40>
    2162:	8c 81       	ldd	r24, Y+4	; 0x04
    2164:	80 31       	cpi	r24, 0x10	; 16
    2166:	88 f4       	brcc	.+34     	; 0x218a <LCD_pose_x_y+0x40>
	{
	 if(x_pose==0)
    2168:	8b 81       	ldd	r24, Y+3	; 0x03
    216a:	88 23       	and	r24, r24
    216c:	19 f4       	brne	.+6      	; 0x2174 <LCD_pose_x_y+0x2a>
	  {
       //location at first line
		local_adress = y_pose;
    216e:	8c 81       	ldd	r24, Y+4	; 0x04
    2170:	8a 83       	std	Y+2, r24	; 0x02
    2172:	06 c0       	rjmp	.+12     	; 0x2180 <LCD_pose_x_y+0x36>
	   }
	else if(x_pose ==1)
    2174:	8b 81       	ldd	r24, Y+3	; 0x03
    2176:	81 30       	cpi	r24, 0x01	; 1
    2178:	19 f4       	brne	.+6      	; 0x2180 <LCD_pose_x_y+0x36>
	  {
	  	//location at second line
		local_adress= y_pose + 0x40;
    217a:	8c 81       	ldd	r24, Y+4	; 0x04
    217c:	80 5c       	subi	r24, 0xC0	; 192
    217e:	8a 83       	std	Y+2, r24	; 0x02
	  }
	LCD_write_cmd(local_adress+128);
    2180:	8a 81       	ldd	r24, Y+2	; 0x02
    2182:	80 58       	subi	r24, 0x80	; 128
    2184:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_write_cmd>
    2188:	02 c0       	rjmp	.+4      	; 0x218e <LCD_pose_x_y+0x44>
	}
	else
	{
		error_state=1;
    218a:	81 e0       	ldi	r24, 0x01	; 1
    218c:	89 83       	std	Y+1, r24	; 0x01
	}
	 return error_state;
    218e:	89 81       	ldd	r24, Y+1	; 0x01
}
    2190:	0f 90       	pop	r0
    2192:	0f 90       	pop	r0
    2194:	0f 90       	pop	r0
    2196:	0f 90       	pop	r0
    2198:	cf 91       	pop	r28
    219a:	df 91       	pop	r29
    219c:	08 95       	ret

0000219e <LCD_write_special_character>:

void LCD_write_special_character(U8 *pattern,U8 pattern_number,U8 x_pose,U8 y_pose)
{
    219e:	df 93       	push	r29
    21a0:	cf 93       	push	r28
    21a2:	cd b7       	in	r28, 0x3d	; 61
    21a4:	de b7       	in	r29, 0x3e	; 62
    21a6:	27 97       	sbiw	r28, 0x07	; 7
    21a8:	0f b6       	in	r0, 0x3f	; 63
    21aa:	f8 94       	cli
    21ac:	de bf       	out	0x3e, r29	; 62
    21ae:	0f be       	out	0x3f, r0	; 63
    21b0:	cd bf       	out	0x3d, r28	; 61
    21b2:	9c 83       	std	Y+4, r25	; 0x04
    21b4:	8b 83       	std	Y+3, r24	; 0x03
    21b6:	6d 83       	std	Y+5, r22	; 0x05
    21b8:	4e 83       	std	Y+6, r20	; 0x06
    21ba:	2f 83       	std	Y+7, r18	; 0x07
U8 local_CGRAMADDRESS = 0;
    21bc:	1a 82       	std	Y+2, r1	; 0x02
U8 iterator;

//calculate the CGRAM address whose each block 8 bytes
local_CGRAMADDRESS = pattern_number*8;
    21be:	8d 81       	ldd	r24, Y+5	; 0x05
    21c0:	88 2f       	mov	r24, r24
    21c2:	90 e0       	ldi	r25, 0x00	; 0
    21c4:	88 0f       	add	r24, r24
    21c6:	99 1f       	adc	r25, r25
    21c8:	88 0f       	add	r24, r24
    21ca:	99 1f       	adc	r25, r25
    21cc:	88 0f       	add	r24, r24
    21ce:	99 1f       	adc	r25, r25
    21d0:	8a 83       	std	Y+2, r24	; 0x02
LCD_write_cmd(local_CGRAMADDRESS+64);
    21d2:	8a 81       	ldd	r24, Y+2	; 0x02
    21d4:	80 5c       	subi	r24, 0xC0	; 192
    21d6:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_write_cmd>

// write pattern in CGRAM
for(iterator = 0;iterator<8;iterator++)
    21da:	19 82       	std	Y+1, r1	; 0x01
    21dc:	0e c0       	rjmp	.+28     	; 0x21fa <LCD_write_special_character+0x5c>
{
	 LCD_write_data(pattern[iterator]);
    21de:	89 81       	ldd	r24, Y+1	; 0x01
    21e0:	28 2f       	mov	r18, r24
    21e2:	30 e0       	ldi	r19, 0x00	; 0
    21e4:	8b 81       	ldd	r24, Y+3	; 0x03
    21e6:	9c 81       	ldd	r25, Y+4	; 0x04
    21e8:	fc 01       	movw	r30, r24
    21ea:	e2 0f       	add	r30, r18
    21ec:	f3 1f       	adc	r31, r19
    21ee:	80 81       	ld	r24, Z
    21f0:	0e 94 e4 0c 	call	0x19c8	; 0x19c8 <LCD_write_data>
//calculate the CGRAM address whose each block 8 bytes
local_CGRAMADDRESS = pattern_number*8;
LCD_write_cmd(local_CGRAMADDRESS+64);

// write pattern in CGRAM
for(iterator = 0;iterator<8;iterator++)
    21f4:	89 81       	ldd	r24, Y+1	; 0x01
    21f6:	8f 5f       	subi	r24, 0xFF	; 255
    21f8:	89 83       	std	Y+1, r24	; 0x01
    21fa:	89 81       	ldd	r24, Y+1	; 0x01
    21fc:	88 30       	cpi	r24, 0x08	; 8
    21fe:	78 f3       	brcs	.-34     	; 0x21de <LCD_write_special_character+0x40>
{
	 LCD_write_data(pattern[iterator]);

}
//go back to DDRAM to display patter
LCD_pose_x_y(x_pose,y_pose);
    2200:	8e 81       	ldd	r24, Y+6	; 0x06
    2202:	6f 81       	ldd	r22, Y+7	; 0x07
    2204:	0e 94 a5 10 	call	0x214a	; 0x214a <LCD_pose_x_y>


//display the pattern write in CGRAM
LCD_write_data(pattern_number);
    2208:	8d 81       	ldd	r24, Y+5	; 0x05
    220a:	0e 94 e4 0c 	call	0x19c8	; 0x19c8 <LCD_write_data>
}
    220e:	27 96       	adiw	r28, 0x07	; 7
    2210:	0f b6       	in	r0, 0x3f	; 63
    2212:	f8 94       	cli
    2214:	de bf       	out	0x3e, r29	; 62
    2216:	0f be       	out	0x3f, r0	; 63
    2218:	cd bf       	out	0x3d, r28	; 61
    221a:	cf 91       	pop	r28
    221c:	df 91       	pop	r29
    221e:	08 95       	ret

00002220 <LCD_clear>:

//function to clear the lcd
void LCD_clear(void)
{
    2220:	df 93       	push	r29
    2222:	cf 93       	push	r28
    2224:	cd b7       	in	r28, 0x3d	; 61
    2226:	de b7       	in	r29, 0x3e	; 62
	LCD_write_cmd(0b00000001);
    2228:	81 e0       	ldi	r24, 0x01	; 1
    222a:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <LCD_write_cmd>
}
    222e:	cf 91       	pop	r28
    2230:	df 91       	pop	r29
    2232:	08 95       	ret

00002234 <LCD_write_no>:




void LCD_write_no(U32 num){
    2234:	df 93       	push	r29
    2236:	cf 93       	push	r28
    2238:	cd b7       	in	r28, 0x3d	; 61
    223a:	de b7       	in	r29, 0x3e	; 62
    223c:	6b 97       	sbiw	r28, 0x1b	; 27
    223e:	0f b6       	in	r0, 0x3f	; 63
    2240:	f8 94       	cli
    2242:	de bf       	out	0x3e, r29	; 62
    2244:	0f be       	out	0x3f, r0	; 63
    2246:	cd bf       	out	0x3d, r28	; 61
    2248:	68 8f       	std	Y+24, r22	; 0x18
    224a:	79 8f       	std	Y+25, r23	; 0x19
    224c:	8a 8f       	std	Y+26, r24	; 0x1a
    224e:	9b 8f       	std	Y+27, r25	; 0x1b

	U8 rem,arr_index=0;
    2250:	1a 82       	std	Y+2, r1	; 0x02
	U8 length = 0;
    2252:	19 82       	std	Y+1, r1	; 0x01
    U8 str[20];
	if(num==0){
    2254:	88 8d       	ldd	r24, Y+24	; 0x18
    2256:	99 8d       	ldd	r25, Y+25	; 0x19
    2258:	aa 8d       	ldd	r26, Y+26	; 0x1a
    225a:	bb 8d       	ldd	r27, Y+27	; 0x1b
    225c:	00 97       	sbiw	r24, 0x00	; 0
    225e:	a1 05       	cpc	r26, r1
    2260:	b1 05       	cpc	r27, r1
    2262:	09 f0       	breq	.+2      	; 0x2266 <LCD_write_no+0x32>
    2264:	41 c0       	rjmp	.+130    	; 0x22e8 <LCD_write_no+0xb4>
		str[arr_index]='0';
    2266:	8a 81       	ldd	r24, Y+2	; 0x02
    2268:	28 2f       	mov	r18, r24
    226a:	30 e0       	ldi	r19, 0x00	; 0
    226c:	ce 01       	movw	r24, r28
    226e:	04 96       	adiw	r24, 0x04	; 4
    2270:	fc 01       	movw	r30, r24
    2272:	e2 0f       	add	r30, r18
    2274:	f3 1f       	adc	r31, r19
    2276:	80 e3       	ldi	r24, 0x30	; 48
    2278:	80 83       	st	Z, r24
		arr_index++;
    227a:	8a 81       	ldd	r24, Y+2	; 0x02
    227c:	8f 5f       	subi	r24, 0xFF	; 255
    227e:	8a 83       	std	Y+2, r24	; 0x02
    2280:	49 c0       	rjmp	.+146    	; 0x2314 <LCD_write_no+0xe0>
	}
	else{
		while(num!=0){
	rem=num%10;
    2282:	88 8d       	ldd	r24, Y+24	; 0x18
    2284:	99 8d       	ldd	r25, Y+25	; 0x19
    2286:	aa 8d       	ldd	r26, Y+26	; 0x1a
    2288:	bb 8d       	ldd	r27, Y+27	; 0x1b
    228a:	2a e0       	ldi	r18, 0x0A	; 10
    228c:	30 e0       	ldi	r19, 0x00	; 0
    228e:	40 e0       	ldi	r20, 0x00	; 0
    2290:	50 e0       	ldi	r21, 0x00	; 0
    2292:	bc 01       	movw	r22, r24
    2294:	cd 01       	movw	r24, r26
    2296:	0e 94 ae 12 	call	0x255c	; 0x255c <__udivmodsi4>
    229a:	dc 01       	movw	r26, r24
    229c:	cb 01       	movw	r24, r22
    229e:	8b 83       	std	Y+3, r24	; 0x03
	str[arr_index]=rem+'0';
    22a0:	8a 81       	ldd	r24, Y+2	; 0x02
    22a2:	28 2f       	mov	r18, r24
    22a4:	30 e0       	ldi	r19, 0x00	; 0
    22a6:	8b 81       	ldd	r24, Y+3	; 0x03
    22a8:	48 2f       	mov	r20, r24
    22aa:	40 5d       	subi	r20, 0xD0	; 208
    22ac:	ce 01       	movw	r24, r28
    22ae:	04 96       	adiw	r24, 0x04	; 4
    22b0:	fc 01       	movw	r30, r24
    22b2:	e2 0f       	add	r30, r18
    22b4:	f3 1f       	adc	r31, r19
    22b6:	40 83       	st	Z, r20
	arr_index++;
    22b8:	8a 81       	ldd	r24, Y+2	; 0x02
    22ba:	8f 5f       	subi	r24, 0xFF	; 255
    22bc:	8a 83       	std	Y+2, r24	; 0x02
	num=num/10;
    22be:	88 8d       	ldd	r24, Y+24	; 0x18
    22c0:	99 8d       	ldd	r25, Y+25	; 0x19
    22c2:	aa 8d       	ldd	r26, Y+26	; 0x1a
    22c4:	bb 8d       	ldd	r27, Y+27	; 0x1b
    22c6:	2a e0       	ldi	r18, 0x0A	; 10
    22c8:	30 e0       	ldi	r19, 0x00	; 0
    22ca:	40 e0       	ldi	r20, 0x00	; 0
    22cc:	50 e0       	ldi	r21, 0x00	; 0
    22ce:	bc 01       	movw	r22, r24
    22d0:	cd 01       	movw	r24, r26
    22d2:	0e 94 ae 12 	call	0x255c	; 0x255c <__udivmodsi4>
    22d6:	da 01       	movw	r26, r20
    22d8:	c9 01       	movw	r24, r18
    22da:	88 8f       	std	Y+24, r24	; 0x18
    22dc:	99 8f       	std	Y+25, r25	; 0x19
    22de:	aa 8f       	std	Y+26, r26	; 0x1a
    22e0:	bb 8f       	std	Y+27, r27	; 0x1b
	length++;
    22e2:	89 81       	ldd	r24, Y+1	; 0x01
    22e4:	8f 5f       	subi	r24, 0xFF	; 255
    22e6:	89 83       	std	Y+1, r24	; 0x01
	if(num==0){
		str[arr_index]='0';
		arr_index++;
	}
	else{
		while(num!=0){
    22e8:	88 8d       	ldd	r24, Y+24	; 0x18
    22ea:	99 8d       	ldd	r25, Y+25	; 0x19
    22ec:	aa 8d       	ldd	r26, Y+26	; 0x1a
    22ee:	bb 8d       	ldd	r27, Y+27	; 0x1b
    22f0:	00 97       	sbiw	r24, 0x00	; 0
    22f2:	a1 05       	cpc	r26, r1
    22f4:	b1 05       	cpc	r27, r1
    22f6:	29 f6       	brne	.-118    	; 0x2282 <LCD_write_no+0x4e>
	str[arr_index]=rem+'0';
	arr_index++;
	num=num/10;
	length++;
	}
		str[arr_index]='\0';
    22f8:	8a 81       	ldd	r24, Y+2	; 0x02
    22fa:	28 2f       	mov	r18, r24
    22fc:	30 e0       	ldi	r19, 0x00	; 0
    22fe:	ce 01       	movw	r24, r28
    2300:	04 96       	adiw	r24, 0x04	; 4
    2302:	fc 01       	movw	r30, r24
    2304:	e2 0f       	add	r30, r18
    2306:	f3 1f       	adc	r31, r19
    2308:	10 82       	st	Z, r1
		reverse(str,length);
    230a:	ce 01       	movw	r24, r28
    230c:	04 96       	adiw	r24, 0x04	; 4
    230e:	69 81       	ldd	r22, Y+1	; 0x01
    2310:	0e 94 93 11 	call	0x2326	; 0x2326 <reverse>
	}

}
    2314:	6b 96       	adiw	r28, 0x1b	; 27
    2316:	0f b6       	in	r0, 0x3f	; 63
    2318:	f8 94       	cli
    231a:	de bf       	out	0x3e, r29	; 62
    231c:	0f be       	out	0x3f, r0	; 63
    231e:	cd bf       	out	0x3d, r28	; 61
    2320:	cf 91       	pop	r28
    2322:	df 91       	pop	r29
    2324:	08 95       	ret

00002326 <reverse>:

void reverse(U8 *ptr,U8 length)
{
    2326:	df 93       	push	r29
    2328:	cf 93       	push	r28
    232a:	00 d0       	rcall	.+0      	; 0x232c <reverse+0x6>
    232c:	00 d0       	rcall	.+0      	; 0x232e <reverse+0x8>
    232e:	0f 92       	push	r0
    2330:	cd b7       	in	r28, 0x3d	; 61
    2332:	de b7       	in	r29, 0x3e	; 62
    2334:	9c 83       	std	Y+4, r25	; 0x04
    2336:	8b 83       	std	Y+3, r24	; 0x03
    2338:	6d 83       	std	Y+5, r22	; 0x05
  U8 start = 0;
    233a:	1a 82       	std	Y+2, r1	; 0x02
  U8 end = length-1;
    233c:	8d 81       	ldd	r24, Y+5	; 0x05
    233e:	81 50       	subi	r24, 0x01	; 1
    2340:	89 83       	std	Y+1, r24	; 0x01
    2342:	19 c0       	rjmp	.+50     	; 0x2376 <reverse+0x50>
  while(start<end)
  {

	  swap(&ptr[start],&ptr[end]);
    2344:	8a 81       	ldd	r24, Y+2	; 0x02
    2346:	28 2f       	mov	r18, r24
    2348:	30 e0       	ldi	r19, 0x00	; 0
    234a:	8b 81       	ldd	r24, Y+3	; 0x03
    234c:	9c 81       	ldd	r25, Y+4	; 0x04
    234e:	ac 01       	movw	r20, r24
    2350:	42 0f       	add	r20, r18
    2352:	53 1f       	adc	r21, r19
    2354:	89 81       	ldd	r24, Y+1	; 0x01
    2356:	28 2f       	mov	r18, r24
    2358:	30 e0       	ldi	r19, 0x00	; 0
    235a:	8b 81       	ldd	r24, Y+3	; 0x03
    235c:	9c 81       	ldd	r25, Y+4	; 0x04
    235e:	28 0f       	add	r18, r24
    2360:	39 1f       	adc	r19, r25
    2362:	ca 01       	movw	r24, r20
    2364:	b9 01       	movw	r22, r18
    2366:	0e 94 d1 11 	call	0x23a2	; 0x23a2 <swap>
	  start++;
    236a:	8a 81       	ldd	r24, Y+2	; 0x02
    236c:	8f 5f       	subi	r24, 0xFF	; 255
    236e:	8a 83       	std	Y+2, r24	; 0x02
	  end--;
    2370:	89 81       	ldd	r24, Y+1	; 0x01
    2372:	81 50       	subi	r24, 0x01	; 1
    2374:	89 83       	std	Y+1, r24	; 0x01

void reverse(U8 *ptr,U8 length)
{
  U8 start = 0;
  U8 end = length-1;
  while(start<end)
    2376:	9a 81       	ldd	r25, Y+2	; 0x02
    2378:	89 81       	ldd	r24, Y+1	; 0x01
    237a:	98 17       	cp	r25, r24
    237c:	18 f3       	brcs	.-58     	; 0x2344 <reverse+0x1e>

	  swap(&ptr[start],&ptr[end]);
	  start++;
	  end--;
  }
  num1 = ptr;
    237e:	8b 81       	ldd	r24, Y+3	; 0x03
    2380:	9c 81       	ldd	r25, Y+4	; 0x04
    2382:	90 93 9f 00 	sts	0x009F, r25
    2386:	80 93 9e 00 	sts	0x009E, r24
  LCD_write_string(ptr);
    238a:	8b 81       	ldd	r24, Y+3	; 0x03
    238c:	9c 81       	ldd	r25, Y+4	; 0x04
    238e:	0e 94 7c 10 	call	0x20f8	; 0x20f8 <LCD_write_string>
}
    2392:	0f 90       	pop	r0
    2394:	0f 90       	pop	r0
    2396:	0f 90       	pop	r0
    2398:	0f 90       	pop	r0
    239a:	0f 90       	pop	r0
    239c:	cf 91       	pop	r28
    239e:	df 91       	pop	r29
    23a0:	08 95       	ret

000023a2 <swap>:
 void swap(U8 * start, U8 * end)
 {
    23a2:	df 93       	push	r29
    23a4:	cf 93       	push	r28
    23a6:	00 d0       	rcall	.+0      	; 0x23a8 <swap+0x6>
    23a8:	00 d0       	rcall	.+0      	; 0x23aa <swap+0x8>
    23aa:	00 d0       	rcall	.+0      	; 0x23ac <swap+0xa>
    23ac:	cd b7       	in	r28, 0x3d	; 61
    23ae:	de b7       	in	r29, 0x3e	; 62
    23b0:	9c 83       	std	Y+4, r25	; 0x04
    23b2:	8b 83       	std	Y+3, r24	; 0x03
    23b4:	7e 83       	std	Y+6, r23	; 0x06
    23b6:	6d 83       	std	Y+5, r22	; 0x05
	 int z=0;
    23b8:	1a 82       	std	Y+2, r1	; 0x02
    23ba:	19 82       	std	Y+1, r1	; 0x01
	 z=*start;
    23bc:	eb 81       	ldd	r30, Y+3	; 0x03
    23be:	fc 81       	ldd	r31, Y+4	; 0x04
    23c0:	80 81       	ld	r24, Z
    23c2:	88 2f       	mov	r24, r24
    23c4:	90 e0       	ldi	r25, 0x00	; 0
    23c6:	9a 83       	std	Y+2, r25	; 0x02
    23c8:	89 83       	std	Y+1, r24	; 0x01
	 *start=*end;
    23ca:	ed 81       	ldd	r30, Y+5	; 0x05
    23cc:	fe 81       	ldd	r31, Y+6	; 0x06
    23ce:	80 81       	ld	r24, Z
    23d0:	eb 81       	ldd	r30, Y+3	; 0x03
    23d2:	fc 81       	ldd	r31, Y+4	; 0x04
    23d4:	80 83       	st	Z, r24
     *end=z;
    23d6:	89 81       	ldd	r24, Y+1	; 0x01
    23d8:	ed 81       	ldd	r30, Y+5	; 0x05
    23da:	fe 81       	ldd	r31, Y+6	; 0x06
    23dc:	80 83       	st	Z, r24
 }
    23de:	26 96       	adiw	r28, 0x06	; 6
    23e0:	0f b6       	in	r0, 0x3f	; 63
    23e2:	f8 94       	cli
    23e4:	de bf       	out	0x3e, r29	; 62
    23e6:	0f be       	out	0x3f, r0	; 63
    23e8:	cd bf       	out	0x3d, r28	; 61
    23ea:	cf 91       	pop	r28
    23ec:	df 91       	pop	r29
    23ee:	08 95       	ret

000023f0 <LCD_write_symbol>:

 void LCD_write_symbol(U32 symbol)
 {
    23f0:	df 93       	push	r29
    23f2:	cf 93       	push	r28
    23f4:	00 d0       	rcall	.+0      	; 0x23f6 <LCD_write_symbol+0x6>
    23f6:	00 d0       	rcall	.+0      	; 0x23f8 <LCD_write_symbol+0x8>
    23f8:	cd b7       	in	r28, 0x3d	; 61
    23fa:	de b7       	in	r29, 0x3e	; 62
    23fc:	69 83       	std	Y+1, r22	; 0x01
    23fe:	7a 83       	std	Y+2, r23	; 0x02
    2400:	8b 83       	std	Y+3, r24	; 0x03
    2402:	9c 83       	std	Y+4, r25	; 0x04
	 LCD_write_data(symbol);
    2404:	89 81       	ldd	r24, Y+1	; 0x01
    2406:	0e 94 e4 0c 	call	0x19c8	; 0x19c8 <LCD_write_data>
 }
    240a:	0f 90       	pop	r0
    240c:	0f 90       	pop	r0
    240e:	0f 90       	pop	r0
    2410:	0f 90       	pop	r0
    2412:	cf 91       	pop	r28
    2414:	df 91       	pop	r29
    2416:	08 95       	ret

00002418 <NumberOrSymbol>:

void NumberOrSymbol(U32 select)
{
    2418:	df 93       	push	r29
    241a:	cf 93       	push	r28
    241c:	00 d0       	rcall	.+0      	; 0x241e <NumberOrSymbol+0x6>
    241e:	00 d0       	rcall	.+0      	; 0x2420 <NumberOrSymbol+0x8>
    2420:	cd b7       	in	r28, 0x3d	; 61
    2422:	de b7       	in	r29, 0x3e	; 62
    2424:	69 83       	std	Y+1, r22	; 0x01
    2426:	7a 83       	std	Y+2, r23	; 0x02
    2428:	8b 83       	std	Y+3, r24	; 0x03
    242a:	9c 83       	std	Y+4, r25	; 0x04
	if( (select =='+') || (select =='-') || (select =='*') || (select =='/') || (select =='='))
    242c:	89 81       	ldd	r24, Y+1	; 0x01
    242e:	9a 81       	ldd	r25, Y+2	; 0x02
    2430:	ab 81       	ldd	r26, Y+3	; 0x03
    2432:	bc 81       	ldd	r27, Y+4	; 0x04
    2434:	8b 32       	cpi	r24, 0x2B	; 43
    2436:	91 05       	cpc	r25, r1
    2438:	a1 05       	cpc	r26, r1
    243a:	b1 05       	cpc	r27, r1
    243c:	21 f1       	breq	.+72     	; 0x2486 <NumberOrSymbol+0x6e>
    243e:	89 81       	ldd	r24, Y+1	; 0x01
    2440:	9a 81       	ldd	r25, Y+2	; 0x02
    2442:	ab 81       	ldd	r26, Y+3	; 0x03
    2444:	bc 81       	ldd	r27, Y+4	; 0x04
    2446:	8d 32       	cpi	r24, 0x2D	; 45
    2448:	91 05       	cpc	r25, r1
    244a:	a1 05       	cpc	r26, r1
    244c:	b1 05       	cpc	r27, r1
    244e:	d9 f0       	breq	.+54     	; 0x2486 <NumberOrSymbol+0x6e>
    2450:	89 81       	ldd	r24, Y+1	; 0x01
    2452:	9a 81       	ldd	r25, Y+2	; 0x02
    2454:	ab 81       	ldd	r26, Y+3	; 0x03
    2456:	bc 81       	ldd	r27, Y+4	; 0x04
    2458:	8a 32       	cpi	r24, 0x2A	; 42
    245a:	91 05       	cpc	r25, r1
    245c:	a1 05       	cpc	r26, r1
    245e:	b1 05       	cpc	r27, r1
    2460:	91 f0       	breq	.+36     	; 0x2486 <NumberOrSymbol+0x6e>
    2462:	89 81       	ldd	r24, Y+1	; 0x01
    2464:	9a 81       	ldd	r25, Y+2	; 0x02
    2466:	ab 81       	ldd	r26, Y+3	; 0x03
    2468:	bc 81       	ldd	r27, Y+4	; 0x04
    246a:	8f 32       	cpi	r24, 0x2F	; 47
    246c:	91 05       	cpc	r25, r1
    246e:	a1 05       	cpc	r26, r1
    2470:	b1 05       	cpc	r27, r1
    2472:	49 f0       	breq	.+18     	; 0x2486 <NumberOrSymbol+0x6e>
    2474:	89 81       	ldd	r24, Y+1	; 0x01
    2476:	9a 81       	ldd	r25, Y+2	; 0x02
    2478:	ab 81       	ldd	r26, Y+3	; 0x03
    247a:	bc 81       	ldd	r27, Y+4	; 0x04
    247c:	8d 33       	cpi	r24, 0x3D	; 61
    247e:	91 05       	cpc	r25, r1
    2480:	a1 05       	cpc	r26, r1
    2482:	b1 05       	cpc	r27, r1
    2484:	49 f4       	brne	.+18     	; 0x2498 <NumberOrSymbol+0x80>
	{
	   LCD_write_symbol(select);
    2486:	89 81       	ldd	r24, Y+1	; 0x01
    2488:	9a 81       	ldd	r25, Y+2	; 0x02
    248a:	ab 81       	ldd	r26, Y+3	; 0x03
    248c:	bc 81       	ldd	r27, Y+4	; 0x04
    248e:	bc 01       	movw	r22, r24
    2490:	cd 01       	movw	r24, r26
    2492:	0e 94 f8 11 	call	0x23f0	; 0x23f0 <LCD_write_symbol>
    2496:	14 c0       	rjmp	.+40     	; 0x24c0 <NumberOrSymbol+0xa8>
	}
	else if((select =='c'))
    2498:	89 81       	ldd	r24, Y+1	; 0x01
    249a:	9a 81       	ldd	r25, Y+2	; 0x02
    249c:	ab 81       	ldd	r26, Y+3	; 0x03
    249e:	bc 81       	ldd	r27, Y+4	; 0x04
    24a0:	83 36       	cpi	r24, 0x63	; 99
    24a2:	91 05       	cpc	r25, r1
    24a4:	a1 05       	cpc	r26, r1
    24a6:	b1 05       	cpc	r27, r1
    24a8:	19 f4       	brne	.+6      	; 0x24b0 <NumberOrSymbol+0x98>
	{
		LCD_clear();
    24aa:	0e 94 10 11 	call	0x2220	; 0x2220 <LCD_clear>
    24ae:	08 c0       	rjmp	.+16     	; 0x24c0 <NumberOrSymbol+0xa8>
	}

		else
		{
			LCD_write_no(select);
    24b0:	89 81       	ldd	r24, Y+1	; 0x01
    24b2:	9a 81       	ldd	r25, Y+2	; 0x02
    24b4:	ab 81       	ldd	r26, Y+3	; 0x03
    24b6:	bc 81       	ldd	r27, Y+4	; 0x04
    24b8:	bc 01       	movw	r22, r24
    24ba:	cd 01       	movw	r24, r26
    24bc:	0e 94 1a 11 	call	0x2234	; 0x2234 <LCD_write_no>
		}
	}
    24c0:	0f 90       	pop	r0
    24c2:	0f 90       	pop	r0
    24c4:	0f 90       	pop	r0
    24c6:	0f 90       	pop	r0
    24c8:	cf 91       	pop	r28
    24ca:	df 91       	pop	r29
    24cc:	08 95       	ret

000024ce <main>:
#include "DIO_interface.h"
#include "LCD_interface.h"
#include "KPD_interface.h"

void main(void)
{
    24ce:	df 93       	push	r29
    24d0:	cf 93       	push	r28
    24d2:	00 d0       	rcall	.+0      	; 0x24d4 <main+0x6>
    24d4:	00 d0       	rcall	.+0      	; 0x24d6 <main+0x8>
    24d6:	cd b7       	in	r28, 0x3d	; 61
    24d8:	de b7       	in	r29, 0x3e	; 62


	U32 local_key;
    KPD_init();
    24da:	0e 94 e7 09 	call	0x13ce	; 0x13ce <KPD_init>
    LCD_initial();
    24de:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <LCD_initial>
while(1)
{
  do
  {
   local_key = KPD_GetPressedKey();
    24e2:	0e 94 70 09 	call	0x12e0	; 0x12e0 <KPD_GetPressedKey>
    24e6:	88 2f       	mov	r24, r24
    24e8:	90 e0       	ldi	r25, 0x00	; 0
    24ea:	a0 e0       	ldi	r26, 0x00	; 0
    24ec:	b0 e0       	ldi	r27, 0x00	; 0
    24ee:	89 83       	std	Y+1, r24	; 0x01
    24f0:	9a 83       	std	Y+2, r25	; 0x02
    24f2:	ab 83       	std	Y+3, r26	; 0x03
    24f4:	bc 83       	std	Y+4, r27	; 0x04
  }while(local_key == 0);
    24f6:	89 81       	ldd	r24, Y+1	; 0x01
    24f8:	9a 81       	ldd	r25, Y+2	; 0x02
    24fa:	ab 81       	ldd	r26, Y+3	; 0x03
    24fc:	bc 81       	ldd	r27, Y+4	; 0x04
    24fe:	00 97       	sbiw	r24, 0x00	; 0
    2500:	a1 05       	cpc	r26, r1
    2502:	b1 05       	cpc	r27, r1
    2504:	71 f3       	breq	.-36     	; 0x24e2 <main+0x14>

  NumberOrSymbol(local_key);
    2506:	89 81       	ldd	r24, Y+1	; 0x01
    2508:	9a 81       	ldd	r25, Y+2	; 0x02
    250a:	ab 81       	ldd	r26, Y+3	; 0x03
    250c:	bc 81       	ldd	r27, Y+4	; 0x04
    250e:	bc 01       	movw	r22, r24
    2510:	cd 01       	movw	r24, r26
    2512:	0e 94 0c 12 	call	0x2418	; 0x2418 <NumberOrSymbol>
  string_conc(local_key);
    2516:	89 81       	ldd	r24, Y+1	; 0x01
    2518:	0e 94 28 0a 	call	0x1450	; 0x1450 <string_conc>
    251c:	e2 cf       	rjmp	.-60     	; 0x24e2 <main+0x14>

0000251e <__mulsi3>:
    251e:	62 9f       	mul	r22, r18
    2520:	d0 01       	movw	r26, r0
    2522:	73 9f       	mul	r23, r19
    2524:	f0 01       	movw	r30, r0
    2526:	82 9f       	mul	r24, r18
    2528:	e0 0d       	add	r30, r0
    252a:	f1 1d       	adc	r31, r1
    252c:	64 9f       	mul	r22, r20
    252e:	e0 0d       	add	r30, r0
    2530:	f1 1d       	adc	r31, r1
    2532:	92 9f       	mul	r25, r18
    2534:	f0 0d       	add	r31, r0
    2536:	83 9f       	mul	r24, r19
    2538:	f0 0d       	add	r31, r0
    253a:	74 9f       	mul	r23, r20
    253c:	f0 0d       	add	r31, r0
    253e:	65 9f       	mul	r22, r21
    2540:	f0 0d       	add	r31, r0
    2542:	99 27       	eor	r25, r25
    2544:	72 9f       	mul	r23, r18
    2546:	b0 0d       	add	r27, r0
    2548:	e1 1d       	adc	r30, r1
    254a:	f9 1f       	adc	r31, r25
    254c:	63 9f       	mul	r22, r19
    254e:	b0 0d       	add	r27, r0
    2550:	e1 1d       	adc	r30, r1
    2552:	f9 1f       	adc	r31, r25
    2554:	bd 01       	movw	r22, r26
    2556:	cf 01       	movw	r24, r30
    2558:	11 24       	eor	r1, r1
    255a:	08 95       	ret

0000255c <__udivmodsi4>:
    255c:	a1 e2       	ldi	r26, 0x21	; 33
    255e:	1a 2e       	mov	r1, r26
    2560:	aa 1b       	sub	r26, r26
    2562:	bb 1b       	sub	r27, r27
    2564:	fd 01       	movw	r30, r26
    2566:	0d c0       	rjmp	.+26     	; 0x2582 <__udivmodsi4_ep>

00002568 <__udivmodsi4_loop>:
    2568:	aa 1f       	adc	r26, r26
    256a:	bb 1f       	adc	r27, r27
    256c:	ee 1f       	adc	r30, r30
    256e:	ff 1f       	adc	r31, r31
    2570:	a2 17       	cp	r26, r18
    2572:	b3 07       	cpc	r27, r19
    2574:	e4 07       	cpc	r30, r20
    2576:	f5 07       	cpc	r31, r21
    2578:	20 f0       	brcs	.+8      	; 0x2582 <__udivmodsi4_ep>
    257a:	a2 1b       	sub	r26, r18
    257c:	b3 0b       	sbc	r27, r19
    257e:	e4 0b       	sbc	r30, r20
    2580:	f5 0b       	sbc	r31, r21

00002582 <__udivmodsi4_ep>:
    2582:	66 1f       	adc	r22, r22
    2584:	77 1f       	adc	r23, r23
    2586:	88 1f       	adc	r24, r24
    2588:	99 1f       	adc	r25, r25
    258a:	1a 94       	dec	r1
    258c:	69 f7       	brne	.-38     	; 0x2568 <__udivmodsi4_loop>
    258e:	60 95       	com	r22
    2590:	70 95       	com	r23
    2592:	80 95       	com	r24
    2594:	90 95       	com	r25
    2596:	9b 01       	movw	r18, r22
    2598:	ac 01       	movw	r20, r24
    259a:	bd 01       	movw	r22, r26
    259c:	cf 01       	movw	r24, r30
    259e:	08 95       	ret

000025a0 <__prologue_saves__>:
    25a0:	2f 92       	push	r2
    25a2:	3f 92       	push	r3
    25a4:	4f 92       	push	r4
    25a6:	5f 92       	push	r5
    25a8:	6f 92       	push	r6
    25aa:	7f 92       	push	r7
    25ac:	8f 92       	push	r8
    25ae:	9f 92       	push	r9
    25b0:	af 92       	push	r10
    25b2:	bf 92       	push	r11
    25b4:	cf 92       	push	r12
    25b6:	df 92       	push	r13
    25b8:	ef 92       	push	r14
    25ba:	ff 92       	push	r15
    25bc:	0f 93       	push	r16
    25be:	1f 93       	push	r17
    25c0:	cf 93       	push	r28
    25c2:	df 93       	push	r29
    25c4:	cd b7       	in	r28, 0x3d	; 61
    25c6:	de b7       	in	r29, 0x3e	; 62
    25c8:	ca 1b       	sub	r28, r26
    25ca:	db 0b       	sbc	r29, r27
    25cc:	0f b6       	in	r0, 0x3f	; 63
    25ce:	f8 94       	cli
    25d0:	de bf       	out	0x3e, r29	; 62
    25d2:	0f be       	out	0x3f, r0	; 63
    25d4:	cd bf       	out	0x3d, r28	; 61
    25d6:	09 94       	ijmp

000025d8 <__epilogue_restores__>:
    25d8:	2a 88       	ldd	r2, Y+18	; 0x12
    25da:	39 88       	ldd	r3, Y+17	; 0x11
    25dc:	48 88       	ldd	r4, Y+16	; 0x10
    25de:	5f 84       	ldd	r5, Y+15	; 0x0f
    25e0:	6e 84       	ldd	r6, Y+14	; 0x0e
    25e2:	7d 84       	ldd	r7, Y+13	; 0x0d
    25e4:	8c 84       	ldd	r8, Y+12	; 0x0c
    25e6:	9b 84       	ldd	r9, Y+11	; 0x0b
    25e8:	aa 84       	ldd	r10, Y+10	; 0x0a
    25ea:	b9 84       	ldd	r11, Y+9	; 0x09
    25ec:	c8 84       	ldd	r12, Y+8	; 0x08
    25ee:	df 80       	ldd	r13, Y+7	; 0x07
    25f0:	ee 80       	ldd	r14, Y+6	; 0x06
    25f2:	fd 80       	ldd	r15, Y+5	; 0x05
    25f4:	0c 81       	ldd	r16, Y+4	; 0x04
    25f6:	1b 81       	ldd	r17, Y+3	; 0x03
    25f8:	aa 81       	ldd	r26, Y+2	; 0x02
    25fa:	b9 81       	ldd	r27, Y+1	; 0x01
    25fc:	ce 0f       	add	r28, r30
    25fe:	d1 1d       	adc	r29, r1
    2600:	0f b6       	in	r0, 0x3f	; 63
    2602:	f8 94       	cli
    2604:	de bf       	out	0x3e, r29	; 62
    2606:	0f be       	out	0x3f, r0	; 63
    2608:	cd bf       	out	0x3d, r28	; 61
    260a:	ed 01       	movw	r28, r26
    260c:	08 95       	ret

0000260e <_exit>:
    260e:	f8 94       	cli

00002610 <__stop_program>:
    2610:	ff cf       	rjmp	.-2      	; 0x2610 <__stop_program>
